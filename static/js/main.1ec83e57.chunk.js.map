{"version":3,"sources":["../../../Programming/js/UESaveTool/models/factories/PropertyFactory.js","../../../Programming/js/UESaveTool/utils/Serializer.js","../../../Programming/js/UESaveTool/models/properties/Property.js","../../../Programming/js/UESaveTool/models/properties/BoolProperty.js","../../../Programming/js/UESaveTool/models/properties/IntProperty.js","../../../Programming/js/UESaveTool/models/properties/FloatProperty.js","../../../Programming/js/UESaveTool/models/properties/StrProperty.js","../../../Programming/js/UESaveTool/models/properties/ObjectProperty.js","../../../Programming/js/UESaveTool/models/properties/SoftObjectProperty.js","../../../Programming/js/UESaveTool/models/properties/StructProperty.js","../../../Programming/js/UESaveTool/models/properties/ArrayProperty.js","../../../Programming/js/UESaveTool/models/properties/EnumProperty.js","../../../Programming/js/UESaveTool/models/properties/Tuple.js","../../../Programming/js/UESaveTool/models/properties/Guid.js","../../../Programming/js/UESaveTool/index.js","../../../Programming/js/UESaveTool/models/PropertyErrors.js","../../../Programming/js/UESaveTool/models/arrays/IntArray.js","../../../Programming/js/UESaveTool/models/arrays/SoftObjectArray.js","../../../Programming/js/UESaveTool/models/arrays/StructArray.js","../../../Programming/js/UESaveTool/models/index.js","../../../Programming/js/UESaveTool/utils/index.js","../../../Programming/js/UESaveTool/models/Gvas.js","../../../Programming/js/UESaveTool/models/GvasHeader.js","components/context.js","components/dropdowns/characters.js","components/dropdowns/difficulties.js","components/seed/seedfield.js","../../../Programming/js/bpm-ssg/src/Prng.js","../../../Programming/js/bpm-ssg/src/CharacterPropertyStore.js","../../../Programming/js/bpm-ssg/src/RunPropertyStore.js","../../../Programming/js/bpm-ssg/src/PropertyStore.js","../../../Programming/js/bpm-ssg/src/ContinueStateV2.js","../../../Programming/js/bpm-ssg/src/ItemWeightPair.js","../../../Programming/js/bpm-ssg/index.js","components/generate/generate.js","App.js","reportWebVitals.js","index.js"],"names":["PropertyFactory","this","Properties","Arrays","ctor","name","obj","type","Type","split","undefined","TypeNotImplementedError","from","Serializer","buf","_data","_offset","count","length","Error","tell","toString","Data","slice","seek","int","readInt32LE","readInt16LE","readUInt8","float","readFloatLE","readInt32","read","copy","num","writeInt32LE","writeInt16LE","byte","writeUInt8","writeFloatLE","str","write","Buffer","concat","size","alloc","Property","Name","serial","json","BoolProperty","Size","writeString","SerializationError","prop","Object","assign","IntProperty","writeInt32","FloatProperty","readFloat","writeFloat","StrProperty","readString","ObjectProperty","SoftObjectProperty","StructProperty","StoredPropertyType","i","console","log","end","create","deserialize","push","HeaderSize","serialize","struct","forEach","ArrayProperty","readInt16","createArray","ArraySize","writeInt16","Count","array","EnumProperty","EnumType","Tuple","tuple","Guid","Id","Value","swap32","swap16","guid","IntArray","SoftObjectArray","StructArray","Gvas","Header","GvasHeader","format","compare","SaveGameType","gvas","Format","SaveGameVersion","PackageVersion","EngineVersion","Major","Minor","Patch","Build","BuildId","CustomFormatVersion","CustomFormatData","Entries","header","StateContext","React","createContext","seed","char","diff","Characters","props","state","handleChange","bind","e","target","value","setState","context","className","style","styles","id","onChange","Component","contextType","Difficulties","SeedField","placeholder","Prng","_prng","init","prng_alea","int32","int16","quick","range","min","max","Math","floor","choose","values","val","includes","shuffle","map","w","sort","a","b","destroy","CharacterPropertyStore","PropertyStore","addProperty","list","selection","ITEMS","filter","p","CHARSTORE","index","opts","loadout","entries","REQUIREMENTS","LOADOUT","abilities","storeditems","selectItem","all","ret","BPMCharacterPropertyStore","T_CHARSTORE","toLowerCase","RANDCHAR","genChar","genLoadout","RunPropertyStore","RUNSTORE","DIFFICULTY","toUpperCase","item_pool","ITEMPOOL","item_weight_pair","item","weight","find","ItemWeightPair","Item","Weight","gen","FloorGenerationSeeds","mod","FloorModifierFloats","play","FloorPlaySeeds","room","assignFloor","f","has","POOLS","pool","genItemPool","Difficulty","genSeeds","ROOMS","r","genRooms","findIndex","ContinueStateV2","T_GVAS_HEADER","SAVESLOT","s","c","d","save","Slot","generate","args","seededGen","GenerateButton","url","filename","handleClick","JSON","stringify","savedata","bpmssg","file","File","URL","createObjectURL","dofileDownload","click","revokeObjectURL","window","location","reload","alert","onClick","display","download","href","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLA4BaA,EAAkB,I,WAzB3B,aAAc,oBACVC,KAAKC,WAAa,GAClBD,KAAKE,OAAS,G,uCAElB,SAAIC,GACAH,KAAKC,WAAWE,EAAKC,MAAQD,I,oBAEjC,SAAOE,GACH,IAAIC,EAAOD,EAAIE,KAAKC,MAAM,MAAM,GAEhC,QAA8BC,IAA1BT,KAAKC,WAAWK,GAChB,MAAM,IAAII,IAAwBJ,GAEtC,OAAON,KAAKC,WAAWK,GAAMK,KAAKN,K,yBAEtC,SAAYA,GACR,IAAIC,EAAOD,EAAIE,KAAKC,MAAM,MAAM,GAEhC,QAA0BC,IAAtBT,KAAKE,OAAOI,GACZ,MAAM,IAAII,IAAwBJ,GAEtC,OAAON,KAAKE,OAAOI,GAAMK,KAAKN,O,qGCvBzBO,EAAb,WACI,WAAYC,GAAK,oBACbb,KAAKc,MAAQD,EACbb,KAAKe,QAAU,EAHvB,sCAKI,WAAa,OAAOf,KAAKc,QAL7B,gBAMI,WAAa,OAAOd,KAAKe,UAN7B,kBAOI,SAAKC,GACD,GAAGhB,KAAKe,SAAWf,KAAKc,MAAMG,OAC1B,MAAM,IAAIC,MAAJ,4CAA+ClB,KAAKmB,KAAKC,SAAS,MAC5E,OAAOpB,KAAKe,SAAWC,IAV/B,kBAYI,SAAKA,GACD,OAAOhB,KAAKqB,KAAKC,MAAMtB,KAAKmB,KAAMnB,KAAKuB,KAAKP,MAbpD,uBAeI,WACI,IAAIQ,EAAMxB,KAAKqB,KAAKI,YAAYzB,KAAKmB,MAErC,OADAnB,KAAKuB,KAAK,GACHC,IAlBf,uBAoBI,WACI,IAAIA,EAAMxB,KAAKqB,KAAKK,YAAY1B,KAAKmB,MAErC,OADAnB,KAAKuB,KAAK,GACHC,IAvBf,uBAyBI,WACI,IAAIA,EAAMxB,KAAKqB,KAAKM,UAAU3B,KAAKmB,MAEnC,OADAnB,KAAKuB,KAAK,GACHC,IA5Bf,uBA8BI,WACI,IAAII,EAAQ5B,KAAKqB,KAAKQ,YAAY7B,KAAKmB,MAEvC,OADAnB,KAAKuB,KAAK,GACHK,IAjCf,wBAmCI,WACI,IAAIX,EAASjB,KAAK8B,YAClB,OAAO9B,KAAK+B,KAAKd,GAAQG,SAAS,UArC1C,mBAuCI,SAAMP,GACFb,KAAKe,SAAWF,EAAImB,KAAKhC,KAAKqB,KAAMrB,KAAKmB,QAxCjD,wBA0CI,SAAWc,GACPjC,KAAKe,QAAUf,KAAKqB,KAAKa,aAAaD,EAAKjC,KAAKmB,QA3CxD,wBA6CI,SAAWc,GACPjC,KAAKe,QAAUf,KAAKqB,KAAKc,aAAaF,EAAKjC,KAAKmB,QA9CxD,wBAgDI,SAAWiB,GACPpC,KAAKe,QAAUf,KAAKqB,KAAKgB,WAAWD,EAAMpC,KAAKmB,QAjDvD,wBAmDI,SAAWc,GACPjC,KAAKe,QAAUf,KAAKqB,KAAKiB,aAAaL,EAAKjC,KAAKmB,QApDxD,yBAsDI,SAAYoB,GACRvC,KAAKe,QAAUf,KAAKqB,KAAKa,aAAaK,EAAItB,OAAQjB,KAAKmB,MACvDnB,KAAKe,SAAWf,KAAKqB,KAAKmB,MAAMD,EAAKvC,KAAKmB,QAxDlD,oBA0DI,SAAON,GACHb,KAAKc,MAAQ2B,EAAOC,OAAO,CAAC1C,KAAKqB,KAAMR,IACvCb,KAAKe,SAAWF,EAAII,UA5D5B,oBA8DI,SAAa0B,GACT,OAAO,IAAI/B,EAAW6B,EAAOG,MAAMD,QA/D3C,O,geCAaE,G,KAAb,WACI,aAAc,oBACV7C,KAAK8C,KAAO,GACZ9C,KAAKO,KAAO,GAHpB,sCASI,WACI,MAAM,IAAIW,MAAJ,oDAAuDlB,KAAKO,SAV1E,yBAkBI,SAAYwC,EAAQJ,GAChB,MAAM,IAAIzB,MAAJ,wDAA2DlB,KAAKO,SAnB9E,uBAyBI,WACI,MAAM,IAAIW,MAAJ,sDAAyDlB,KAAKO,UA1B5E,mBAgCI,SAAYyC,GACR,MAAM,IAAI9B,MAAJ,+CAAkDlB,KAAKO,WAjCrE,M,6BCGa0C,EAAb,kDACI,aAAc,kCACV,gBACKJ,UAAW,EAFN,EADlB,sCAKI,WACI,OAAO7C,KAAK8C,KAAK7B,OAAS,EACpBjB,KAAKO,KAAKU,OAAS,EACnB,KARd,yBAUI,SAAY8B,GAIR,OAHAA,EAAOxB,KAAK,GACZvB,KAAK6C,SAAkC,IAAvBE,EAAOpB,YACvBoB,EAAOxB,KAAK,GACLvB,OAdf,uBAgBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAMnC,GALAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOxB,KAAK,GACZwB,EAAOV,YAA6B,IAAlBrC,KAAK6C,SAAoB,EAAI,GAC/CE,EAAOxB,KAAK,GACRwB,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QAzBtB,mBA2BI,SAAYhB,GACR,IAAIgD,EAAO,IAAIJ,EAEf,OADAK,OAAOC,OAAOF,EAAMhD,GACbgD,MA9Bf,GAAkCR,GCArBW,EAAb,kDACI,aAAc,kCACV,gBACKX,SAAW,GAFN,EADlB,sCAKI,WACI,OAAO7C,KAAK8C,KAAK7B,OAAS,EACpBjB,KAAKO,KAAKU,OAAS,EACnB,KARd,yBAUI,SAAY8B,GAIR,OAHA/C,KAAK6C,SAAS,GAAKE,EAAOjB,YAC1BiB,EAAOxB,KAAK,GACZvB,KAAK6C,SAAS,GAAKE,EAAOjB,YACnB9B,OAdf,uBAgBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAOnC,GANAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAW,GAClBV,EAAOU,WAAWzD,KAAK6C,SAAS,IAChCE,EAAOxB,KAAK,GACZwB,EAAOU,WAAWzD,KAAK6C,SAAS,IAC5BE,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QA1BtB,mBA4BI,SAAYhB,GACR,IAAIgD,EAAO,IAAIG,EAEf,OADAF,OAAOC,OAAOF,EAAMhD,GACbgD,MA/Bf,GAAiCR,G,OCApBa,EAAb,kDACI,aAAc,kCACV,gBACKb,SAAW,GAFN,EADlB,sCAKI,WACI,OAAO7C,KAAK8C,KAAK7B,OAAS,EACpBjB,KAAKO,KAAKU,OAAS,EACnB,KARd,yBAUI,SAAY8B,GAIR,OAHA/C,KAAK6C,SAAS,GAAKE,EAAOjB,YAC1BiB,EAAOxB,KAAK,GACZvB,KAAK6C,SAAS,GAAKE,EAAOY,YACnB3D,OAdf,uBAgBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAOnC,GANAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAW,GAClBV,EAAOU,WAAWzD,KAAK6C,SAAS,IAChCE,EAAOxB,KAAK,GACZwB,EAAOa,WAAW5D,KAAK6C,SAAS,IAC5BE,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QA1BtB,mBA4BI,SAAYhB,GACR,IAAIgD,EAAO,IAAIK,EAEf,OADAJ,OAAOC,OAAOF,EAAMhD,GACbgD,MA/Bf,GAAmCR,GCDtBgB,EAAb,kDACI,aAAc,kCACV,gBACKhB,SAAW,GAFN,EADlB,sCAKI,WACI,OAAO7C,KAAK8C,KAAK7B,OAAS,EACpBjB,KAAKO,KAAKU,OAAS,EACnBjB,KAAK6C,SAAS5B,OAAS,EACvB,IATd,yBAWI,SAAY8B,GAGR,OAFAA,EAAOxB,KAAK,GACZvB,KAAK6C,SAAWE,EAAOe,aAChB9D,OAdf,uBAgBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAMnC,GALAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAWzD,KAAK6C,SAAS5B,OAAS,GACzC8B,EAAOxB,KAAK,GACZwB,EAAOI,YAAYnD,KAAK6C,UACpBE,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,mBAAmBpD,MACjC,OAAO+C,EAAO1B,QAzBtB,mBA2BI,SAAYhB,GACR,IAAIgD,EAAO,IAAIQ,EAEf,OADAP,OAAOC,OAAOF,EAAMhD,GACbgD,MA9Bf,GAAiCR,GCCpBkB,EAAb,kDACI,aAAc,kCACV,gBACKlB,SAAW,GAFN,EADlB,sCAKI,WACI,OAAO7C,KAAK8C,KAAK7B,OAAS,EACpBjB,KAAKO,KAAKU,OAAS,EACnBjB,KAAK6C,SAAS5B,OAAS,EACvB,IATd,yBAWI,SAAY8B,GAGR,OAFAA,EAAOxB,KAAK,GACZvB,KAAK6C,SAAWE,EAAOe,aAChB9D,OAdf,uBAgBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAMnC,GALAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAWzD,KAAK6C,SAAS5B,OAAS,GACzC8B,EAAOxB,KAAK,GACZwB,EAAOI,YAAYnD,KAAK6C,UACpBE,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QAzBtB,mBA2BI,SAAYhB,GACR,IAAIgD,EAAO,IAAIU,EAEf,OADAT,OAAOC,OAAOF,EAAMhD,GACbgD,MA9Bf,GAAoCR,GCAvBmB,EAAb,kDACI,aAAc,kCACV,gBACKnB,SAAW,GAFN,EADlB,sCAKI,WACI,OAAO7C,KAAK8C,KAAK7B,OAAS,EACpBjB,KAAKO,KAAKU,OAAS,EACnBjB,KAAK6C,SAAS5B,OAAS,EACvB,KATd,yBAWI,SAAY8B,GAIR,OAHAA,EAAOxB,KAAK,GACZvB,KAAK6C,SAAWE,EAAOe,aACvBf,EAAOxB,KAAK,GACLvB,OAff,uBAiBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAOnC,GANAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAWzD,KAAK6C,SAAS5B,OAAS,GACzC8B,EAAOxB,KAAK,GACZwB,EAAOI,YAAYnD,KAAK6C,UACxBE,EAAOxB,KAAK,GACRwB,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QA3BtB,mBA6BI,SAAYhB,GACR,IAAIgD,EAAO,IAAIW,EAEf,OADAV,OAAOC,OAAOF,EAAMhD,GACbgD,MAhCf,GAAwCR,G,OCA3BoB,EAAb,kDACI,aAAc,kCACV,gBACKC,mBAAqB,GAC1B,EAAKjE,WAAa,GAHR,EADlB,sCAMI,WACI,IAAI0C,EAAO3C,KAAK8C,KAAK7B,OAAS,EAC9B0B,GAAQ3C,KAAKO,KAAKU,OAAS,EAC3B0B,GAAQ,EACRA,GAAQ3C,KAAKkE,mBAAmBjD,OAAS,EACzC0B,GAAQ,GACR,IAAK,IAAIwB,EAAI,EAAGA,EAAInE,KAAKC,WAAWgB,OAAQkD,IACxCxB,GAAQ3C,KAAKC,WAAWkE,GAAGjB,KAE/B,OAAOP,IAff,sBAiBI,WACI,IAAIA,EAAO3C,KAAK8C,KAAK7B,OAAS,EAK9B,OAJA0B,GAAQ3C,KAAKO,KAAKU,OAAS,EAC3B0B,GAAQ,EACRA,GAAQ3C,KAAKkE,mBAAmBjD,OAAS,EACzC0B,GAAQ,KAtBhB,iBAyBI,WACI,OAAO3C,KAAKC,WAAWgB,SA1B/B,yBA4BI,SAAY8B,EAAQJ,GAChByB,QAAQC,IAAR,wBAA6BrE,KAAK8C,KAAlC,kBAAgDH,IAChDI,EAAOxB,KAAK,GACZvB,KAAKkE,mBAAqBnB,EAAOe,aACjCf,EAAOxB,KAAK,IAGZ,IAFA,IAAI+C,EAAMvB,EAAO5B,KAAOwB,EAEjBI,EAAO5B,KAAOmD,GAAK,CACtB,IAAIxB,EAAO9C,KAAKkE,mBAEZb,EAAOtD,IAAgBwE,OAAO,CAAEzB,OAAMvC,KAD/B,UAEX8C,EAAKmB,YAAYzB,GACjB/C,KAAKC,WAAWwE,KAAKpB,GAIzB,OADAe,QAAQC,IAAR,6BAAkCrE,KAAK8C,KAAvC,oBAAuDC,EAAO5B,OACvDnB,OA5Cf,uBA8CI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MACnCH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAWzD,KAAKkD,KAAOlD,KAAK0E,YACnC3B,EAAOxB,KAAK,GACZwB,EAAOI,YAAYnD,KAAKkE,oBACxBnB,EAAOxB,KAAK,IACZ,IAAK,IAAI4C,EAAI,EAAGA,EAAInE,KAAKC,WAAWgB,OAAQkD,IACxCpB,EAAOP,MAAMxC,KAAKC,WAAWkE,GAAGQ,aAEpC,GAAI5B,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,mBAAmBpD,MACjC,OAAO+C,EAAO1B,QA3DtB,mBA6DI,SAAYhB,GACR,IAAIuE,EAAS,IAAIX,EAOjB,OANAW,EAAO9B,KAAOzC,EAAIyC,KAClB8B,EAAOrE,KAAOF,EAAIE,KAClBqE,EAAOV,mBAAqB7D,EAAI6D,mBAChCU,EAAO3E,WAAa,QACGQ,IAAnBJ,EAAIJ,YACJI,EAAIJ,WAAW4E,SAAQ,SAACxB,GAAD,OAAUuB,EAAO3E,WAAWwE,KAAK1E,IAAgBwE,OAAOlB,OAC5EuB,MArEf,GAAoC/B,G,gBCEvBiC,EAAb,kDACI,aAAc,kCACV,gBACKZ,mBAAqB,GAC1B,EAAKrB,SAAW,IAAIA,EAHV,EADlB,sCAMI,WACI,IAAIF,EAAO,EAOX,OANAA,GAAQ3C,KAAK8C,KAAK7B,OAAS,EAC3B0B,GAAQ3C,KAAKO,KAAKU,OAAS,EAC3B0B,GAAQ,EACRA,GAAQ3C,KAAKkE,mBAAmBjD,OAAS,EACzC0B,GAAQ,EACRA,GAAQ3C,KAAK6C,SAASK,OAb9B,sBAgBI,WACI,IAAIP,EAAO3C,KAAK8C,KAAK7B,OAAS,EAK9B,OAJA0B,GAAQ3C,KAAKO,KAAKU,OAAS,EAC3B0B,GAAQ,EACRA,GAAQ3C,KAAKkE,mBAAmBjD,OAAS,EACzC0B,GAAQ,IArBhB,qBAwBI,WACI,MAAgC,kBAA5B3C,KAAKkE,mBACE,GAEAlE,KAAKkD,KAAOlD,KAAK0E,aA5BpC,yBA8BI,SAAY3B,GACRA,EAAOxB,KAAK,GACZvB,KAAKkE,mBAAqBnB,EAAOe,aACjCf,EAAOxB,KAAK,GACZ,IAAIP,EAAQ+B,EAAOgC,YAQnB,OAPAhC,EAAOxB,KAAK,GACZvB,KAAK6C,SAAW9C,IAAgBiF,YAAY,CACxClC,KAAM9C,KAAK8C,KACXvC,KAAMP,KAAKkE,qBAEflE,KAAK6C,SAAS2B,YAAYzB,EAAQ/B,GAE3BhB,OA1Cf,uBA4CI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAUnC,GATAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAWzD,KAAKiF,WACvBlC,EAAOxB,KAAK,GACZwB,EAAOI,YAAYnD,KAAKkE,oBACxBnB,EAAOxB,KAAK,GACZwB,EAAOmC,WAAWlF,KAAK6C,SAASsC,OAChCpC,EAAOxB,KAAK,GACZwB,EAAOP,MAAMxC,KAAK6C,SAAS8B,aACvB5B,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QAzDtB,mBA2DI,SAAYhB,GACR,IAAI+E,EAAQ,IAAIN,EAMhB,OALAM,EAAMtC,KAAOzC,EAAIyC,KACjBsC,EAAM7E,KAAOF,EAAIE,KACjB6E,EAAMlB,mBAAqB7D,EAAI6D,wBACVzD,IAAjBJ,EAAIwC,WACJuC,EAAMvC,SAAW9C,IAAgBiF,YAAY3E,EAAIwC,WAC9CuC,MAlEf,GAAmCvC,GCFtBwC,EAAb,kDACI,aAAc,kCACV,gBACKC,SAAW,GAChB,EAAKzC,SAAW,GAHN,EADlB,sCAMI,WACI,OAAO7C,KAAK8C,KAAK7B,OAAS,EACpBjB,KAAKO,KAAKU,OAAS,EACnBjB,KAAK6C,SAAS5B,OAAS,EACvBjB,KAAKsF,SAASrE,OAAS,EACvB,IAXd,yBAaI,SAAY8B,GAKR,OAJAA,EAAOxB,KAAK,GACZvB,KAAKsF,SAAWvC,EAAOe,aACvBf,EAAOxB,KAAK,GACZvB,KAAK6C,SAAWE,EAAOe,aAChB9D,OAlBf,uBAoBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAQnC,GAPAH,EAAOI,YAAYnD,KAAK8C,MACxBC,EAAOI,YAAYnD,KAAKO,MACxBwC,EAAOU,WAAWzD,KAAK6C,SAAS5B,OAAS,GACzC8B,EAAOxB,KAAK,GACZwB,EAAOI,YAAYnD,KAAKsF,UACxBvC,EAAOxB,KAAK,GACZwB,EAAOI,YAAYnD,KAAK6C,UACpBE,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QA/BtB,mBAiCI,SAAYhB,GACR,IAAIgD,EAAO,IAAIgC,EAEf,OADA/B,OAAOC,OAAOF,EAAMhD,GACbgD,MApCf,GAAkCR,GCCrB0C,EAAb,kDACI,aAAc,kCACV,gBACKhF,KAAO,QACZ,EAAKN,WAAa,GAHR,EADlB,sCAMI,WAEI,IADA,IAAI0C,EAAO,EACFwB,EAAI,EAAGA,EAAInE,KAAKC,WAAWgB,OAAQkD,IACxCxB,GAAQ3C,KAAKC,WAAWkE,GAAGjB,KAG/B,OADAP,GAAQ,IAXhB,iBAcI,WACI,OAAO3C,KAAKC,WAAWgB,SAf/B,yBAiBI,SAAY8B,GAER,IADA,IAAID,EACoC,YAAhCA,EAAOC,EAAOe,eAA4B,CAC9C,IAAIvD,EAAOwC,EAAOe,aACdZ,EAAOH,EAAOjB,YACduB,EAAOtD,IAAgBwE,OAAO,CAAEzB,OAAMvC,SAC1C8C,EAAKmB,YAAYzB,EAAQG,GACzBlD,KAAKC,WAAWwE,KAAKpB,GAEzB,OAAOrD,OA1Bf,uBA4BI,WAEI,IADA,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAC1BiB,EAAI,EAAGA,EAAInE,KAAKC,WAAWgB,OAAQkD,IACxCpB,EAAOP,MAAMxC,KAAKC,WAAWkE,GAAGQ,aAGpC,GADA5B,EAAOI,YAAY,UACfJ,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QApCtB,mBAsCI,SAAYhB,GACR,IAAImF,EAAQ,IAAID,EAIhB,OAHAC,EAAM1C,KAAOzC,EAAIyC,UACMrC,IAAnBJ,EAAIJ,YACJI,EAAIJ,WAAW4E,SAAQ,SAAAxB,GAAI,OAAImC,EAAMvF,WAAWwE,KAAK1E,IAAgBwE,OAAOlB,OACzEmC,MA3Cf,GAA2B3C,GCAd4C,EAAb,kDACI,aAAc,kCACV,gBACKlF,KAAO,OACZ,EAAKmF,GAAK,iCACV,EAAKC,MAAQ,EAJH,EADlB,sCAOI,WACI,OAAO,KARf,yBAUI,SAAY5C,GAOR,OANA/C,KAAK0F,GAAL,UAAa3C,EAAOhB,KAAK,GAAG6D,SAASxE,SAAS,QAC9CpB,KAAK0F,IAAL,WAAe3C,EAAOhB,KAAK,GAAG8D,SAASzE,SAAS,QAChDpB,KAAK0F,IAAL,WAAe3C,EAAOhB,KAAK,GAAG8D,SAASzE,SAAS,QAChDpB,KAAK0F,IAAL,WAAe3C,EAAOhB,KAAK,GAAGX,SAAS,QACvCpB,KAAK0F,IAAL,WAAe3C,EAAOhB,KAAK,GAAGX,SAAS,QACvCpB,KAAK2F,MAAQ5C,EAAOjB,YACb9B,OAjBf,uBAmBI,WACI,IAAI8F,EAAO9F,KAAK0F,GAAGlF,MAAM,KACrBuC,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAOnC,GANAH,EAAOP,MAAMC,SAAO9B,KAAKmF,EAAK,GAAI,OAAOF,UACzC7C,EAAOP,MAAMC,SAAO9B,KAAKmF,EAAK,GAAI,OAAOD,UACzC9C,EAAOP,MAAMC,SAAO9B,KAAKmF,EAAK,GAAI,OAAOD,UACzC9C,EAAOP,MAAMC,SAAO9B,KAAKmF,EAAK,GAAI,QAClC/C,EAAOP,MAAMC,SAAO9B,KAAKmF,EAAK,GAAI,QAClC/C,EAAOU,WAAWzD,KAAK2F,OACH,KAAhB5C,EAAO5B,KACP,MAAM,IAAIiC,IAAmBpD,MACjC,OAAO+C,EAAO1B,QA9BtB,mBAgCI,SAAYhB,GACR,IAAIyF,EAAO,IAAIL,EAGf,OAFAK,EAAKJ,GAAKrF,EAAIqF,GACdI,EAAKH,MAAQtF,EAAIsF,MACVG,MApCf,GAA0BjD,I,6BCL1B,uM,kICAaO,EAAb,kDACI,WAAYC,GAAM,oGAC8CA,EAAKP,OAFzE,sBAAwC5B,QAY3BR,GAN6BQ,MAM1C,kDACI,WAAYZ,GAAM,uFACiCA,EADjC,MADtB,sBAA6CY,U,8UCPhC6E,EAAb,kDACI,aAAc,kCACV,gBACKxF,KAAO,cACZ,EAAKN,WAAa,GAHR,EADlB,sCAMI,WACI,IAAI0C,EAAO3C,KAAKC,WAAWgB,OAAS,EAAI,EAAI,EAI5C,OAHAjB,KAAKC,WAAW4E,SAAQ,SAACrD,GACrBmB,GAAQnB,EAAI0B,QAETP,IAXf,iBAaI,WACI,OAAO3C,KAAKC,WAAWgB,SAd/B,yBAgBI,SAAY8B,EAAQ/B,GAChB+B,EAAOxB,KAAMP,EAAQ,EAAK,EAAI,GAC9B,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAOmD,IAAK,CAC5B,IAAIrB,EAAOC,EAAOe,aACdvD,EAAOwC,EAAOe,aAEdT,GADON,EAAOjB,YACP/B,IAAgBwE,OAAO,CAAEzB,OAAMvC,UAC1C8C,EAAKmB,YAAYzB,GACjB/C,KAAKC,WAAWwE,KAAKpB,GAEzB,OAAOrD,OA1Bf,uBA4BI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAGnC,GAFAH,EAAOxB,KAAKvB,KAAKmF,MAAQ,EAAI,EAAI,GACjCnF,KAAKC,WAAW4E,SAAQ,SAAArD,GAAG,OAAIuB,EAAOP,MAAMhB,EAAImD,gBAC5C5B,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QAlCtB,mBAoCI,SAAYhB,GACR,IAAI+E,EAAQ,IAAIW,EAGhB,YAFuBtF,IAAnBJ,EAAIJ,YACJI,EAAIJ,WAAW4E,SAAQ,SAAArD,GAAG,OAAI4D,EAAMnF,WAAWwE,KAAK1E,IAAgBwE,OAAO/C,OACxE4D,MAxCf,GAA8BvC,KCDjBmD,EAAb,kDACI,aAAc,kCACV,gBACKzF,KAAO,qBACZ,EAAKN,WAAa,GAHR,EADlB,sCAMI,WACI,IAAI0C,EAAO,EAIX,OAHA3C,KAAKC,WAAW4E,SAAQ,SAACtC,GACrBI,GAAQJ,EAAItB,OAAS,KAElB0B,IAXf,iBAaI,WACI,OAAO3C,KAAKC,WAAWgB,SAd/B,yBAgBI,SAAY8B,EAAQ/B,GAChB,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAOmD,IACvBnE,KAAKC,WAAWwE,KAAK1B,EAAOe,cAC5Bf,EAAOxB,KAAK,GAEhB,OAAOvB,OArBf,uBAuBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAKnC,GAJAlD,KAAKC,WAAW4E,SAAQ,SAAAtC,GACpBQ,EAAOI,YAAYZ,GACnBQ,EAAOxB,KAAK,MAEZwB,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QA/BtB,mBAiCI,SAAYhB,GACR,IAAI+E,EAAQ,IAAIY,EAGhB,YAFuBvF,IAAnBJ,EAAIJ,aACJmF,EAAMnF,WAAaI,EAAIJ,YACpBmF,MArCf,GAAqCvC,KCDxBoD,EAAb,iKACI,SAAYlD,EAAQ/B,GAChBoD,QAAQC,IAAR,wBAA6BrE,KAAK8C,KAAlC,mBAAiD9B,IACjDhB,KAAK8C,KAAOC,EAAOe,aACnB9D,KAAKO,KAAOwC,EAAOe,aACRf,EAAOjB,YAClBiB,EAAOxB,KAAK,GACZvB,KAAKkE,mBAAqBnB,EAAOe,aACjCf,EAAOxB,KAAK,IAEZ,IADA,IAAI4C,EAAI,EACDA,EAAInD,GAAO,CACd,IAAI8B,EAAO9C,KAAKkE,mBAEZb,EAAOtD,IAAgBwE,OAAO,CAAEzB,OAAMvC,KAD/B,UAEX8C,EAAKmB,YAAYzB,GACjB/C,KAAKC,WAAWwE,KAAKpB,GACrBc,IAGJ,OADAC,QAAQC,IAAR,6BAAkCrE,KAAK8C,KAAvC,oBAAuDC,EAAO5B,OACvDnB,QAnBf,mBAqBI,SAAYK,GACR,IAAIuE,EAAS,IAAIqB,EAOjB,OANArB,EAAO9B,KAAOzC,EAAIyC,KAClB8B,EAAOrE,KAAOF,EAAIE,KAClBqE,EAAOV,mBAAqB7D,EAAI6D,mBAChCU,EAAO3E,WAAa,QACGQ,IAAnBJ,EAAIJ,YACJI,EAAIJ,WAAW4E,SAAQ,SAACxB,GAAD,OAAUuB,EAAO3E,WAAWwE,KAAK1E,IAAgBwE,OAAOlB,OAC5EuB,MA7Bf,GAAiCX,K,uBCkBjClE,IAAgBE,WAAhB,cAA8C6E,IAC9C/E,IAAgBE,WAAhB,aAA6CgD,IAC7ClD,IAAgBE,WAAhB,aAA6CoF,IAC7CtF,IAAgBE,WAAhB,cAA8CyD,IAC9C3D,IAAgBE,WAAhB,YAA4CuD,IAC5CzD,IAAgBE,WAAhB,eAA+C8D,IAC/ChE,IAAgBE,WAAhB,mBAAmD+D,IACnDjE,IAAgBE,WAAhB,YAA4C4D,IAC5C9D,IAAgBE,WAAhB,eAA+CgE,IAC/ClE,IAAgBE,WAAhB,MAAsCsF,IACtCxF,IAAgBE,WAAhB,KAAqCwF,IACrC1F,IAAgBG,OAAhB,SAAqC6F,EACrChG,IAAgBG,OAAhB,gBAA4C8F,EAC5CjG,IAAgBG,OAAhB,eAA2C+F,EAC3ClG,IAAgBG,OAAhB,YAAwC6F,EACxChG,IAAgBG,OAAhB,mBAA+C8F,G,iCCpC/C,gD,491DCMaE,EAAb,WACI,aAAc,oBACVlG,KAAKmG,OAAS,IAAIC,IAClBpG,KAAKC,WAAa,IAAIsF,IAH9B,sCAKI,WACI,IAAI5C,EAAO3C,KAAKmG,OAAOjD,KAGvB,OAFAP,GAAQ3C,KAAKC,WAAWiD,KACxBP,GAAQ,IARhB,yBAWI,SAAYI,GACR,IAAIsD,EAAStD,EAAOhB,KAAK,GACzB,GAAoD,IAAhDU,EAAO6D,QAAQ7D,EAAO9B,KAAK,QAAS0F,GACpC,MAAMnF,MAAM,qCAKhB,OAHAlB,KAAKmG,OAAO3B,YAAYzB,GACxB/C,KAAKC,WAAW6C,KAAO9C,KAAKmG,OAAOI,aACnCvG,KAAKC,WAAWuE,YAAYzB,GACrB/C,OAnBf,uBAqBI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAInC,GAHAH,EAAOP,MAAMxC,KAAKmG,OAAOxB,aACzB5B,EAAOP,MAAMxC,KAAKC,WAAW0E,aAC7B5B,EAAOxB,KAAK,GACRwB,EAAO5B,OAASnB,KAAKkD,KACrB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QA5BtB,mBA8BI,SAAYhB,GACR,IAAImG,EAAO,IAAIN,EAGf,OAFAM,EAAKL,OAASC,IAAWzF,KAAKN,EAAI8F,QAClCK,EAAKvG,WAAaF,IAAgBwE,OAAOlE,EAAIJ,YACtCuG,MAlCf,O,6ICFaJ,EAAb,WACI,aAAc,oBACVpG,KAAKyG,OAAS,OACdzG,KAAK0G,gBAAkB,EACvB1G,KAAK2G,eAAiB,EACtB3G,KAAK4G,cAAgB,CACjBC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,QAAS,IAEbjH,KAAKkH,oBAAsB,EAC3BlH,KAAKmH,iBAAmB,CACpBhC,MAAO,EACPiC,QAAS,IAEbpH,KAAKuG,aAAe,GAjB5B,sCAmBI,WACI,IAAI5D,EAAO3C,KAAKyG,OAAOxF,OAQvB,OAPA0B,GAAQ,GACRA,GAAQ3C,KAAK4G,cAAcK,QAAQhG,OAAS,EAC5C0B,GAAQ,EACR3C,KAAKmH,iBAAiBC,QAAQvC,SAAQ,SAAAiB,GAClCnD,GAAQmD,EAAK5C,QAEjBP,GAAQ3C,KAAKuG,aAAatF,OAAS,IA3B3C,yBA8BI,SAAY8B,GACR/C,KAAK0G,gBAAkB3D,EAAOjB,YAC9B9B,KAAK2G,eAAiB5D,EAAOjB,YAC7B9B,KAAK4G,cAAcC,MAAQ9D,EAAOgC,YAClC/E,KAAK4G,cAAcE,MAAQ/D,EAAOgC,YAClC/E,KAAK4G,cAAcG,MAAQhE,EAAOgC,YAClC/E,KAAK4G,cAAcI,MAAQjE,EAAOjB,YAClC9B,KAAK4G,cAAcK,QAAUlE,EAAOe,aACpC9D,KAAKkH,oBAAsBnE,EAAOjB,YAClC9B,KAAKmH,iBAAiBhC,MAAQpC,EAAOjB,YACrC,IAAK,IAAIqC,EAAI,EAAGA,EAAInE,KAAKmH,iBAAiBhC,MAAOhB,IAAK,CAClD,IAAI2B,EAAO/F,IAAgBwE,OAAO,CAAEhE,KAAM,SAC1CP,KAAKmH,iBAAiBC,QAAQ3C,KAAKqB,EAAKtB,YAAYzB,IAGxD,OADA/C,KAAKuG,aAAexD,EAAOe,aACpB9D,OA7Cf,uBA+CI,WACI,IAAI+C,EAASnC,IAAWgC,MAAM5C,KAAKkD,MAenC,GAdAH,EAAOP,MAAMC,EAAO9B,KAAKX,KAAKyG,SAC9B1D,EAAOU,WAAWzD,KAAK0G,iBACvB3D,EAAOU,WAAWzD,KAAK2G,gBAEvB5D,EAAOmC,WAAWlF,KAAK4G,cAAcC,OACrC9D,EAAOmC,WAAWlF,KAAK4G,cAAcE,OACrC/D,EAAOmC,WAAWlF,KAAK4G,cAAcG,OACrChE,EAAOU,WAAWzD,KAAK4G,cAAcI,OACrCjE,EAAOI,YAAYnD,KAAK4G,cAAcK,SAEtClE,EAAOU,WAAWzD,KAAKkH,qBACvBnE,EAAOU,WAAWzD,KAAKmH,iBAAiBhC,OACxCnF,KAAKmH,iBAAiBC,QAAQvC,SAAQ,SAAAiB,GAAI,OAAI/C,EAAOP,MAAMsD,EAAKnB,gBAChE5B,EAAOI,YAAYnD,KAAKuG,cACpBxD,EAAO5B,MAAQnB,KAAKkD,KACpB,MAAM,IAAIE,IAAmBpD,MACjC,OAAO+C,EAAO1B,QAjEtB,mBAmEI,SAAYhB,GACR,IAAIgH,EAAS,IAAIjB,EAUjB,OATAiB,EAAOX,gBAAkBrG,EAAIqG,gBAC7BW,EAAOV,eAAiBtG,EAAIsG,eAC5BU,EAAOT,cAAgBvG,EAAIuG,cAC3BS,EAAOH,oBAAsB7G,EAAI6G,oBACjCG,EAAOF,iBAAiBhC,MAAQ9E,EAAI8G,iBAAiBhC,MACrD9E,EAAI8G,iBAAiBC,QAAQvC,SAAQ,SAAAiB,GACjCuB,EAAOF,iBAAiBC,QAAQ3C,KAAK1E,IAAgBwE,OAAOuB,OAEhEuB,EAAOd,aAAelG,EAAIkG,aACnBc,MA9Ef,O,kOCIeC,EANMC,IAAMC,cAAc,CACrCC,KAAK,GACLC,KAAK,GACLC,KAAK,K,wBCDHC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACJ,KAAK,IACnB,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBAHH,E,gDAKnB,SAAaC,GACX7D,QAAQC,IAAR,mBAAwB4D,EAAEC,OAAOC,QACjCnI,KAAKoI,SAAS,CAACV,KAAKO,EAAEC,OAAOC,QAC7BnI,KAAKqI,QAAQX,KAAOO,EAAEC,OAAOC,Q,oBAE/B,WACE,OACE,qBAAKG,UAAU,WAAWC,MAAOC,IAAjC,SACI,yBAAQpI,KAAK,aAAaqI,GAAG,mBAAmBC,SAAU1I,KAAK+H,aAA/D,UACI,wBAAQI,MAAM,GAAd,oCACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,gC,GA1BWZ,IAAMoB,WAAzBf,EACGgB,YAActB,EAgCRM,QCjCTiB,E,kDAEJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACH,KAAK,IACnB,EAAKI,aAAe,EAAKA,aAAaC,KAAlB,gBAHH,E,gDAKnB,SAAaC,GACT7D,QAAQC,IAAR,mBAAwB4D,EAAEC,OAAOC,QACjCnI,KAAKoI,SAAS,CAACT,KAAKM,EAAEC,OAAOC,QAC7BnI,KAAKqI,QAAQV,KAAOM,EAAEC,OAAOC,Q,oBAEjC,WACE,OACE,qBAAKG,UAAU,WAAWC,MAAOC,IAAjC,SACI,yBAAQpI,KAAK,eAAeqI,GAAG,oBAAoBC,SAAU1I,KAAK+H,aAAlE,UACI,wBAAQI,MAAM,GAAd,qCACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,+B,GApBaZ,IAAMoB,WAA3BE,EACKD,YAActB,EA0BVuB,Q,iBC3BTC,E,kDAEJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACL,KAAK,wBACnB,EAAKM,aAAe,EAAKA,aAAaC,KAAlB,gBAHH,E,gDAKnB,SAAaC,GACXjI,KAAKoI,SAAS,CAACX,KAAKQ,EAAEC,OAAOC,QAC7BnI,KAAKqI,QAAQZ,KAAOQ,EAAEC,OAAOC,Q,oBAE/B,WACE,OACE,qBAAKG,UAAU,YAAYE,OAAQA,IAAnC,SACE,8BACE,uBAAOE,SAAU1I,KAAK+H,aAAcgB,YAAa/I,KAAK8H,MAAML,KAAMU,MAAOnI,KAAKqI,QAAQZ,e,GAfxEF,IAAMoB,WAAxBG,EACGF,YAActB,EAqBRwB,Q,wFCxBFE,EAAO,CAChBC,MAAM,KACNC,KAAM,SAASzB,GACXzH,KAAKiJ,MAAQE,YAAU1B,EAAM,CAACK,OAAO,KAEzCsB,MAAO,WACH,OAAkB,OAAfpJ,KAAKiJ,MACGjJ,KAAKiJ,MAAMG,QACf,GAEXC,MAAO,WACH,OAAkB,OAAfrJ,KAAKiJ,MACGjJ,KAAKiJ,MAAMG,QAAX,SAAsB,EAAG,IAC7B,GAEXE,MAAO,WACH,OAAkB,OAAftJ,KAAKiJ,MACGjJ,KAAKiJ,MAAMK,QACf,GAEXC,MAAO,SAASC,EAAKC,GAGjB,OAFAD,OAAe/I,IAAR+I,EAAqBA,EAAM,EAClCC,OAAehJ,IAARgJ,EAAqBA,EAAM,EAC3BC,KAAKC,MAAM3J,KAAKiJ,MAAMK,SAAWG,EAAMD,EAAM,IAAMA,GAE9DI,OAAQ,WAAqB3H,GAAK,uBAAhBuH,EAAgB,KAAXC,EAAW,KAC1BI,EAAS,GAEb,GAAW,KADX5H,OAAexB,IAARwB,EAAqBA,EAAMjC,KAAKuJ,MAAMC,EAAKC,KAClCxH,IAASwH,EAAMD,EAAM,EAAI,CAErC,IADA,IAAIrF,EAAIqF,EACFK,EAAO5I,OAASgB,GAClB4H,EAAOpF,KAAKN,KAChB,OAAO0F,EAEX,IAAI,IAAI1F,EAAI,EAAGA,EAAIlC,EAAKkC,IAAK,CAEzB,IADA,IAAI2F,OAAG,EACDD,EAAOE,SAASD,EAAM9J,KAAKuJ,MAAMC,EAAKC,MAC5CI,EAAOpF,KAAKqF,GAEhB,OAAOD,GAMXG,QAAS,SAAS5E,GAAO,WACrB,OAAOA,EAAM6E,KAAI,mCAAE9F,EAAF,KAAK+F,EAAL,WAAY,CAAC/F,EAAD,SAAI,EAAKmF,QAAY,EAAIY,OACzCC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,OAEzCE,QAAS,WACLtK,KAAKiJ,MAAQ,O,OCvCRsB,EAAb,kDACI,aAAc,kCACV,gBACKzH,KAAO,2BACZ,EAAKvC,KAAO,mBACZ,EAAK2D,mBAAqB,8BAC1B,EAAKjE,WAAa,CACduK,EAAc7J,KAAK,CACf,KAAQ,8BACR,KAAQ,QACR,WAAc,MATZ,EADlB,+CAcI,SAAY0C,GACRrD,KAAKC,WAAW,GAAGwK,YAAYpH,KAfvC,wBAiBI,SAAWqH,EAAMzI,GAAK,WAClB+G,EAAKY,OAAO,CAAC,EAAGc,EAAKzJ,OAAS,GAAIgB,GAC7B4C,SAAQ,SAAAV,GACL,IAAIwG,EAAYC,EAAMC,QAAO,oDAAoBtK,OAASmK,EAAKvG,GAAG,MAC9D2G,EAAIxH,OAAOC,OAAO,GAAIwH,EAAUL,EAAKvG,GAAG,KACxC6G,EAAQhC,EAAKO,MAAM,EAAGoB,EAAU1J,OAAS,GAC7C6J,EAAEjI,SAAW8H,EAAUK,GAAO,GAAGrF,MACjC,EAAK8E,YAAYK,QAxBjC,wBA4BI,SAAWG,GACP,IAAIC,EAAU5H,OAAO6H,QAAQC,EAAaC,SACtCC,EAAYJ,EAAQ5J,MAAM,EAAG,GAC7BiK,EAAcL,EAAQ5J,MAAM,EAAG,GACnCtB,KAAKwL,WAAWF,EAAWL,EAAKQ,IAAM,EAAIzC,EAAKO,MAAM,EAAG,IACxDvJ,KAAKwL,WAAWD,EAAaN,EAAKQ,IAAM,EAAIR,EAAKhJ,OAjCzD,qBAmCI,SAAQoB,GACJ,IACI2H,EADAF,EAAIxH,OAAOC,OAAO,GAAIwH,EAAU1H,IAEhCsH,EAAY,GAChB,OAAOtH,GACH,IAAK,eACDsH,EAAYC,EAAMC,QAAO,8CAAuB,WAAvB,KAActK,QACvCyK,EAAQhC,EAAKO,MAAM,EAAGoB,EAAU1J,OAAS,GACzC6J,EAAEjI,SAAW8H,EAAUK,GAAO,GAAGrF,MACjC,MACJ,IAAK,wBACDgF,EAAYC,EAAMC,QAAO,8CAAuB,aAAvB,KAActK,QAAqBe,MAAM,EAAE,GACpE0J,EAAQhC,EAAKO,MAAM,EAAGoB,EAAU1J,OAAS,GACzC6J,EAAEjI,SAAW8H,EAAUK,GAAO,GAAGrF,MACjC,MACJ,IAAK,eACL,IAAK,eACDmF,EAAEjI,SAAW,CAAC,EAAI,GAAKmG,EAAKO,MAAM,EAAG,IACrC,MACJ,IAAK,cACL,IAAK,aACDuB,EAAEjI,SAAW,CAAC,EAAGmG,EAAKO,MAAM,EAAG,IAGvCvJ,KAAKyK,YAAYK,MA3DzB,uBA8DI,SAAgB1K,GACZ,IAAIsL,EAAM,IAAInB,EACVoB,EAA4BC,EAAYxL,EAAKyL,eAAe5L,WAAW,GAO3E,OANAyL,EAAIzL,WAAW,GAAKuK,EAAc7J,KAAKgL,GAC3B,QAATvL,IACCgL,EAAaU,SACRjH,SAAQ,SAAAxB,GAAI,OAAIqI,EAAIK,QAAQ1I,MACjCqI,EAAIM,WAAW,CAAC/J,IAAK,KAElByJ,MAvEf,GAA4CzH,KCE/BgI,EAAb,kDACI,aAAc,kCACV,gBACKnJ,KAAO,qBACZ,EAAKvC,KAAO,mBACZ,EAAK2D,mBAAqB,wBAC1B,EAAKjE,WAAa,CACduK,EAAc7J,KAAK,CACf,KAAQ,wBACR,KAAQ,QACR,WAAc,MATZ,EADlB,+CAcI,SAAY0C,GACRrD,KAAKC,WAAW,GACXwK,YAAY1K,IAAgBwE,OAAOlB,MAhBhD,sBAkBI,SAAesE,GACX3H,KAAKyK,YAAYyB,EAASC,WAAWxE,EAAKyE,kBAnBlD,yBAqBI,SAAYhM,GACR,IAAIiM,EAAY/I,OAAOC,OAAO,GAAI2I,EAAS9L,IAChC4I,EAAKgB,QAAQsC,EAASlM,IAK5ByE,SAAQ,YAAoB,IAKrB0H,EALqB,mBAAlBC,EAAkB,KAAZC,EAAY,OACV7B,EAAM8B,MAAK,SAAAvI,GAAC,OAAIA,EAAE,KAAOqI,KADf,mBACxBpM,EADwB,KAClBiD,EADkB,UAEjB5C,IAATL,EACCgE,QAAQC,IAAR,kCAAuCmI,MAInCD,EADa,WAAdlJ,EAAK9C,KACeoM,EAAehM,KAAKuL,EAAQ,qBAE5BS,EAAehM,KAAKuL,EAAQ,uBAElCU,KAAOvJ,EAAKsC,MAC7B4G,EAAiBM,OAASJ,EAC1BJ,EAAUxJ,SAAS5C,WAAWwE,KAAK8H,OAG3CvM,KAAKyK,YAAY4B,KA5CzB,sBA8CI,WACI,IAAI,IAAIlI,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACxB,IAAI2I,EAAMxJ,OAAOC,OAAO,GAAI2I,EAASa,sBACjCC,EAAM1J,OAAOC,OAAO,GAAI2I,EAASe,qBACjCC,EAAO5J,OAAOC,OAAO,GAAI2I,EAASiB,gBACtCL,EAAIjK,SAAW,CAACsB,EAAG6E,EAAKK,SACxB2D,EAAInK,SAAW,CAACsB,EAAG6E,EAAKO,MAAM,EAAG,MACjC2D,EAAKrK,SAAW,CAACsB,EAAG6E,EAAKI,SACzBpJ,KAAKyK,YAAYqC,GACjB9M,KAAKyK,YAAYuC,GACjBhN,KAAKyK,YAAYyC,MAxD7B,yBA2DI,SAAYvD,EAAOvJ,GACf,IAAIgN,EAAO9J,OAAOC,OAAO,GAAI2I,EAAS9L,IACtCgN,EAAKvK,SAAW,CAAC8G,EAAO,GAExB3J,KAAKyK,YAAY2C,KA/DzB,sBAiEI,SAASA,GAAM,WACX,OAAOA,GACH,IAAK,uBACD,IAAI,IAAIjJ,EAAI,EAAGA,EAAI,EAAGA,IACE,IAAjB6E,EAAKO,UACJvJ,KAAKqN,YAAY,EAAElJ,EAAGiJ,GACtBpN,KAAKqN,YAAY,EAAElJ,EAAE,EAAGiJ,IAGhC,MACJ,IAAK,iBACD,IAAI,IAAIjJ,EAAI,EAAGA,EAAI,EAAGA,IAClB6E,EAAKY,OAAO,CAAC,EAAEzF,EAAG,EAAEA,EAAE,GAAI,GACrBU,SAAQ,SAAAyI,GAAC,OAAI,EAAKD,YAAYC,EAAGF,MAE1C,MACJ,IAAK,iBACL,IAAK,sBACL,IAAK,iBACDpE,EAAKY,OAAO,CAAC,EAAG,IACX/E,SAAQ,SAAAyI,GAAC,OAAI,EAAKD,YAAYC,EAAGF,MACtC,MACJ,IAAK,wBACL,IAAK,mBACDpE,EAAKY,OAAO,CAAC,EAAG,GAAIZ,EAAKO,SACpB1E,SAAQ,SAAAyI,GAAC,OAAI,EAAKD,YAAYC,EAAGF,MACtC,MACJ,IAAK,mBACDpE,EAAKY,OAAO,CAAC,EAAG,GAAIZ,EAAKO,SACpB1E,SAAQ,SAAAyI,GAAC,OAAI,EAAKD,YAAYC,EAAGF,MACtC,MACJ,IAAK,oBAEEpN,KAAKC,WAAW,GAAGsN,IAAI,sBACbvE,EAAKY,OAAO,CAAC,EAAG,IAEhBZ,EAAKY,OAAO,CAAC,EAAG,GAAI,IAC1B/E,SAAQ,SAAAyI,GAAC,OAAI,EAAKD,YAAYC,EAAGF,MACxC,MACJ,IAAK,qBACL,IAAK,mBACDpE,EAAKY,OAAO,CAAC,EAAG,GAAI,GACf/E,SAAQ,SAAAyI,GAAC,OAAI,EAAKD,YAAYC,EAAGF,MACtC,MACJ,IAAK,qBACDpE,EAAKY,OAAO,CAAC,EAAG,GAAIZ,EAAKO,SACpB1E,SAAQ,SAAAyI,GAAC,OAAI,EAAKD,YAAYC,EAAGF,UA/GtD,uBAmHI,SAAgBzF,GACZ,IAAI+D,EAAM,IAAIO,EAMd,OALAb,EAAaoC,MACR3I,SAAQ,SAAA4I,GAAI,OAAI/B,EAAIgC,YAAYD,MACrC/B,EAAIiC,WAAahG,EACjB+D,EAAIkC,WACJxC,EAAayC,MAAMhJ,SAAQ,SAAAiJ,GAAC,OAAIpC,EAAIqC,SAASD,MACtCpC,MA1Hf,GAAsCzH,KCbzBuG,EAAb,kDACI,aAAc,wCADlB,+CAII,SAAYnH,GACRrD,KAAKC,WAAWwE,KAAK1E,IAAgBwE,OAAOlB,MALpD,iBAOI,SAAIjD,GACA,OAA4D,IAArDJ,KAAKC,WAAW+N,WAAU,SAAAlD,GAAC,OAAIA,EAAEhI,OAAS1C,QARzD,mBAUI,SAAYC,GACR,IAAIqL,EAAM,IAAIlB,EAMd,OALAkB,EAAI5I,KAAOzC,EAAIyC,KACf4I,EAAInL,KAAOF,EAAIE,KACfmL,EAAIzL,WAAa,GACdI,EAAIJ,YACHI,EAAIJ,WAAW4E,SAAQ,SAAAxB,GAAI,OAAIqI,EAAIzL,WAAWwE,KAAK1E,IAAgBwE,OAAOlB,OACvEqI,MAjBf,GAAmCnG,KCYtB0I,EAAb,kDACI,aAAc,kCACV,gBACK9H,OAASC,IAAWzF,KAAKuN,GAFpB,EADlB,sCAKI,WACI,OAAOnO,IAAgBwE,OAAO4J,EAASF,mBAN/C,yBAQI,SAAY5K,GACRrD,KAAKC,WACAA,WAAWwE,KAAKpB,MAV7B,wBAYI,YAA4B,IAAV+K,EAAU,EAAVA,EAAGC,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EAChBC,EAAO,IAAIN,EAOf,OANAM,EAAK9D,YAAY8D,EAAKC,MACtBxF,EAAKE,KAAKkF,GACVG,EAAK9D,YAAYF,EAAuBkE,SAASJ,IACjDrF,EAAKE,KAAKkF,GACVG,EAAK9D,YAAYwB,EAAiBwC,SAASH,IAC3CtF,EAAKsB,UACEiE,MApBf,GAAqCrI,KCLxByG,EAAb,kDACI,aAAc,kCACV,gBACK7J,KAAO,iBACZ,EAAKvC,KAAO,QACZ,EAAKN,WAAa,CACd,CACI,KAAQ,OACR,KAAQ,uBACR,SAAY,IAEhB,CACI,KAAQ,WACR,KAAQ,kBACR,SAAY,KAbV,EADlB,sCAkBI,SAASkI,GACLnI,KAAKC,WAAW,GAAG4C,SAAWsF,IAnBtC,kBAqBI,SAAWA,GACPnI,KAAKC,WAAW,GAAG4C,SAAW,CAAC,EAAGsF,MAtB1C,mBAwBI,SAAY9H,GACR,IAAIqL,EAAM,IAAIiB,EAMd,OALAjB,EAAI5I,KAAOzC,EAAIyC,KACf4I,EAAInL,KAAOF,EAAIE,KACfmL,EAAIzL,WAAa,QACKQ,IAAnBJ,EAAIJ,YACHI,EAAIJ,WAAW4E,SAAQ,SAAAxB,GAAI,OAAIqI,EAAIzL,WAAWwE,KAAK1E,IAAgBwE,OAAOlB,OACvEqI,MA/Bf,GAAoCnG,KCRpC,SAASuH,EAAI4B,GACT,IAAItE,EAAI,CACJgE,EAAEM,EAAKjH,KACP4G,EAAEK,EAAKhH,KACP4G,EAAEI,EAAK/G,MAEX,OAAOsG,EAAgBU,UAAUvE,G,qBCF/BwE,E,kDAEJ,WAAY/G,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX+G,IAAI,KACJC,SAAS,IAEX,EAAKC,YAAc,EAAKA,YAAY/G,KAAjB,gBANF,E,+CAQnB,SAAYC,GAAI,IAAD,OACX,GAAyB,KAAtBjI,KAAKqI,QAAQZ,MAAqC,KAAtBzH,KAAKqI,QAAQX,MAAqC,KAAtB1H,KAAKqI,QAAQV,KAAa,CACnFvD,QAAQC,IAAR,8BAAmC2K,KAAKC,UAAUjP,KAAKqI,WACvD,IAAI6G,EAAW,CAACC,EAAOnP,KAAKqI,SAAS1D,aACjCmK,EAAQ,sBACRM,EAAO,IAAIC,KAAKH,EAAUJ,GAC1BD,EAAMS,IAAIC,gBAAgBH,GAC9BpP,KAAKoI,SAAS,CAACyG,MAAIC,aAAW,WAC5B,EAAKU,eAAeC,QACpBH,IAAII,gBAAgBb,GACpBA,EAAM,KACNO,EAAO,KACPN,EAAW,GACX,EAAK1G,SAAS,CAACyG,MAAIC,aAAW,kBAAMa,OAAOC,SAASC,QAAO,cAG7DF,OAAOG,MAAP,oCACA1L,QAAQC,IAAR,qCAA0C2K,KAAKC,UAAUjP,KAAKqI,SAA9D,Q,oBAGN,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,SAASC,MAAOC,IAA/B,UACI,wBAAQF,UAAU,MAAMyH,QAAS/P,KAAK+O,YAAtC,sBACA,mBAAGxG,MAAO,CAACyH,QAAS,QAChBC,SAAUjQ,KAAK8H,MAAMgH,SACrBoB,KAAMlQ,KAAK8H,MAAM+G,IACjBsB,IAAK,SAAAlI,GAAC,OAAE,EAAKuH,eAAiBvH,GAHlC,6B,GAlCmBV,IAAMoB,WAA7BiG,EACGhG,YAActB,EA2CRsH,Q,MCrBAwB,MAtBf,WACE,OACE,sBAAK9H,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACE,6DAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,UCVK+H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ec83e57.chunk.js","sourcesContent":["import { TypeNotImplementedError } from '../index.js';\r\n\r\nclass Factory {\r\n    constructor() {\r\n        this.Properties = {}\r\n        this.Arrays = {}\r\n    }\r\n    add(ctor) {\r\n        this.Properties[ctor.name] = ctor;\r\n    }\r\n    create(obj) {\r\n        let type = obj.Type.split('\\0')[0]\r\n\r\n        if (this.Properties[type] === undefined)\r\n            throw new TypeNotImplementedError(type);\r\n\r\n        return this.Properties[type].from(obj);\r\n    }\r\n    createArray(obj) {\r\n        let type = obj.Type.split('\\0')[0]\r\n\r\n        if (this.Arrays[type] === undefined)\r\n            throw new TypeNotImplementedError(type);\r\n\r\n        return this.Arrays[type].from(obj);\r\n    }\r\n}\r\n\r\nexport const PropertyFactory = new Factory();","\r\nexport class Serializer {\r\n    constructor(buf) {\r\n        this._data = buf;\r\n        this._offset = 0;\r\n    }\r\n    get Data() { return this._data }\r\n    get tell() { return this._offset }\r\n    seek(count) {\r\n        if(this._offset >= this._data.length)\r\n            throw new Error(`Reached end of Buffer at offset 0x${this.tell.toString(16)}`);\r\n        return this._offset += count;\r\n    }\r\n    read(count) {\r\n        return this.Data.slice(this.tell, this.seek(count));\r\n    }\r\n    readInt32() {\r\n        let int = this.Data.readInt32LE(this.tell);\r\n        this.seek(4);\r\n        return int;\r\n    }\r\n    readInt16() {\r\n        let int = this.Data.readInt16LE(this.tell);\r\n        this.seek(2)\r\n        return int;\r\n    }\r\n    readUInt8() {\r\n        let int = this.Data.readUInt8(this.tell);\r\n        this.seek(1);\r\n        return int;\r\n    }\r\n    readFloat() {\r\n        let float = this.Data.readFloatLE(this.tell);\r\n        this.seek(4);\r\n        return float;\r\n    }\r\n    readString() {\r\n        let length = this.readInt32();\r\n        return this.read(length).toString('utf8');\r\n    }\r\n    write(buf) {\r\n        this._offset += buf.copy(this.Data, this.tell);\r\n    }\r\n    writeInt32(num) {\r\n        this._offset = this.Data.writeInt32LE(num, this.tell);\r\n    }\r\n    writeInt16(num) {\r\n        this._offset = this.Data.writeInt16LE(num, this.tell);\r\n    }\r\n    writeUInt8(byte) {\r\n        this._offset = this.Data.writeUInt8(byte, this.tell);\r\n    }\r\n    writeFloat(num) {\r\n        this._offset = this.Data.writeFloatLE(num, this.tell);\r\n    }\r\n    writeString(str) {\r\n        this._offset = this.Data.writeInt32LE(str.length, this.tell);\r\n        this._offset += this.Data.write(str, this.tell);\r\n    }\r\n    append(buf) {\r\n        this._data = Buffer.concat([this.Data, buf]);\r\n        this._offset += buf.length;\r\n    }\r\n    static alloc(size) {\r\n        return new Serializer(Buffer.alloc(size));\r\n    }\r\n}","import { Serializer } from '../../index.js'\r\nexport class Property {\r\n    constructor() {\r\n        this.Name = \"\";\r\n        this.Type = \"\";\r\n    }\r\n    /**\r\n     * Per-property byte size getter\r\n     * @returns {Number} `Size` in bytes of all attributes and properties held by this property to be serialized\r\n     */\r\n    get Size() {\r\n        throw new Error(`Size getter not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Per-property deserialization function\r\n     * @param {Serializer} serial Serializer instance used to read a buffer\r\n     * @param {Number} size Size in bytes or Count of elements for Arrays\r\n     * @returns {Property} Returns `this` instance\r\n     */\r\n    deserialize(serial, size) {\r\n        throw new Error(`Deserialization not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Per-property serialization function\r\n     * @returns {Buffer} Returns a `Buffer` of the serialized data\r\n     */\r\n    serialize() {\r\n        throw new Error(`Serialization not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Factory function for a `Property` type. This should instantiate a `new Property` with default values if not given in the `json`\r\n     * @param {Object} json Template from which to create a new instance of a `Property`\r\n     */\r\n    static from(json) {\r\n        throw new Error(`from() not implemented for property: ${this.Type}`);\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/index.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\n\r\nexport class BoolProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = false;\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 10;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.Property = serial.readUInt8() === 1;\r\n        serial.seek(1);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.seek(8);\r\n        serial.writeUInt8(this.Property === true ? 1 : 0);\r\n        serial.seek(1);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this)\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new BoolProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/index.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\n\r\nexport class IntProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = [];\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        this.Property[0] = serial.readInt32();\r\n        serial.seek(1);\r\n        this.Property[1] = serial.readInt32();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(4);\r\n        serial.writeInt32(this.Property[0]);\r\n        serial.seek(1);\r\n        serial.writeInt32(this.Property[1]);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new IntProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\n\r\nexport class FloatProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = [];\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        this.Property[0] = serial.readInt32();\r\n        serial.seek(1);\r\n        this.Property[1] = serial.readFloat();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(4);\r\n        serial.writeInt32(this.Property[0]);\r\n        serial.seek(1);\r\n        serial.writeFloat(this.Property[1]);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new FloatProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class StrProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new StrProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\n\r\nexport class ObjectProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new ObjectProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class SoftObjectProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        serial.seek(4);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 8);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        serial.seek(4);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new SoftObjectProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class StructProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.StoredPropertyType = \"\";\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8; // 4 byte size + 4 byte padding\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 17; // 17 byte padding\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            size += this.Properties[i].Size;\r\n        }\r\n        return size;\r\n    }\r\n    get HeaderSize() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8;\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 17;\r\n        return size\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, size) {\r\n        console.log(`Deserializing ${this.Name} Size: ${size}`)\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString();\r\n        serial.seek(17);\r\n        let end = serial.tell + size;\r\n        let i = 0;\r\n        while (serial.tell < end) {\r\n            let Name = this.StoredPropertyType;\r\n            let Type = 'Tuple';\r\n            let prop = PropertyFactory.create({ Name, Type })\r\n            prop.deserialize(serial)\r\n            this.Properties.push(prop);\r\n            i++;\r\n        }\r\n        console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Size - this.HeaderSize);\r\n        serial.seek(4);\r\n        serial.writeString(this.StoredPropertyType);\r\n        serial.seek(17);\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            serial.write(this.Properties[i].serialize());\r\n        }\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let struct = new StructProperty();\r\n        struct.Name = obj.Name;\r\n        struct.Type = obj.Type;\r\n        struct.StoredPropertyType = obj.StoredPropertyType;\r\n        struct.Properties = [];\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach((prop) => struct.Properties.push(PropertyFactory.create(prop)));\r\n        return struct;\r\n    }\r\n}\r\n","import { Buffer } from 'buffer'\r\nimport { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { SerializationError } from '../index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class ArrayProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.StoredPropertyType = \"\";\r\n        this.Property = new Property();\r\n    }\r\n    get Size() {\r\n        let size = 0;\r\n        size += this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8; // 4 byte size + 4 byte padding\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 5; // 1 byte padding + 2 byte int + 2 byte padding\r\n        size += this.Property.Size;\r\n        return size;\r\n    }\r\n    get HeaderSize() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8;\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 1;\r\n        return size;\r\n    }\r\n    get ArraySize() {\r\n        if (this.StoredPropertyType === 'IntProperty\\0')\r\n            return 12;\r\n        else\r\n            return this.Size - this.HeaderSize;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString()\r\n        serial.seek(1);\r\n        let count = serial.readInt16();\r\n        serial.seek(2);\r\n        this.Property = PropertyFactory.createArray({\r\n            Name: this.Name,\r\n            Type: this.StoredPropertyType\r\n        });\r\n        this.Property.deserialize(serial, count)\r\n\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.ArraySize);\r\n        serial.seek(4);\r\n        serial.writeString(this.StoredPropertyType);\r\n        serial.seek(1);\r\n        serial.writeInt16(this.Property.Count);\r\n        serial.seek(2);\r\n        serial.write(this.Property.serialize());\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new ArrayProperty();\r\n        array.Name = obj.Name;\r\n        array.Type = obj.Type;\r\n        array.StoredPropertyType = obj.StoredPropertyType;\r\n        if (obj.Property !== undefined)\r\n            array.Property = PropertyFactory.createArray(obj.Property);\r\n        return array;\r\n    }\r\n}","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js';\r\n\r\nexport class EnumProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.EnumType = \"\";\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + this.EnumType.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.EnumType = serial.readString();\r\n        serial.seek(1);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(4);\r\n        serial.writeString(this.EnumType);\r\n        serial.seek(1);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new EnumProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class Tuple extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = 'Tuple';\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = 0;\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            size += this.Properties[i].Size;\r\n        }\r\n        size += 9;\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial) {\r\n        let Name;\r\n        while ((Name = serial.readString()) !== 'None\\0') {\r\n            let Type = serial.readString();\r\n            let Size = serial.readInt32();\r\n            let prop = PropertyFactory.create({ Name, Type });\r\n            prop.deserialize(serial, Size);\r\n            this.Properties.push(prop);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            serial.write(this.Properties[i].serialize());\r\n        }\r\n        serial.writeString('None\\0');\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let tuple = new Tuple();\r\n        tuple.Name = obj.Name;\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach(prop => tuple.Properties.push(PropertyFactory.create(prop)));\r\n        return tuple;\r\n    }\r\n}","import { Buffer } from 'buffer'\r\nimport { Property } from './index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class Guid extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = 'Guid';\r\n        this.Id = \"00000000-00-00-00-000000000000\";\r\n        this.Value = 0;\r\n    }\r\n    get Size() {\r\n        return 20;\r\n    }\r\n    deserialize(serial) {\r\n        this.Id = `${serial.read(4).swap32().toString('hex')}`\r\n        this.Id += `-${serial.read(2).swap16().toString('hex')}`\r\n        this.Id += `-${serial.read(2).swap16().toString('hex')}`\r\n        this.Id += `-${serial.read(2).toString('hex')}`\r\n        this.Id += `-${serial.read(6).toString('hex')}`\r\n        this.Value = serial.readInt32();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let guid = this.Id.split('-');\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(Buffer.from(guid[0], 'hex').swap32());\r\n        serial.write(Buffer.from(guid[1], 'hex').swap16());\r\n        serial.write(Buffer.from(guid[2], 'hex').swap16());\r\n        serial.write(Buffer.from(guid[3], 'hex'));\r\n        serial.write(Buffer.from(guid[4], 'hex'));\r\n        serial.writeInt32(this.Value);\r\n        if (serial.tell !== 20)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let guid = new Guid();\r\n        guid.Id = obj.Id;\r\n        guid.Value = obj.Value;\r\n        return guid;\r\n    }\r\n}\r\n","export * from './models/index.js'\r\nexport * from './utils/index.js'","export class SerializationError extends Error {\r\n    constructor(prop) {\r\n        super(`Problem occurred during serialization of Property: ${prop.Name}`);\r\n    }\r\n}\r\n\r\nexport class DeserializationError extends Error {\r\n    constructor(type, offset) {\r\n        super(`Problem occurred during deserialization of Property '${type}' at offset 0x${offset.toString(16)}`)\r\n    }\r\n}\r\n\r\nexport class TypeNotImplementedError extends Error {\r\n    constructor(type) {\r\n        super(`No implementation for Property type: '${type}'`);\r\n    }\r\n}\r\n","import { Property } from '../properties/index.js'\r\nimport { PropertyFactory } from '../factories/index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class IntArray extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = \"IntProperty\"\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = this.Properties.length > 1 ? 8 : 4;\r\n        this.Properties.forEach((int) => {\r\n            size += int.Size\r\n        });\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, count) {\r\n        serial.seek((count > 1) ? 8 : 4);\r\n        for (let i = 0; i < count; i++) {\r\n            let Name = serial.readString();\r\n            let Type = serial.readString();\r\n            let Size = serial.readInt32();\r\n            let prop = PropertyFactory.create({ Name, Type });\r\n            prop.deserialize(serial);\r\n            this.Properties.push(prop);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.seek(this.Count > 1 ? 8 : 4);\r\n        this.Properties.forEach(int => serial.write(int.serialize()))\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new IntArray();\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach(int => array.Properties.push(PropertyFactory.create(int)));\r\n        return array;\r\n    }\r\n}","import { Property } from '../properties/index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class SoftObjectArray extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = \"SoftObjectProperty\";\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = 8;\r\n        this.Properties.forEach((str) => {\r\n            size += str.length + 4;\r\n        });\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, count) {\r\n        for (let i = 0; i < count; i++) {\r\n            this.Properties.push(serial.readString());\r\n            serial.seek(4);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        this.Properties.forEach(str => {\r\n            serial.writeString(str);\r\n            serial.seek(4);\r\n        });\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new SoftObjectArray();\r\n        if (obj.Properties !== undefined)\r\n            array.Properties = obj.Properties;\r\n        return array;\r\n    }\r\n}","import { StructProperty } from \"../properties/index.js\";\r\nimport { PropertyFactory } from \"../index.js\";\r\n\r\nexport class StructArray extends StructProperty {\r\n    deserialize(serial, count) {\r\n        console.log(`Deserializing ${this.Name} Count: ${count}`)\r\n        this.Name = serial.readString()\r\n        this.Type = serial.readString()\r\n        let Size = serial.readInt32();\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString();\r\n        serial.seek(17);\r\n        let i = 0;\r\n        while (i < count) {\r\n            let Name = this.StoredPropertyType;\r\n            let Type = 'Tuple';\r\n            let prop = PropertyFactory.create({ Name, Type })\r\n            prop.deserialize(serial)\r\n            this.Properties.push(prop);\r\n            i++;\r\n        }\r\n        console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\r\n        return this;\r\n    }\r\n    static from(obj) {\r\n        let struct = new StructArray();\r\n        struct.Name = obj.Name;\r\n        struct.Type = obj.Type;\r\n        struct.StoredPropertyType = obj.StoredPropertyType;\r\n        struct.Properties = [];\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach((prop) => struct.Properties.push(PropertyFactory.create(prop)));\r\n        return struct;\r\n    }\r\n}","import { PropertyFactory } from './factories/index.js'\r\nimport {\r\n    ArrayProperty,\r\n    BoolProperty,\r\n    EnumProperty,\r\n    FloatProperty,\r\n    IntProperty,\r\n    ObjectProperty,\r\n    SoftObjectProperty,\r\n    StrProperty,\r\n    StructProperty,\r\n    Tuple,\r\n    Guid\r\n} from './properties/index.js'\r\n\r\nimport {\r\n    IntArray,\r\n    SoftObjectArray,\r\n    StructArray\r\n} from './arrays/index.js'\r\n\r\nPropertyFactory.Properties['ArrayProperty'] = ArrayProperty;\r\nPropertyFactory.Properties['BoolProperty'] = BoolProperty;\r\nPropertyFactory.Properties['EnumProperty'] = EnumProperty;\r\nPropertyFactory.Properties['FloatProperty'] = FloatProperty;\r\nPropertyFactory.Properties['IntProperty'] = IntProperty;\r\nPropertyFactory.Properties['ObjectProperty'] = ObjectProperty;\r\nPropertyFactory.Properties['SoftObjectProperty'] = SoftObjectProperty;\r\nPropertyFactory.Properties['StrProperty'] = StrProperty;\r\nPropertyFactory.Properties['StructProperty'] = StructProperty;\r\nPropertyFactory.Properties['Tuple'] = Tuple;\r\nPropertyFactory.Properties['Guid'] = Guid;\r\nPropertyFactory.Arrays['IntArray'] = IntArray;\r\nPropertyFactory.Arrays['SoftObjectArray'] = SoftObjectArray;\r\nPropertyFactory.Arrays['StructProperty'] = StructArray;\r\nPropertyFactory.Arrays['IntProperty'] = IntArray;\r\nPropertyFactory.Arrays['SoftObjectProperty'] = SoftObjectArray;\r\n// console.log(PropertyFactory);\r\n\r\nexport { PropertyFactory }\r\nexport { Gvas } from './Gvas.js'\r\nexport { GvasHeader } from './GvasHeader.js'\r\nexport * from './PropertyErrors.js'\r\nexport * from './properties/index.js'\r\nexport * from './arrays/index.js'\r\n","export * from './Serializer.js';","import { PropertyFactory } from './factories/index.js';\r\nimport { SerializationError } from './PropertyErrors.js';\r\nimport { GvasHeader } from './index.js';\r\nimport { Tuple } from './properties/index.js';\r\nimport { Serializer } from '../utils/Serializer.js';\r\n\r\nexport class Gvas {\r\n    constructor() {\r\n        this.Header = new GvasHeader();\r\n        this.Properties = new Tuple();\r\n    }\r\n    get Size() {\r\n        let size = this.Header.Size;\r\n        size += this.Properties.Size;\r\n        size += 4;\r\n        return size;\r\n    }\r\n    deserialize(serial) {\r\n        let format = serial.read(4);\r\n        if (Buffer.compare(Buffer.from('GVAS'), format) !== 0)\r\n            throw Error(`Unexpected header, expected 'GVAS`)\r\n\r\n        this.Header.deserialize(serial);\r\n        this.Properties.Name = this.Header.SaveGameType;\r\n        this.Properties.deserialize(serial);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(this.Header.serialize());\r\n        serial.write(this.Properties.serialize());\r\n        serial.seek(4);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let gvas = new Gvas();\r\n        gvas.Header = GvasHeader.from(obj.Header);\r\n        gvas.Properties = PropertyFactory.create(obj.Properties);\r\n        return gvas;\r\n    }\r\n}\r\n","import { SerializationError } from './index.js';\r\nimport { PropertyFactory } from './factories/index.js'\r\nimport { Serializer } from '../utils/Serializer.js';\r\n\r\nexport class GvasHeader {\r\n    constructor() {\r\n        this.Format = 'GVAS';\r\n        this.SaveGameVersion = 0;\r\n        this.PackageVersion = 0;\r\n        this.EngineVersion = {\r\n            Major: 0,\r\n            Minor: 0,\r\n            Patch: 0,\r\n            Build: 0,\r\n            BuildId: \"\"\r\n        }\r\n        this.CustomFormatVersion = 0;\r\n        this.CustomFormatData = {\r\n            Count: 0,\r\n            Entries: []\r\n        }\r\n        this.SaveGameType = \"\";\r\n    }\r\n    get Size() {\r\n        let size = this.Format.length;\r\n        size += 18;\r\n        size += this.EngineVersion.BuildId.length + 4;\r\n        size += 8;\r\n        this.CustomFormatData.Entries.forEach(guid => {\r\n            size += guid.Size; // 20\r\n        })\r\n        size += this.SaveGameType.length + 4;\r\n        return size;\r\n    }\r\n    deserialize(serial) {\r\n        this.SaveGameVersion = serial.readInt32();\r\n        this.PackageVersion = serial.readInt32();\r\n        this.EngineVersion.Major = serial.readInt16();\r\n        this.EngineVersion.Minor = serial.readInt16();\r\n        this.EngineVersion.Patch = serial.readInt16();\r\n        this.EngineVersion.Build = serial.readInt32();\r\n        this.EngineVersion.BuildId = serial.readString();\r\n        this.CustomFormatVersion = serial.readInt32();\r\n        this.CustomFormatData.Count = serial.readInt32();\r\n        for (let i = 0; i < this.CustomFormatData.Count; i++) {\r\n            let guid = PropertyFactory.create({ Type: 'Guid' })\r\n            this.CustomFormatData.Entries.push(guid.deserialize(serial));\r\n        }\r\n        this.SaveGameType = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(Buffer.from(this.Format));\r\n        serial.writeInt32(this.SaveGameVersion);\r\n        serial.writeInt32(this.PackageVersion);\r\n\r\n        serial.writeInt16(this.EngineVersion.Major);\r\n        serial.writeInt16(this.EngineVersion.Minor);\r\n        serial.writeInt16(this.EngineVersion.Patch);\r\n        serial.writeInt32(this.EngineVersion.Build);\r\n        serial.writeString(this.EngineVersion.BuildId);\r\n\r\n        serial.writeInt32(this.CustomFormatVersion);\r\n        serial.writeInt32(this.CustomFormatData.Count);\r\n        this.CustomFormatData.Entries.forEach(guid => serial.write(guid.serialize()));\r\n        serial.writeString(this.SaveGameType);\r\n        if (serial.tell != this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let header = new GvasHeader();\r\n        header.SaveGameVersion = obj.SaveGameVersion;\r\n        header.PackageVersion = obj.PackageVersion;\r\n        header.EngineVersion = obj.EngineVersion;\r\n        header.CustomFormatVersion = obj.CustomFormatVersion;\r\n        header.CustomFormatData.Count = obj.CustomFormatData.Count;\r\n        obj.CustomFormatData.Entries.forEach(guid => {\r\n            header.CustomFormatData.Entries.push(PropertyFactory.create(guid));\r\n        });\r\n        header.SaveGameType = obj.SaveGameType;\r\n        return header;\r\n    }\r\n}","import React from 'react'\r\n\r\nconst StateContext = React.createContext({\r\n    seed:\"\",\r\n    char:\"\",\r\n    diff:\"\"\r\n})\r\n\r\nexport default StateContext;","import React from 'react';\r\nimport StateContext from '../context.js';\r\nimport styles from './dropdowns.css';\r\n\r\nclass Characters extends React.Component {\r\n  static contextType = StateContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {char:\"\"}\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    console.log(`Selected ${e.target.value}`)\r\n    this.setState({char:e.target.value})\r\n    this.context.char = e.target.value;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Dropdown\" style={styles}>\r\n          <select name=\"Characters\" id=\"Character-Select\" onChange={this.handleChange}>\r\n              <option value=\"\">--Choose a Character--</option>\r\n              <option value=\"goll\">Goll</option>\r\n              <option value=\"freyr\">Freyr</option>\r\n              <option value=\"hildr\">Hildr</option>\r\n              <option value=\"njord\">Njord</option>\r\n              <option value=\"odr\">Odr</option>\r\n              <option value=\"skuld\">Skuld</option>\r\n              <option value=\"geri\">Geri</option>\r\n              <option value=\"herfjoter\">Herfjoter</option>\r\n              <option value=\"run\">Run</option>\r\n              <option value=\"sanngridr\">Sanngridr</option>\r\n          </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characters;","import React from 'react';\r\nimport StateContext from '../context.js';\r\nimport styles from './dropdowns.css';\r\n\r\nclass Difficulties extends React.Component {\r\n    static contextType = StateContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {diff:\"\"};\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(e) {\r\n      console.log(`Selected ${e.target.value}`);\r\n      this.setState({diff:e.target.value});\r\n      this.context.diff = e.target.value;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Dropdown\" style={styles}>\r\n          <select name=\"Difficulties\" id=\"Difficulty-Select\" onChange={this.handleChange}>\r\n              <option value=\"\">--Choose a Difficulty--</option>\r\n              <option value=\"EASY\">Easy</option>\r\n              <option value=\"HARD\">Hard</option>\r\n              <option value=\"HELLISH\">Hellish</option>\r\n              <option value=\"PRACTICE\">Practice</option>\r\n          </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Difficulties;","import React from 'react';\r\nimport StateContext from '../context.js';\r\nimport styles from './seedfield.css';\r\n\r\nclass SeedField extends React.Component {\r\n  static contextType = StateContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {seed:\"enter a seed here...\"}\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({seed:e.target.value});\r\n    this.context.seed = e.target.value;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"SeedField\" styles={styles}>\r\n        <div>\r\n          <input onChange={this.handleChange} placeholder={this.state.seed} value={this.context.seed}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SeedField;","import { prng_alea } from 'esm-seedrandom'\r\n\r\nexport const Prng = {\r\n    _prng:null,\r\n    init: function(seed) {\r\n        this._prng = prng_alea(seed, {state: true})\r\n    },\r\n    int32: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.int32();\r\n        return 0;\r\n    },\r\n    int16: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.int32() % (2**16);\r\n        return 0;\r\n    },\r\n    quick: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.quick();\r\n        return 0;\r\n    },\r\n    range: function(min, max) {\r\n        min = (min !== undefined) ? min : 0;\r\n        max = (max !== undefined) ? max : 1;\r\n        return Math.floor(this._prng.quick() * (max - min + 1)) + min;\r\n    },\r\n    choose: function([min, max], num) {\r\n        let values = [];\r\n        num = (num !== undefined) ? num : this.range(min, max);\r\n        if(num !== 0 && num === (max - min + 1)) {\r\n            let i = min;\r\n            while(values.length < num)\r\n                values.push(i++);\r\n            return values;\r\n        }\r\n        for(let i = 0; i < num; i++) {\r\n            let val;\r\n            while(values.includes(val = this.range(min, max)));\r\n            values.push(val);\r\n        }\r\n        return values;\r\n    },\r\n    // Algorithm based on:\r\n    // Weighted Random Sampling (2005; Efraimidis, Spirakis)\r\n    //\r\n    // Credits: https://github.com/denizdogan/weighted-shuffle by denizdogan\r\n    shuffle: function(array) {\r\n        return array.map(([i, w]) => [i, this.quick() ** (1 / w)])\r\n                    .sort((a, b) => b[1] - a[1]);\r\n    },\r\n    destroy: function() {\r\n        this._prng = null;\r\n    }\r\n}\r\n","import {\r\n    StructProperty\r\n} from 'uesavetool';\r\n\r\nimport { \r\n    T_CHARSTORE,\r\n    CHARSTORE,\r\n    ITEMS,\r\n    REQUIREMENTS,\r\n    Prng,\r\n    PropertyStore\r\n} from './index.js'\r\n\r\nexport class CharacterPropertyStore extends StructProperty {\r\n    constructor() {\r\n        super();\r\n        this.Name = \"CharacterPropertyStore\\u0000\",\r\n        this.Type = \"StructProperty\\u0000\",\r\n        this.StoredPropertyType = \"BPMCharacterPropertyStore\\u0000\",\r\n        this.Properties = [\r\n            PropertyStore.from({\r\n                \"Name\": \"BPMCharacterPropertyStore\\u0000\",\r\n                \"Type\": \"Tuple\",\r\n                \"Properties\": []\r\n            })\r\n        ]\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties[0].addProperty(prop);\r\n    }\r\n    selectItem(list, num) {\r\n        Prng.choose([0, list.length - 1], num)\r\n            .forEach(i => {\r\n                let selection = ITEMS.filter(([n, item]) => item.Type === list[i][1]);\r\n                let p = Object.assign({}, CHARSTORE[list[i][0]]);\r\n                let index = Prng.range(0, selection.length - 1);\r\n                p.Property = selection[index][1].Value;\r\n                this.addProperty(p);\r\n                // console.log(p);\r\n            })\r\n    }\r\n    genLoadout(opts) {\r\n        let loadout = Object.entries(REQUIREMENTS.LOADOUT);\r\n        let abilities = loadout.slice(0, 2);\r\n        let storeditems = loadout.slice(2, 6);\r\n        this.selectItem(abilities, opts.all ? 2 : Prng.range(0, 2));\r\n        this.selectItem(storeditems, opts.all ? 4 : opts.num);\r\n    }\r\n    genChar(prop) {\r\n        let p = Object.assign({}, CHARSTORE[prop]);\r\n        let index;\r\n        let selection = []\r\n        switch(prop) {\r\n            case \"StoredWeapon\":\r\n                selection = ITEMS.filter(([n, i]) => i.Type === 'Weapon');\r\n                index = Prng.range(0, selection.length - 1);\r\n                p.Property = selection[index][1].Value;\r\n                break;\r\n            case \"StoredMobilityAbility\":\r\n                selection = ITEMS.filter(([n, i]) => i.Type === 'Auxilary').slice(0,2);\r\n                index = Prng.range(0, selection.length - 1);\r\n                p.Property = selection[index][1].Value;\r\n                break;\r\n            case \"StoredHealth\":\r\n            case \"StoredShield\":\r\n                p.Property = [0, (25 * Prng.range(0, 7))];\r\n                break;\r\n            case \"StoredCoins\":\r\n            case \"StoredKeys\":\r\n                p.Property = [0, Prng.range(0, 7)];\r\n                break;\r\n        }\r\n        this.addProperty(p);\r\n        // console.log(p);\r\n    }\r\n    static generate(name) {\r\n        let ret = new CharacterPropertyStore();\r\n        let BPMCharacterPropertyStore = T_CHARSTORE[name.toLowerCase()].Properties[0];\r\n        ret.Properties[0] = PropertyStore.from(BPMCharacterPropertyStore);\r\n        if(name === 'run') {\r\n            REQUIREMENTS.RANDCHAR\r\n                .forEach(prop => ret.genChar(prop));\r\n            ret.genLoadout({num: 1});\r\n        }\r\n        return ret;\r\n    }\r\n}","import { \r\n    StructProperty,\r\n    PropertyFactory\r\n} from 'uesavetool';\r\n\r\nimport { \r\n    RUNSTORE,\r\n    REQUIREMENTS,\r\n    ITEMPOOL,\r\n    Prng,\r\n    PropertyStore,\r\n    ItemWeightPair,\r\n    ITEMS\r\n} from './index.js';\r\n\r\nexport class RunPropertyStore extends StructProperty {\r\n    constructor() {\r\n        super();\r\n        this.Name = 'RunPropertyStore\\0';\r\n        this.Type = 'StructProperty\\0';\r\n        this.StoredPropertyType = 'BPMRunPropertyStore\\0'\r\n        this.Properties = [ \r\n            PropertyStore.from({\r\n                \"Name\": \"BPMRunPropertyStore\\u0000\",\r\n                \"Type\": \"Tuple\",\r\n                \"Properties\": []\r\n            })\r\n        ];\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties[0]\r\n            .addProperty(PropertyFactory.create(prop));\r\n    }\r\n    set Difficulty(diff) {\r\n        this.addProperty(RUNSTORE.DIFFICULTY[diff.toUpperCase()]);\r\n    }\r\n    genItemPool(name) {\r\n        let item_pool = Object.assign({}, RUNSTORE[name]);\r\n        let pool = Prng.shuffle(ITEMPOOL[name]);\r\n    \r\n        // console.log(`${name}: `);\r\n        // console.log(pool);\r\n        \r\n        pool.forEach(([item, weight]) => {\r\n            let [name, prop] = ITEMS.find(i => i[0] === item);\r\n            if(name === undefined)\r\n                console.log(`Mislabled/Missing Item: ${item}`)\r\n            else {\r\n                let item_weight_pair;\r\n                if(prop.Type === 'Weapon')\r\n                    item_weight_pair = ItemWeightPair.from(RUNSTORE['BPMWeaponWeightPair'])\r\n                else \r\n                    item_weight_pair = ItemWeightPair.from(RUNSTORE['BPMAbilityWeightPair'])\r\n\r\n                item_weight_pair.Item = prop.Value;\r\n                item_weight_pair.Weight = weight;\r\n                item_pool.Property.Properties.push(item_weight_pair);\r\n            }\r\n        });\r\n        this.addProperty(item_pool);\r\n    }\r\n    genSeeds() {\r\n        for(let i = 0; i <= 9; i++) {\r\n            let gen = Object.assign({}, RUNSTORE.FloorGenerationSeeds);\r\n            let mod = Object.assign({}, RUNSTORE.FloorModifierFloats);\r\n            let play = Object.assign({}, RUNSTORE.FloorPlaySeeds);\r\n            gen.Property = [i, Prng.int16()];\r\n            mod.Property = [i, Prng.range(0, 100)];\r\n            play.Property = [i, Prng.int32()];\r\n            this.addProperty(gen);\r\n            this.addProperty(mod);\r\n            this.addProperty(play);\r\n        }\r\n    }\r\n    assignFloor(floor, name) {\r\n        let room = Object.assign({}, RUNSTORE[name]);\r\n        room.Property = [floor, 1];\r\n        // console.log(room);\r\n        this.addProperty(room);\r\n    }\r\n    genRooms(room) {\r\n        switch(room) {\r\n            case \"LibraryBeforeArmoury\":\r\n                for(let i = 0; i < 4; i++) {\r\n                    if(Prng.range() === 0) {\r\n                        this.assignFloor(2*i, room);\r\n                        this.assignFloor(2*i+1, room);\r\n                    }\r\n                }\r\n                break;\r\n            case \"MinibossChoice\":\r\n                for(let i = 0; i < 4; i++) {\r\n                    Prng.choose([2*i, 2*i+1], 1)\r\n                        .forEach(f => this.assignFloor(f, room));\r\n                }\r\n                break;\r\n            case \"BankRoomChosen\":\r\n            case \"ChallengeRoomChosen\":\r\n            case \"HeroRoomChosen\":\r\n                Prng.choose([0, 5])\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"BlackMarketRoomChosen\":\r\n            case \"PortalRoomChosen\":\r\n                Prng.choose([0, 5], Prng.range())\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"StairsRoomChosen\":\r\n                Prng.choose([0, 0], Prng.range()) //stairs can only be on floor 0\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"ChoiceRoomChosen\":\r\n                let floors = []\r\n                if(this.Properties[0].has(\"StairsRoomChosen\\0\"))\r\n                    floors = Prng.choose([0, 1]);\r\n                else \r\n                    floors = Prng.choose([0, 5], 1);\r\n                floors.forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"GamblingRoomChosen\":\r\n            case \"RerollRoomChosen\":\r\n                Prng.choose([0, 6], 2)\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"PrestigeRoomChosen\":\r\n                Prng.choose([2, 3], Prng.range())\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n        }\r\n    }\r\n    static generate(diff) {\r\n        let ret = new RunPropertyStore();\r\n        REQUIREMENTS.POOLS\r\n            .forEach(pool => ret.genItemPool(pool));\r\n        ret.Difficulty = diff;\r\n        ret.genSeeds();\r\n        REQUIREMENTS.ROOMS.forEach(r => ret.genRooms(r));\r\n        return ret;\r\n    }\r\n}\r\n","import { PropertyFactory, Tuple } from \"uesavetool\";\r\n\r\nexport class PropertyStore extends Tuple {\r\n    constructor() {\r\n        super();\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties.push(PropertyFactory.create(prop));\r\n    }\r\n    has(name) {\r\n        return this.Properties.findIndex(p => p.Name === name) !== -1;\r\n    }\r\n    static from(obj) {\r\n        let ret = new PropertyStore();\r\n        ret.Name = obj.Name;\r\n        ret.Type = obj.Type;\r\n        ret.Properties = [];\r\n        if(obj.Properties)\r\n            obj.Properties.forEach(prop => ret.Properties.push(PropertyFactory.create(prop)))\r\n        return ret;\r\n    }\r\n}","import { \r\n    Gvas, \r\n    GvasHeader, \r\n    PropertyFactory \r\n} from 'uesavetool';\r\n\r\nimport { \r\n    SAVESLOT,\r\n    Prng,\r\n    T_GVAS_HEADER,\r\n    RunPropertyStore, \r\n    CharacterPropertyStore \r\n} from './index.js';\r\n\r\nexport class ContinueStateV2 extends Gvas {\r\n    constructor() {\r\n        super();\r\n        this.Header = GvasHeader.from(T_GVAS_HEADER);\r\n    }\r\n    get Slot() {\r\n        return PropertyFactory.create(SAVESLOT.ContinueStateV2);\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties\r\n            .Properties.push(prop);\r\n    }\r\n    static seededGen({s, c, d}) {\r\n        let save = new ContinueStateV2();\r\n        save.addProperty(save.Slot);\r\n        Prng.init(s);\r\n        save.addProperty(CharacterPropertyStore.generate(c));\r\n        Prng.init(s);\r\n        save.addProperty(RunPropertyStore.generate(d));\r\n        Prng.destroy();\r\n        return save;\r\n    }\r\n}","import {\r\n    PropertyFactory,\r\n    Tuple\r\n} from 'uesavetool'\r\n\r\nimport {\r\n\r\n} from './index.js'\r\n\r\nexport class ItemWeightPair extends Tuple {\r\n    constructor() {\r\n        super()\r\n        this.Name = \"ItemWeightPair\",\r\n        this.Type = \"Tuple\",\r\n        this.Properties = [\r\n            {\r\n                \"Name\": \"Item\",\r\n                \"Type\": \"SoftObjectProperty\\u0000\",\r\n                \"Property\": \"\"\r\n            },\r\n            {\r\n                \"Name\": \"Weight\\u0000\",\r\n                \"Type\": \"FloatProperty\\u0000\",\r\n                \"Property\": []\r\n            }\r\n        ]\r\n    }\r\n    set Item(value) {\r\n        this.Properties[0].Property = value;\r\n    }\r\n    set Weight(value) {\r\n        this.Properties[1].Property = [0, value];\r\n    }\r\n    static from(obj) {\r\n        let ret = new ItemWeightPair();\r\n        ret.Name = obj.Name;\r\n        ret.Type = obj.Type;\r\n        ret.Properties = [];\r\n        if(obj.Properties !== undefined)\r\n            obj.Properties.forEach(prop => ret.Properties.push(PropertyFactory.create(prop)))\r\n        return ret;\r\n    }\r\n}","import { ContinueStateV2 } from './src/index.js';\r\nfunction gen(args) {\r\n    let a = {\r\n        s:args.seed,\r\n        c:args.char,\r\n        d:args.diff\r\n    }\r\n    return ContinueStateV2.seededGen(a);\r\n}\r\n\r\nexport * from './src/index.js'\r\nexport { gen as bpmssg }","import React from 'react';\r\nimport StateContext from '../context.js';\r\nimport {bpmssg} from 'bpm-ssg'\r\nimport styles from './generate.css';\r\n\r\nclass GenerateButton extends React.Component {\r\n  static contextType = StateContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url:null,\r\n      filename:\"\"\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(e) {\r\n      if(this.context.seed !== \"\" && this.context.char !== \"\" && this.context.diff !== \"\") {\r\n        console.log(`Generating save for ${JSON.stringify(this.context)}`)\r\n        let savedata = [bpmssg(this.context).serialize()];\r\n        let filename = `ContinueStateV2.sav`;\r\n        let file = new File(savedata, filename);\r\n        let url = URL.createObjectURL(file);\r\n        this.setState({url,filename}, () => {\r\n          this.dofileDownload.click();\r\n          URL.revokeObjectURL(url);\r\n          url = null;\r\n          file = null;\r\n          filename = \"\";\r\n          this.setState({url,filename}, () => window.location.reload(false))\r\n        })\r\n      } else {\r\n        window.alert(`All fields must be chosen/filled`);\r\n        console.log(`Error: Value missing from '${JSON.stringify(this.context)}'`);\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Button\" style={styles}>\r\n          <button className=\"gen\" onClick={this.handleClick}>Generate</button>\r\n          <a style={{display: \"none\"}}\r\n              download={this.state.filename}\r\n              href={this.state.url}\r\n              ref={e=>this.dofileDownload = e}\r\n          >download</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerateButton;","import Characters from './components/dropdowns/characters';\nimport Difficulties from './components/dropdowns/difficulties';\nimport SeedField from './components/seed/seedfield';\nimport GenerateButton from './components/generate/generate';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"Title\">\n          <h1>BPM Seeded Save Generator</h1>\n        </div>\n        <div className=\"field\">\n          <Characters />\n        </div>\n        <div className=\"field\">\n          <Difficulties />\n        </div>\n        <div className=\"field\">\n          <SeedField />\n        </div>\n        <div className=\"Button\">\n          <GenerateButton/>\n        </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}