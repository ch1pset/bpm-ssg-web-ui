{"version":3,"sources":["../../../Programming/js/UESaveTool/models/factories/PropertyFactory.js","../../../Programming/js/UESaveTool/utils/Serializer.js","../../../Programming/js/UESaveTool/models/properties/Property.js","../../../Programming/js/UESaveTool/models/properties/BoolProperty.js","../../../Programming/js/UESaveTool/models/properties/IntProperty.js","../../../Programming/js/UESaveTool/models/properties/FloatProperty.js","../../../Programming/js/UESaveTool/models/properties/StrProperty.js","../../../Programming/js/UESaveTool/models/properties/ObjectProperty.js","../../../Programming/js/UESaveTool/models/properties/SoftObjectProperty.js","../../../Programming/js/UESaveTool/models/properties/StructProperty.js","../../../Programming/js/UESaveTool/models/properties/ArrayProperty.js","../../../Programming/js/UESaveTool/models/properties/EnumProperty.js","../../../Programming/js/UESaveTool/models/properties/Tuple.js","../../../Programming/js/UESaveTool/models/properties/Guid.js","../../../Programming/js/UESaveTool/models/PropertyErrors.js","../../../Programming/js/UESaveTool/models/arrays/IntArray.js","../../../Programming/js/UESaveTool/models/arrays/SoftObjectArray.js","../../../Programming/js/UESaveTool/models/arrays/StructArray.js","../../../Programming/js/UESaveTool/models/index.js","../../../Programming/js/UESaveTool/index.js","../../../Programming/js/UESaveTool/utils/index.js","../../../Programming/js/UESaveTool/models/Gvas.js","../../../Programming/js/UESaveTool/models/GvasHeader.js","utils/xorshift.js","components/tooltip/tooltip.js","components/seed/seedfield.js","components/download/download.js","api/index.js","components/version/version.js","components/dropdowns/dropdown.js","components/checkboxes/checkbox.js","../../../Programming/js/bpm-ssg/src/utils.js","../../../Programming/js/bpm-ssg/src/Prng.js","../../../Programming/js/bpm-ssg/src/PropertyStore.js","../../../Programming/js/bpm-ssg/src/ContinueStateV2.js","../../../Programming/js/bpm-ssg/src/ItemWeightPair.js","../../../Programming/js/bpm-ssg/src/ItemPool.js","../../../Programming/js/bpm-ssg/src/BPMRoom.js","../../../Programming/js/bpm-ssg/src/Generate.js","../../../Programming/js/bpm-ssg/src/BPMCharacter.js","../../../Programming/js/bpm-ssg/src/BPMRun.js","components/ssg/ssg.js","../../../Programming/js/bpm-ssg/index.js","media/bpm_logo_1x1.png","App.js","reportWebVitals.js","index.js"],"names":["PropertyFactory","this","Properties","Arrays","obj","type","Type","split","undefined","TypeNotImplementedError","from","Serializer","buf","_data","_offset","count","length","Error","tell","toString","Data","slice","seek","int","readInt32LE","readInt16LE","readUInt8","float","readFloatLE","readInt32","read","copy","num","writeInt32LE","writeInt16LE","byte","writeUInt8","writeFloatLE","str","write","Buffer","concat","size","alloc","Property","Name","serial","json","BoolProperty","Size","writeString","SerializationError","prop","Object","assign","IntProperty","writeInt32","FloatProperty","readFloat","writeFloat","StrProperty","readString","ObjectProperty","SoftObjectProperty","StructProperty","StoredPropertyType","i","end","create","deserialize","push","HeaderSize","serialize","struct","forEach","ArrayProperty","readInt16","createArray","ArraySize","writeInt16","Count","array","EnumProperty","EnumType","Tuple","tuple","Guid","Id","Value","swap32","swap16","guid","IntArray","SoftObjectArray","StructArray","Gvas","Header","GvasHeader","format","compare","SaveGameType","gvas","Format","SaveGameVersion","PackageVersion","EngineVersion","Major","Minor","Patch","Build","BuildId","CustomFormatVersion","CustomFormatData","Entries","header","xorshift","seed","x","Tooltip","props","show","tooltip","style","Styles","className","children","React","Component","SeedField","state","hover","handleChange","bind","handleClick","handleHover","e","setState","target","value","onChange","genSeed","Date","now","output","at","styles","onPointerEnter","onPointerLeave","placeholder","onClick","DownloadButton","url","filename","file","File","data","URL","createObjectURL","dofileDownload","click","revokeObjectURL","label","display","download","href","ref","API","gist","VersionInfo","active","fetch","then","r","text","update","JSON","parse","files","content","Dropdown","selection","console","log","options","map","opt","name","createOptions","Checkbox","checked","cb","change","toggleTooltip","range","min","max","numbers","createProperty","template","Prng","_prng","init","prng_alea","int32","int16","quick","pick","Math","floor","choose","values","splice","chance","pct_float","shuffle","w","pow","sort","aw","select","list","destroy","PropertyStore","findIndex","p","get","find","add","indx","getIndex","ContinueStateV2","T_GVAS_HEADER","SAVESLOT","SaveSlotName","CHARSTORE","CharacterPropertyStore","RUNSTORE","RunPropertyStore","valueOf","set","bpmchar","bpmrun","char","diff","opts","save","Slot","Character","BPMCharacter","generate","Run","BPMRun","REQUIREMENTS","POOLS","delItem","StoredWeapon","ItemWeightPair","isWeapon","Weight","Item","item","weight","ITEMS","n","item_weight_pair","ItemPool","iw","enhance","pool","ITEMPOOL","Standard","addItem","BPMRoom","index","room","Floor","FLOOR","items","filter","setProperty","Generate","pname","amt","rate","flat","f","health","shield","T_CHARSTORE","toLowerCase","RANDCHAR","StoredHealth","StoredShield","ABILITIES","ability","STOREDITEMS","BPMDifficulty","FloorIndex","SpecialChapterVisit","ShopItemPool","TreasureItemPool","BossItemPool","WeaponPool","WeaponCheapPool","WeaponAffordablePool","WeaponExpensivePool","LibrarySecondaryPool","LibraryUltimatePool","ChoiceRoomItemsPoolHead","ChoiceRoomItemsPoolFoot","ChoiceRoomItemsPoolShield","ChoiceRoomItemsPoolArm","DevilStatuePool","AngelStatuePool","CursedChestPool","FutureProofingAPool","FutureProofingBPool","DIFFICULTY","toUpperCase","visited","SPECIALCHAPTER","CRYPTS","parseInt","run","Difficulty","FLOORINDEX","ENHANCE","SEEDS","flatMap","fseed","ROOMS","has","CHARACTERS","DIFFICULTIES","FLOORS","TOOTIP","SSG","isComponent","sel","valid","args","keys","arg_msg","validate","bpmssg","activateDownload","unset","k","window","alert","join","result","key","application","version","App","src","bpm_logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aea20cae.chunk.js","sourcesContent":["import { TypeNotImplementedError } from '../index.js';\r\n\r\nclass Factory {\r\n    constructor() {\r\n        this.Properties = {}\r\n        this.Arrays = {}\r\n    }\r\n    create(obj) {\r\n        let type = obj.Type.split('\\0')[0]\r\n\r\n        if (this.Properties[type] === undefined)\r\n            throw new TypeNotImplementedError(type);\r\n\r\n        return this.Properties[type].from(obj);\r\n    }\r\n    createArray(obj) {\r\n        let type = obj.Type.split('\\0')[0]\r\n\r\n        if (this.Arrays[type] === undefined)\r\n            throw new TypeNotImplementedError(type);\r\n\r\n        return this.Arrays[type].from(obj);\r\n    }\r\n}\r\n\r\nexport const PropertyFactory = new Factory();","\r\nexport class Serializer {\r\n    constructor(buf) {\r\n        this._data = buf;\r\n        this._offset = 0;\r\n    }\r\n    get Data() { return this._data }\r\n    get tell() { return this._offset }\r\n    seek(count) {\r\n        if(this._offset >= this._data.length)\r\n            throw new Error(`Reached end of Buffer at offset 0x${this.tell.toString(16)}`);\r\n        return this._offset += count;\r\n    }\r\n    read(count) {\r\n        return this.Data.slice(this.tell, this.seek(count));\r\n    }\r\n    readInt32() {\r\n        let int = this.Data.readInt32LE(this.tell);\r\n        this.seek(4);\r\n        return int;\r\n    }\r\n    readInt16() {\r\n        let int = this.Data.readInt16LE(this.tell);\r\n        this.seek(2)\r\n        return int;\r\n    }\r\n    readUInt8() {\r\n        let int = this.Data.readUInt8(this.tell);\r\n        this.seek(1);\r\n        return int;\r\n    }\r\n    readFloat() {\r\n        let float = this.Data.readFloatLE(this.tell);\r\n        this.seek(4);\r\n        return float;\r\n    }\r\n    readString() {\r\n        let length = this.readInt32();\r\n        return this.read(length).toString('utf8');\r\n    }\r\n    write(buf) {\r\n        this._offset += buf.copy(this.Data, this.tell);\r\n    }\r\n    writeInt32(num) {\r\n        this._offset = this.Data.writeInt32LE(num, this.tell);\r\n    }\r\n    writeInt16(num) {\r\n        this._offset = this.Data.writeInt16LE(num, this.tell);\r\n    }\r\n    writeUInt8(byte) {\r\n        this._offset = this.Data.writeUInt8(byte, this.tell);\r\n    }\r\n    writeFloat(num) {\r\n        this._offset = this.Data.writeFloatLE(num, this.tell);\r\n    }\r\n    writeString(str) {\r\n        this._offset = this.Data.writeInt32LE(str.length, this.tell);\r\n        this._offset += this.Data.write(str, this.tell);\r\n    }\r\n    append(buf) {\r\n        this._data = Buffer.concat([this.Data, buf]);\r\n        this._offset += buf.length;\r\n    }\r\n    static alloc(size) {\r\n        return new Serializer(Buffer.alloc(size));\r\n    }\r\n}","import { Serializer } from '../../index.js'\r\nexport class Property {\r\n    constructor() {\r\n        this.Name = \"\";\r\n        this.Type = \"\";\r\n    }\r\n    /**\r\n     * Per-property byte size getter\r\n     * @returns {Number} `Size` in bytes of all attributes and properties held by this property to be serialized\r\n     */\r\n    get Size() {\r\n        throw new Error(`Size getter not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Per-property deserialization function\r\n     * @param {Serializer} serial Serializer instance used to read a buffer\r\n     * @param {Number} size Size in bytes or Count of elements for Arrays\r\n     * @returns {Property} Returns `this` instance\r\n     */\r\n    deserialize(serial, size) {\r\n        throw new Error(`Deserialization not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Per-property serialization function\r\n     * @returns {Buffer} Returns a `Buffer` of the serialized data\r\n     */\r\n    serialize() {\r\n        throw new Error(`Serialization not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Factory function for a `Property` type. This should instantiate a `new Property` with default values if not given in the `json`\r\n     * @param {Object} json Template from which to create a new instance of a `Property`\r\n     */\r\n    static from(json) {\r\n        throw new Error(`from() not implemented for property: ${this.Type}`);\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/index.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\n\r\nexport class BoolProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = false;\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 10;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.Property = serial.readUInt8() === 1;\r\n        serial.seek(1);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.seek(8);\r\n        serial.writeUInt8(this.Property === true ? 1 : 0);\r\n        serial.seek(1);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this)\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new BoolProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/index.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\n\r\nexport class IntProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = [];\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        this.Property[0] = serial.readInt32();\r\n        serial.seek(1);\r\n        this.Property[1] = serial.readInt32();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(4);\r\n        serial.writeInt32(this.Property[0]);\r\n        serial.seek(1);\r\n        serial.writeInt32(this.Property[1]);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new IntProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\n\r\nexport class FloatProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = [];\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        this.Property[0] = serial.readInt32();\r\n        serial.seek(1);\r\n        this.Property[1] = serial.readFloat();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(4);\r\n        serial.writeInt32(this.Property[0]);\r\n        serial.seek(1);\r\n        serial.writeFloat(this.Property[1]);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new FloatProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class StrProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new StrProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\n\r\nexport class ObjectProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new ObjectProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class SoftObjectProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        serial.seek(4);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 8);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        serial.seek(4);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new SoftObjectProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class StructProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.StoredPropertyType = \"\";\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8; // 4 byte size + 4 byte padding\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 17; // 17 byte padding\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            size += this.Properties[i].Size;\r\n        }\r\n        return size;\r\n    }\r\n    get HeaderSize() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8;\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 17;\r\n        return size\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, size) {\r\n        // console.log(`Deserializing ${this.Name} Size: ${size}`)\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString();\r\n        serial.seek(17);\r\n        let end = serial.tell + size;\r\n        let i = 0;\r\n        while (serial.tell < end) {\r\n            let Name = this.StoredPropertyType;\r\n            let Type = 'Tuple';\r\n            let prop = PropertyFactory.create({ Name, Type })\r\n            prop.deserialize(serial)\r\n            this.Properties.push(prop);\r\n            i++;\r\n        }\r\n        // console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Size - this.HeaderSize);\r\n        serial.seek(4);\r\n        serial.writeString(this.StoredPropertyType);\r\n        serial.seek(17);\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            serial.write(this.Properties[i].serialize());\r\n        }\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let struct = new StructProperty();\r\n        struct.Name = obj.Name;\r\n        struct.Type = obj.Type;\r\n        struct.StoredPropertyType = obj.StoredPropertyType;\r\n        struct.Properties = [];\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach((prop) => struct.Properties.push(PropertyFactory.create(prop)));\r\n        return struct;\r\n    }\r\n}\r\n","import { Buffer } from 'buffer'\r\nimport { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { SerializationError } from '../index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class ArrayProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.StoredPropertyType = \"\";\r\n        this.Property = new Property();\r\n    }\r\n    get Size() {\r\n        let size = 0;\r\n        size += this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8; // 4 byte size + 4 byte padding\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 5; // 1 byte padding + 2 byte int + 2 byte padding\r\n        size += this.Property.Size;\r\n        return size;\r\n    }\r\n    get HeaderSize() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8;\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 1;\r\n        return size;\r\n    }\r\n    get ArraySize() {\r\n        if (this.StoredPropertyType === 'IntProperty\\0')\r\n            return 12;\r\n        else\r\n            return this.Size - this.HeaderSize;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString()\r\n        serial.seek(1);\r\n        let count = serial.readInt16();\r\n        serial.seek(2);\r\n        this.Property = PropertyFactory.createArray({\r\n            Name: this.Name,\r\n            Type: this.StoredPropertyType\r\n        });\r\n        this.Property.deserialize(serial, count)\r\n\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.ArraySize);\r\n        serial.seek(4);\r\n        serial.writeString(this.StoredPropertyType);\r\n        serial.seek(1);\r\n        serial.writeInt16(this.Property.Count);\r\n        serial.seek(2);\r\n        serial.write(this.Property.serialize());\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new ArrayProperty();\r\n        array.Name = obj.Name;\r\n        array.Type = obj.Type;\r\n        array.StoredPropertyType = obj.StoredPropertyType;\r\n        if (obj.Property !== undefined)\r\n            array.Property = PropertyFactory.createArray(obj.Property);\r\n        return array;\r\n    }\r\n}","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js';\r\n\r\nexport class EnumProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.EnumType = \"\";\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + this.EnumType.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.EnumType = serial.readString();\r\n        serial.seek(1);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(4);\r\n        serial.writeString(this.EnumType);\r\n        serial.seek(1);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new EnumProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class Tuple extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = 'Tuple';\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = 0;\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            size += this.Properties[i].Size;\r\n        }\r\n        size += 9;\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial) {\r\n        let Name;\r\n        while ((Name = serial.readString()) !== 'None\\0') {\r\n            let Type = serial.readString();\r\n            let Size = serial.readInt32();\r\n            let prop = PropertyFactory.create({ Name, Type });\r\n            prop.deserialize(serial, Size);\r\n            this.Properties.push(prop);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            serial.write(this.Properties[i].serialize());\r\n        }\r\n        serial.writeString('None\\0');\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let tuple = new Tuple();\r\n        tuple.Name = obj.Name;\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach(prop => tuple.Properties.push(PropertyFactory.create(prop)));\r\n        return tuple;\r\n    }\r\n}","import { Buffer } from 'buffer'\r\nimport { Property } from './index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class Guid extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = 'Guid';\r\n        this.Id = \"00000000-00-00-00-000000000000\";\r\n        this.Value = 0;\r\n    }\r\n    get Size() {\r\n        return 20;\r\n    }\r\n    deserialize(serial) {\r\n        this.Id = `${serial.read(4).swap32().toString('hex')}`\r\n        this.Id += `-${serial.read(2).swap16().toString('hex')}`\r\n        this.Id += `-${serial.read(2).swap16().toString('hex')}`\r\n        this.Id += `-${serial.read(2).toString('hex')}`\r\n        this.Id += `-${serial.read(6).toString('hex')}`\r\n        this.Value = serial.readInt32();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let guid = this.Id.split('-');\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(Buffer.from(guid[0], 'hex').swap32());\r\n        serial.write(Buffer.from(guid[1], 'hex').swap16());\r\n        serial.write(Buffer.from(guid[2], 'hex').swap16());\r\n        serial.write(Buffer.from(guid[3], 'hex'));\r\n        serial.write(Buffer.from(guid[4], 'hex'));\r\n        serial.writeInt32(this.Value);\r\n        if (serial.tell !== 20)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let guid = new Guid();\r\n        guid.Id = obj.Id;\r\n        guid.Value = obj.Value;\r\n        return guid;\r\n    }\r\n}\r\n","export class SerializationError extends Error {\r\n    constructor(prop) {\r\n        super(`Problem occurred during serialization of Property: ${prop.Name}`);\r\n    }\r\n}\r\n\r\nexport class DeserializationError extends Error {\r\n    constructor(type, offset) {\r\n        super(`Problem occurred during deserialization of Property '${type}' at offset 0x${offset.toString(16)}`)\r\n    }\r\n}\r\n\r\nexport class TypeNotImplementedError extends Error {\r\n    constructor(type) {\r\n        super(`No implementation for Property type: '${type}'`);\r\n    }\r\n}\r\n","import { Property } from '../properties/index.js'\r\nimport { PropertyFactory } from '../factories/index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class IntArray extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = \"IntProperty\"\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = this.Properties.length > 1 ? 8 : 4;\r\n        this.Properties.forEach((int) => {\r\n            size += int.Size\r\n        });\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, count) {\r\n        serial.seek((count > 1) ? 8 : 4);\r\n        for (let i = 0; i < count; i++) {\r\n            let Name = serial.readString();\r\n            let Type = serial.readString();\r\n            let Size = serial.readInt32();\r\n            let prop = PropertyFactory.create({ Name, Type });\r\n            prop.deserialize(serial);\r\n            this.Properties.push(prop);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.seek(this.Count > 1 ? 8 : 4);\r\n        this.Properties.forEach(int => serial.write(int.serialize()))\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new IntArray();\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach(int => array.Properties.push(PropertyFactory.create(int)));\r\n        return array;\r\n    }\r\n}","import { Property } from '../properties/index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class SoftObjectArray extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = \"SoftObjectProperty\";\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = 8;\r\n        this.Properties.forEach((str) => {\r\n            size += str.length + 4;\r\n        });\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, count) {\r\n        for (let i = 0; i < count; i++) {\r\n            this.Properties.push(serial.readString());\r\n            serial.seek(4);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        this.Properties.forEach(str => {\r\n            serial.writeString(str);\r\n            serial.seek(4);\r\n        });\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new SoftObjectArray();\r\n        if (obj.Properties !== undefined)\r\n            array.Properties = obj.Properties;\r\n        return array;\r\n    }\r\n}","import { StructProperty } from \"../properties/index.js\";\r\nimport { PropertyFactory } from \"../index.js\";\r\n\r\nexport class StructArray extends StructProperty {\r\n    deserialize(serial, count) {\r\n        // console.log(`Deserializing ${this.Name} Count: ${count}`)\r\n        this.Name = serial.readString()\r\n        this.Type = serial.readString()\r\n        let Size = serial.readInt32();\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString();\r\n        serial.seek(17);\r\n        let i = 0;\r\n        while (i < count) {\r\n            let Name = this.StoredPropertyType;\r\n            let Type = 'Tuple';\r\n            let prop = PropertyFactory.create({ Name, Type })\r\n            prop.deserialize(serial)\r\n            this.Properties.push(prop);\r\n            i++;\r\n        }\r\n        // console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\r\n        return this;\r\n    }\r\n    static from(obj) {\r\n        let struct = new StructArray();\r\n        struct.Name = obj.Name;\r\n        struct.Type = obj.Type;\r\n        struct.StoredPropertyType = obj.StoredPropertyType;\r\n        struct.Properties = [];\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach((prop) => struct.Properties.push(PropertyFactory.create(prop)));\r\n        return struct;\r\n    }\r\n}","import { PropertyFactory } from './factories/index.js'\r\nimport {\r\n    ArrayProperty,\r\n    BoolProperty,\r\n    EnumProperty,\r\n    FloatProperty,\r\n    IntProperty,\r\n    ObjectProperty,\r\n    SoftObjectProperty,\r\n    StrProperty,\r\n    StructProperty,\r\n    Tuple,\r\n    Guid\r\n} from './properties/index.js'\r\n\r\nimport {\r\n    IntArray,\r\n    SoftObjectArray,\r\n    StructArray\r\n} from './arrays/index.js'\r\n\r\nPropertyFactory.Properties['ArrayProperty'] = ArrayProperty;\r\nPropertyFactory.Properties['BoolProperty'] = BoolProperty;\r\nPropertyFactory.Properties['EnumProperty'] = EnumProperty;\r\nPropertyFactory.Properties['FloatProperty'] = FloatProperty;\r\nPropertyFactory.Properties['IntProperty'] = IntProperty;\r\nPropertyFactory.Properties['ObjectProperty'] = ObjectProperty;\r\nPropertyFactory.Properties['SoftObjectProperty'] = SoftObjectProperty;\r\nPropertyFactory.Properties['StrProperty'] = StrProperty;\r\nPropertyFactory.Properties['StructProperty'] = StructProperty;\r\nPropertyFactory.Properties['Tuple'] = Tuple;\r\nPropertyFactory.Properties['Guid'] = Guid;\r\nPropertyFactory.Arrays['IntArray'] = IntArray;\r\nPropertyFactory.Arrays['SoftObjectArray'] = SoftObjectArray;\r\nPropertyFactory.Arrays['StructProperty'] = StructArray;\r\nPropertyFactory.Arrays['IntProperty'] = IntArray;\r\nPropertyFactory.Arrays['SoftObjectProperty'] = SoftObjectArray;\r\n\r\nexport { PropertyFactory }\r\nexport { Gvas } from './Gvas.js'\r\nexport { GvasHeader } from './GvasHeader.js'\r\nexport * from './PropertyErrors.js'\r\nexport * from './properties/index.js'\r\nexport * from './arrays/index.js'\r\n","export * from './models/index.js'\r\nexport * from './utils/index.js'","export * from './Serializer.js';","import { PropertyFactory } from './factories/index.js';\r\nimport { SerializationError } from './PropertyErrors.js';\r\nimport { GvasHeader } from './index.js';\r\nimport { Tuple } from './properties/index.js';\r\nimport { Serializer } from '../utils/Serializer.js';\r\n\r\nexport class Gvas {\r\n    constructor() {\r\n        this.Header = new GvasHeader();\r\n        this.Properties = new Tuple();\r\n    }\r\n    get Size() {\r\n        let size = this.Header.Size;\r\n        size += this.Properties.Size;\r\n        size += 4;\r\n        return size;\r\n    }\r\n    deserialize(serial) {\r\n        let format = serial.read(4);\r\n        if (Buffer.compare(Buffer.from('GVAS'), format) !== 0)\r\n            throw Error(`Unexpected header, expected 'GVAS`)\r\n\r\n        this.Header.deserialize(serial);\r\n        this.Properties.Name = this.Header.SaveGameType;\r\n        this.Properties.deserialize(serial);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(this.Header.serialize());\r\n        serial.write(this.Properties.serialize());\r\n        serial.seek(4);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let gvas = new Gvas();\r\n        gvas.Header = GvasHeader.from(obj.Header);\r\n        gvas.Properties = PropertyFactory.create(obj.Properties);\r\n        return gvas;\r\n    }\r\n}\r\n","import { SerializationError } from './index.js';\r\nimport { PropertyFactory } from './factories/index.js'\r\nimport { Serializer } from '../utils/Serializer.js';\r\n\r\nexport class GvasHeader {\r\n    constructor() {\r\n        this.Format = 'GVAS';\r\n        this.SaveGameVersion = 0;\r\n        this.PackageVersion = 0;\r\n        this.EngineVersion = {\r\n            Major: 0,\r\n            Minor: 0,\r\n            Patch: 0,\r\n            Build: 0,\r\n            BuildId: \"\"\r\n        }\r\n        this.CustomFormatVersion = 0;\r\n        this.CustomFormatData = {\r\n            Count: 0,\r\n            Entries: []\r\n        }\r\n        this.SaveGameType = \"\";\r\n    }\r\n    get Size() {\r\n        let size = this.Format.length;\r\n        size += 18;\r\n        size += this.EngineVersion.BuildId.length + 4;\r\n        size += 8;\r\n        this.CustomFormatData.Entries.forEach(guid => {\r\n            size += guid.Size; // 20\r\n        })\r\n        size += this.SaveGameType.length + 4;\r\n        return size;\r\n    }\r\n    deserialize(serial) {\r\n        this.SaveGameVersion = serial.readInt32();\r\n        this.PackageVersion = serial.readInt32();\r\n        this.EngineVersion.Major = serial.readInt16();\r\n        this.EngineVersion.Minor = serial.readInt16();\r\n        this.EngineVersion.Patch = serial.readInt16();\r\n        this.EngineVersion.Build = serial.readInt32();\r\n        this.EngineVersion.BuildId = serial.readString();\r\n        this.CustomFormatVersion = serial.readInt32();\r\n        this.CustomFormatData.Count = serial.readInt32();\r\n        for (let i = 0; i < this.CustomFormatData.Count; i++) {\r\n            let guid = PropertyFactory.create({ Type: 'Guid' })\r\n            this.CustomFormatData.Entries.push(guid.deserialize(serial));\r\n        }\r\n        this.SaveGameType = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(Buffer.from(this.Format));\r\n        serial.writeInt32(this.SaveGameVersion);\r\n        serial.writeInt32(this.PackageVersion);\r\n\r\n        serial.writeInt16(this.EngineVersion.Major);\r\n        serial.writeInt16(this.EngineVersion.Minor);\r\n        serial.writeInt16(this.EngineVersion.Patch);\r\n        serial.writeInt32(this.EngineVersion.Build);\r\n        serial.writeString(this.EngineVersion.BuildId);\r\n\r\n        serial.writeInt32(this.CustomFormatVersion);\r\n        serial.writeInt32(this.CustomFormatData.Count);\r\n        this.CustomFormatData.Entries.forEach(guid => serial.write(guid.serialize()));\r\n        serial.writeString(this.SaveGameType);\r\n        if (serial.tell != this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let header = new GvasHeader();\r\n        header.SaveGameVersion = obj.SaveGameVersion;\r\n        header.PackageVersion = obj.PackageVersion;\r\n        header.EngineVersion = obj.EngineVersion;\r\n        header.CustomFormatVersion = obj.CustomFormatVersion;\r\n        header.CustomFormatData.Count = obj.CustomFormatData.Count;\r\n        obj.CustomFormatData.Entries.forEach(guid => {\r\n            header.CustomFormatData.Entries.push(PropertyFactory.create(guid));\r\n        });\r\n        header.SaveGameType = obj.SaveGameType;\r\n        return header;\r\n    }\r\n}","\r\nexport default function xorshift(seed)\r\n{\r\n    let x = seed;\r\n    x ^= x << 13;\r\n    x ^= x >>> 7; //bitshift right without preserving sign because JS is dumb\r\n    x ^= x << 17;\r\n    return x;\r\n}","import React from \"react\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport Styles from './tooltip.css'\r\n\r\nclass Tooltip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    show() {\r\n        return this.props.show && this.props.tooltip !== undefined\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={Styles}>\r\n                <ReactMarkdown \r\n                    className={`tooltip${this.show() ? '-visible': ''}`} \r\n                    children={this.props.tooltip}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tooltip;","import React from 'react';\r\nimport styles from './seedfield.css';\r\nimport xorshift from '../../utils/xorshift';\r\nimport Tooltip from '../tooltip/tooltip';\r\n\r\nclass SeedField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {seed:\"\", hover:false}\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleHover = this.handleHover.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      seed:e.target.value,\r\n      hover:this.state.hover\r\n    }, () => this.props.onChange(this));\r\n  }\r\n  handleClick(e) {\r\n    this.setState({\r\n      seed:this.genSeed(Date.now()),\r\n      hover:this.state.hover\r\n    }, () => {\r\n      this.setState({\r\n        seed:this.state.seed,\r\n        hover:this.state.hover\r\n      });\r\n      this.props.onChange(this);\r\n    });\r\n  }\r\n  handleHover() {\r\n    this.setState({\r\n      seed:this.state.seed,\r\n      hover:!this.state.hover\r\n    })\r\n  }\r\n  genSeed(seed)\r\n  {\r\n    let output = \"\";\r\n    let chars = \"0123456789abcdefghijklmnopqrstuvwxyz\"\r\n    for(let i = 0; i < 20; i++)\r\n      output += chars.at((seed = xorshift(seed)) % 36);\r\n    return output;\r\n  }\r\n  render() {\r\n    return (\r\n      <div styles={styles}>\r\n          <div onPointerEnter={this.handleHover} \r\n              onPointerLeave={this.handleHover} \r\n              className=\"seedfield\">\r\n            <input onChange={this.handleChange} \r\n                  placeholder=\"enter a seed here...\"\r\n                  value={this.state.seed}\r\n                  className=\"Field\"/>\r\n            <div className=\"button\" \r\n                style={styles} \r\n                onClick={this.handleClick}\r\n                >Random</div>\r\n          </div>\r\n          <Tooltip show={this.state.hover} tooltip={this.props.tooltip}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SeedField;","import React from 'react';\r\nimport styles from './download.css';\r\n\r\nclass DownloadButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url:null,\r\n      filename:\"\"\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(e) {\r\n    this.props.onClick(this);\r\n  }\r\n  activateDownload(e) {\r\n    let file = new File([e.data], e.filename);\r\n    let url = URL.createObjectURL(file);\r\n    this.setState({\r\n      url, \r\n      filename:e.filename\r\n    }, () => {\r\n      this.dofileDownload.click();\r\n      URL.revokeObjectURL(url);\r\n      this.setState({\r\n        url:null,\r\n        filename:\"\"\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Button\" style={styles}>\r\n          <button className=\"gen\" onClick={this.handleClick}>{this.props.label}</button>\r\n          <a style={{display: \"none\"}}\r\n              download={this.state.filename}\r\n              href={this.state.url}\r\n              ref={e=>this.dofileDownload = e}>\r\n          </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadButton;","\r\nconst API = {\r\n    gist: 'https://api.github.com/gists'\r\n};\r\n\r\nexport default API;","import React from 'react';\r\nimport styles from './version.css';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport API from '../../api';\r\n\r\nconst gistId = 'af22f4d07c0720cd7cceb3d41d8fdd73'\r\n\r\nclass VersionInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value:null, active:false}\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(`${API.gist}/${gistId}`)\r\n        .then(r => r.text())\r\n        .then(text => {\r\n          this.update(JSON.parse(text).files['changelog.md'].content, false);\r\n        })\r\n  }\r\n  handleClick(e) {\r\n    this.update(this.state.value, !this.state.active);\r\n  }\r\n  update(value, active) {\r\n    this.setState({value, active});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"version-wrapper\" styles={styles}>\r\n        <label className=\"version\" \r\n          onClick={this.handleClick}>\r\n            v{this.props.value}\r\n        </label>\r\n        <div>\r\n          <ReactMarkdown \r\n              className={`info${this.state.active ? '-active':''}`}\r\n              children={this.state.value}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VersionInfo;","import React from 'react';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport styles from './dropdowns.css';\r\n\r\nclass Dropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selection:\"\",hover:false}\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleHover = this.handleHover.bind(this);\r\n        }\r\n    valid() {\r\n        return this.state.selection !== \"\";\r\n    }\r\n    handleChange(e) {\r\n        console.log(`Selected ${e.target.value}`)\r\n        this.setState({\r\n            selection:e.target.value,\r\n            hover:this.state.hover\r\n        }, () => this.props.onChange(this));\r\n    }\r\n    handleHover(e) {\r\n        this.setState({\r\n            selection:this.state.selection,\r\n            hover:!this.state.hover\r\n        })\r\n    }\r\n    createOptions() {\r\n        return this.props.options.map((opt, i) => {\r\n            return <option className=\"dropdown-option\" key={i} value={opt}>{opt}</option>\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={styles}>\r\n                <select className=\"Dropdown\" \r\n                    onChange={this.handleChange}\r\n                    onPointerEnter={this.handleHover}\r\n                    onPointerLeave={this.handleHover}>\r\n                    <option value=\"\">--Choose a {this.props.name}--</option>\r\n                    {this.createOptions()}\r\n                </select>\r\n                <Tooltip show={this.state.hover} tooltip={this.props.tooltip}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown;","import React from \"react\";\r\nimport Tooltip from '../tooltip/tooltip'\r\nimport Styles from './checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {checked:false, hover:false};\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleHover = this.handleHover.bind(this);\r\n    }\r\n    change(checked, hover, cb) {\r\n        this.setState({checked, hover}, cb);\r\n    }\r\n    toggleTooltip(cb) {\r\n        this.change(this.state.checked, !this.state.hover, cb);\r\n    }\r\n    handleClick(e) {\r\n        this.change(!this.state.checked, this.state.hover,\r\n            () => this.props.onChange(this));\r\n    }\r\n    handleHover(e) {\r\n        this.toggleTooltip();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"checkbox-span\">\r\n                <div className=\"checkbox-container\" \r\n                    onPointerEnter={this.handleHover} \r\n                    onPointerLeave={this.handleHover} \r\n                    style={Styles}>\r\n                    <div className={`checkbox${this.state.checked ? '-active' : ''}`} \r\n                        onClick={this.handleClick} \r\n                        checked={this.state.checked}/>\r\n                    <div className=\"label\"\r\n                        onClick={this.handleClick}>\r\n                            {this.props.label}\r\n                    </div>\r\n                </div>\r\n                <Tooltip show={this.state.hover} tooltip={this.props.tooltip}/>\r\n            </div>\r\n          )\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import { PropertyFactory } from \"uesavetool\";\r\n\r\nexport function range([min, max], cb) { //inclusive\r\n    let numbers = []\r\n    for(let i = min; i <= max; i++) {\r\n        numbers.push(cb ? cb(i) : i);\r\n    }\r\n    return numbers;\r\n}\r\n/**\r\n * Alias for `PropertyFactory.create()`\r\n */\r\nexport const createProperty = (template) => PropertyFactory.create(template);","import { prng_alea } from 'esm-seedrandom'\r\nimport { range } from './index.js';\r\n\r\nexport const Prng = {\r\n    _prng:null,\r\n    init: function(seed) {\r\n        this._prng = prng_alea(seed, {state: true})\r\n    },\r\n    int32: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.int32();\r\n        return 0;\r\n    },\r\n    int16: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.int32() % (2**16);\r\n        return 0;\r\n    },\r\n    quick: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.quick();\r\n        return 0;\r\n    },\r\n    pick: function(min, max) {\r\n        min = (min !== undefined) ? min : 0;\r\n        max = (max !== undefined) ? max : 1;\r\n        return Math.floor(this._prng.quick() * (max - min + 1)) + min;\r\n    },\r\n    choose: function([min, max], num) {\r\n        let values = [];\r\n        if(num > 0) {\r\n            values = range([min, max]);\r\n            while(values.length > num)\r\n                values.splice(this.pick(0, values.length - 1), 1);\r\n        }\r\n        return values;\r\n    },\r\n    chance: function (pct_float) {\r\n        return this._prng.quick() < pct_float ? 1 : 0;\r\n    },\r\n    // Algorithm based on:\r\n    // Weighted Random Sampling (2005; Efraimidis, Spirakis)\r\n    //\r\n    // Credits: https://github.com/denizdogan/weighted-shuffle by denizdogan\r\n    shuffle: function(array) {\r\n        return array.map(([i, w]) => [i.slice(0), Math.pow(this.quick(), (1 / w))])\r\n                    .sort(([an, aw], [bn, bw]) => bw - aw);\r\n    },\r\n    /**\r\n     * Selects `num` random items from `list` and returns a new `Array` containing the selected items\r\n     * \r\n     * @param {Array} list \r\n     * @param {Number} num\r\n     */\r\n    select: function(list, num) {\r\n        num = (num!==undefined) ? num : this.pick(0, list.length)\r\n        return this.choose([0, list.length - 1], num).map(i => list[i]);\r\n    },\r\n    destroy: function() {\r\n        this._prng = null;\r\n    }\r\n}\r\n","import { Tuple } from \"uesavetool\";\r\n\r\nexport class PropertyStore extends Tuple {\r\n    constructor() {\r\n        super();\r\n    }\r\n    getIndex(name) {\r\n        return this.Properties.findIndex(p => p.Name === name)\r\n    }\r\n    valueOf(name) {\r\n        return this.get(name).Property;\r\n    }\r\n    get(name) {\r\n        return this.Properties.find(p => p.Name === name);\r\n    }\r\n    set(name, value) {\r\n        let prop = this.get(name);\r\n        prop.Property = value;\r\n        return prop;\r\n    }\r\n    add(prop) {\r\n        if(prop !== undefined && prop !== null)\r\n            this.Properties.push(prop);\r\n        return this;\r\n    }\r\n    concat(props) {\r\n        props.forEach(p => this.add(p));\r\n        return this;\r\n    }\r\n    remove(name) {\r\n        let indx = this.getIndex(name);\r\n        if(indx !== -1)\r\n            this.Properties.splice(indx, 1);\r\n        return this;\r\n    }\r\n    has(name) {\r\n        return this.getIndex(name) !== -1;\r\n    }\r\n}","import { \r\n    Gvas, \r\n    GvasHeader\r\n} from 'uesavetool';\r\n\r\nimport { \r\n    SAVESLOT,\r\n    Prng,\r\n    T_GVAS_HEADER,\r\n    PropertyStore,\r\n    REQUIREMENTS,\r\n    createProperty,\r\n    BPMCharacter,\r\n    BPMRun,\r\n    CHARSTORE,\r\n    RUNSTORE\r\n} from './index.js';\r\n\r\nexport class ContinueStateV2 extends Gvas {\r\n    constructor() {\r\n        super();\r\n        this.Header = GvasHeader.from(T_GVAS_HEADER);\r\n        this.Properties = new PropertyStore();\r\n        this.Properties.concat([\r\n            createProperty(SAVESLOT.SaveSlotName),\r\n            createProperty(CHARSTORE.CharacterPropertyStore),\r\n            createProperty(RUNSTORE.RunPropertyStore)\r\n        ]);\r\n    }\r\n    get Slot() {\r\n        return this.Properties.valueOf('SaveSlotName\\0');\r\n    }\r\n    set Slot(name) {\r\n        return this.Properties.set('SaveSlotName\\0', name);\r\n    }\r\n    /**\r\n     * @type {BPMCharacter}\r\n     */\r\n    get Character() {\r\n        return this.Properties\r\n            .get('CharacterPropertyStore\\0').Properties[0];\r\n    }\r\n    set Character(bpmchar) {\r\n        this.Properties\r\n            .get('CharacterPropertyStore\\0').Properties[0] = bpmchar;\r\n    }\r\n    /**\r\n     * @type {BPMRun}\r\n     */\r\n    get Run() {\r\n        return this.Properties\r\n            .get('RunPropertyStore\\0').Properties[0];\r\n    }\r\n    set Run(bpmrun) {\r\n        this.Properties\r\n            .get('RunPropertyStore\\0').Properties[0] = bpmrun;\r\n    }\r\n    static generate({seed, char, diff, opts}) {\r\n        let save = new ContinueStateV2();\r\n        Prng.init(seed);\r\n        save.Slot = SAVESLOT.ContinueStateV2;\r\n        save.Character = BPMCharacter.generate(seed, char, opts);\r\n        save.Run = BPMRun.generate(seed, diff, opts);\r\n\r\n        REQUIREMENTS.POOLS.forEach(([name, type]) => {\r\n                if(type === 'Weapon')\r\n                    save.Run[name].delItem(save.Character.StoredWeapon)\r\n            });\r\n        Prng.destroy();\r\n        return save;\r\n    }\r\n}","import {\r\n    Tuple\r\n} from 'uesavetool'\r\n\r\nimport {\r\n    ITEMS,\r\n    RUNSTORE,\r\n    createProperty\r\n} from './index.js'\r\n\r\nexport class ItemWeightPair extends Tuple {\r\n    constructor(type) {\r\n        super()\r\n        let isWeapon = type==='Weapon';\r\n        this.Name = `BPM${isWeapon ? type : 'Ability'}WeightPair`,\r\n        this.Type = \"Tuple\",\r\n        this.Properties = [\r\n            createProperty(RUNSTORE[isWeapon ? 'BPMWeapon' : 'BPMAbility']),\r\n            createProperty(RUNSTORE.Weight)\r\n        ]\r\n    }\r\n    set Property([item, weight]) {\r\n        this.Item = item;\r\n        this.Weight = weight;\r\n    }\r\n    get Property() {\r\n        return [this.Item, this.Weight];\r\n    }\r\n    set Item(value) {\r\n        this.Properties[0].Property = value;\r\n    }\r\n    get Item() {\r\n        return this.Properties[0].Property;\r\n    }\r\n    set Weight(value) {\r\n        this.Properties[1].Property = [0, value];\r\n    }\r\n    get Weight() {\r\n        return this.Properties[1].Property[1];\r\n    }\r\n    static create([name, weight]) {\r\n        let [item, prop] = ITEMS.find(([n, i]) => n === name);\r\n        if(item === undefined)\r\n            console.log(`Mislabled/Missing Item '${name}'`);\r\n        let item_weight_pair = new ItemWeightPair(prop.Type);\r\n        item_weight_pair.Property = [prop.Value, weight];\r\n        return item_weight_pair;\r\n    }\r\n}","import {\r\n    StructProperty\r\n} from 'uesavetool'\r\n\r\nimport {\r\n    Prng,\r\n    ITEMPOOL,\r\n    ItemWeightPair\r\n} from './index.js'\r\n\r\nexport class ItemPool extends StructProperty {\r\n    constructor(name, type) {\r\n        super();\r\n        this.Name = `${name}\\u0000`,\r\n        this.Type = \"StructProperty\\u0000\",\r\n        this.StoredPropertyType = `BPM${type}WeightPair\\u0000`,\r\n        this.Properties = []\r\n    }\r\n    addItem(iw) {\r\n        this.Properties.push(ItemWeightPair.create(iw));\r\n    }\r\n    delItem(value) {\r\n        let indx = this.Properties.findIndex(p => p.Item === value);\r\n        if(indx !== -1)\r\n            return this.Properties.splice(indx, 1);\r\n        return null;\r\n    }\r\n    static generate([name, type], enhance) {\r\n        let pool = new ItemPool(name, type)\r\n        let list = ITEMPOOL[name].Standard ?\r\n            ITEMPOOL[name][enhance ? 'Enhanced' : 'Standard'] :\r\n            ITEMPOOL[name];\r\n        Prng.shuffle(list)\r\n            .forEach(iw => pool.addItem(iw));\r\n        return pool;\r\n    }\r\n}\r\n","import { IntProperty } from \"uesavetool\";\r\n\r\nexport class BPMRoom extends IntProperty {\r\n    constructor(name) {\r\n        super();\r\n        this.Name = `${name!==undefined?name:'BADROOM'}\\0`;\r\n        this.Type = \"IntProperty\\0\";\r\n        this.Property = [0, 1];\r\n    }\r\n    set Floor(index) {\r\n        this.Property[0] = index;\r\n    }\r\n    get Floor() {\r\n        return this.Property[0];\r\n    }\r\n    static create(floor, name) {\r\n        let room = new BPMRoom(name);\r\n        room.Floor = floor;\r\n        return room;\r\n    }\r\n}\r\n","import { \r\n    BPMRoom,\r\n    Prng,\r\n    createProperty,\r\n    range,\r\n    RUNSTORE,\r\n    CHARSTORE,\r\n    ITEMS\r\n} from \"./index.js\";\r\n\r\nconst FLOOR = {\r\n    ASG_I:  0, ASG_II: 1,\r\n    VAN_I:  2, VAN_II: 3,\r\n    SVAR_I: 4, SVAR_II:5,\r\n    HELL_I: 6, HELL_II:7,\r\n    UNKOWN:8, MAX:9\r\n}\r\nconst items = (type) => ITEMS.filter(([n, i]) => i.Type===type).map(([i, p]) => p.Value);\r\nconst setProperty = (prop, value) => {\r\n    prop.Property = value;\r\n    return prop;\r\n}\r\n\r\nconst Generate = {\r\n    loadout: function([pname, type]) {\r\n        let [item] = Prng.select(items(type), 1)\r\n        return setProperty(createProperty(CHARSTORE[pname]), item)\r\n    },\r\n    inventory: function([pname, amt]) {\r\n        const prop = (name) => {\r\n            switch(name) {\r\n                case \"StoredWeapon\":\r\n                    let list = items('Weapon');\r\n                    return list[Prng.pick(0, list.length - 1)];\r\n                case \"StoredMobilityAbility\":\r\n                    return items('Auxilary').slice(0,2)[Prng.pick(0, 1)];\r\n                case \"StoredHealth\":\r\n                case \"StoredShield\":\r\n                    return [0, (25 * Prng.pick(0, amt))];\r\n                case \"StoredCoins\":\r\n                case \"StoredKeys\":\r\n                    return [0, Prng.pick(0, amt)];\r\n            }\r\n        }\r\n        return setProperty(createProperty(CHARSTORE[pname]), prop(pname))\r\n    },\r\n    floorseeds: function(name) {\r\n        const seed = (n) => {\r\n            switch(n) {\r\n                case \"FloorGenerationSeeds\":\r\n                    return Prng.int16();\r\n                case \"FloorModifierFloats\":\r\n                    return Prng.quick() * 100;\r\n                case \"FloorPlaySeeds\":\r\n                    return Prng.int32();\r\n            }\r\n        }\r\n        return range([0, 9], i => setProperty(createProperty(RUNSTORE[name]), [i, seed(name)]));\r\n    },\r\n    rooms: function([room, rate]) {\r\n        switch(room) {\r\n            case \"LibraryBeforeArmoury\":\r\n                return range([0, 4], i => Prng.chance(rate) ?\r\n                    [ BPMRoom.create(2*i, room), BPMRoom.create(2*i+1, room) ] \r\n                    : null).flat();\r\n            case \"MinibossChoice\":\r\n                return range([0, 4], i => Prng.pick(2*i, 2*i+1))\r\n                    .map(f => BPMRoom.create(f, room));\r\n            case \"StairsRoomChosen\":\r\n                return Prng.chance(rate) ?\r\n                    BPMRoom.create(FLOOR.ASG_I, room) : null;\r\n            case \"ChoiceRoomChosen\":\r\n                return Prng.chance(rate) ?\r\n                    BPMRoom.create(Prng.pick(FLOOR.ASG_I, FLOOR.SVAR_II), room) : null;\r\n            case \"PortalRoomChosen\":\r\n                return Prng.choose([FLOOR.ASG_I, FLOOR.HELL_I], Prng.chance(rate))\r\n                    .map(f => BPMRoom.create(f, room));\r\n            case \"PrestigeRoomChosen\":\r\n                return Prng.choose([FLOOR.VAN_I, FLOOR.VAN_I], Prng.chance(rate))\r\n                    .map(f => BPMRoom.create(f, room));\r\n            case \"BankRoomChosen\":\r\n            case \"HeroRoomChosen\":\r\n            case \"BlackMarketRoomChosen\":\r\n            case \"RerollRoomChosen\":\r\n            case \"GamblingRoomChosen\":\r\n                let num = 0;\r\n                while(Prng.chance(rate) && num++ < FLOOR.HELL_I)\r\n                    rate /= 2;\r\n                return Prng.choose([FLOOR.ASG_I, FLOOR.SVAR_II], num)\r\n                    .map(f => BPMRoom.create(f, room));\r\n        }\r\n    }\r\n}\r\nexport {Generate};","import {\r\n    REQUIREMENTS,\r\n    T_CHARSTORE,\r\n    PropertyStore,\r\n    createProperty,\r\n    Generate,\r\n    Prng\r\n} from './index.js';\r\n\r\nexport class BPMCharacter extends PropertyStore {\r\n    constructor() {\r\n        super();\r\n        this.Name = \"BPMCharacterPropertyStore\\u0000\";\r\n    }\r\n    /**\r\n     * @type {string}\r\n     */\r\n    get StoredWeapon() {\r\n        return this.valueOf('StoredWeapon\\0');\r\n    }\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    get StoredHealth() {\r\n        return this.valueOf('StoredHealth\\0')[1];\r\n    }\r\n    set StoredHealth(health) {\r\n        this.set('StoredHealth\\0', [0, health]);\r\n    }\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    get StoredShield() {\r\n        return this.valueOf('StoredShield\\0')[1];\r\n    }\r\n    set StoredShield(shield) {\r\n        this.set('StoredShield\\0', [0, shield]);\r\n    }\r\n    static create(name) {\r\n        let char = new BPMCharacter();\r\n        T_CHARSTORE[name.toLowerCase()]\r\n            .forEach(prop => char.add(createProperty(prop)));\r\n        return char;\r\n    }\r\n    static generate(seed, name, opts) {\r\n        let char = BPMCharacter.create(name);\r\n        if(name.toLowerCase() === 'run') {\r\n            Prng.init(seed);\r\n\r\n            REQUIREMENTS.RANDCHAR\r\n                .map(item => Generate.inventory(item))\r\n                .forEach(p => char.add(p));\r\n\r\n            if(char.StoredHealth === 0 && char.StoredShield === 0)\r\n                char.StoredHealth = 25;\r\n\r\n            Prng.select(REQUIREMENTS.ABILITIES)\r\n                .map(ability => Generate.loadout(ability))\r\n                .forEach(ability => char.add(ability));\r\n            \r\n            Prng.select(REQUIREMENTS.STOREDITEMS, 1)\r\n                .map(item => Generate.loadout(item))\r\n                .forEach(item => char.add(item));\r\n        }\r\n        return char;\r\n    }\r\n}","import {\r\n    RUNSTORE,\r\n    REQUIREMENTS,\r\n    ItemPool,\r\n    PropertyStore,\r\n    createProperty,\r\n    Generate,\r\n    Prng\r\n} from './index.js';\r\n\r\nexport class BPMRun extends PropertyStore {\r\n    constructor() {\r\n        super();\r\n        this.Name = \"BPMRunPropertyStore\\u0000\";\r\n        this.concat([\r\n            createProperty(RUNSTORE.BPMDifficulty),\r\n            createProperty(RUNSTORE.FloorIndex),\r\n            createProperty(RUNSTORE.SpecialChapterVisit),\r\n            createProperty(RUNSTORE.ShopItemPool),\r\n            createProperty(RUNSTORE.TreasureItemPool),\r\n            createProperty(RUNSTORE.BossItemPool),\r\n            createProperty(RUNSTORE.WeaponPool),\r\n            createProperty(RUNSTORE.WeaponCheapPool),\r\n            createProperty(RUNSTORE.WeaponAffordablePool),\r\n            createProperty(RUNSTORE.WeaponExpensivePool),\r\n            createProperty(RUNSTORE.LibrarySecondaryPool),\r\n            createProperty(RUNSTORE.LibraryUltimatePool),\r\n            createProperty(RUNSTORE.ChoiceRoomItemsPoolHead),\r\n            createProperty(RUNSTORE.ChoiceRoomItemsPoolFoot),\r\n            createProperty(RUNSTORE.ChoiceRoomItemsPoolShield),\r\n            createProperty(RUNSTORE.ChoiceRoomItemsPoolArm),\r\n            createProperty(RUNSTORE.DevilStatuePool),\r\n            createProperty(RUNSTORE.AngelStatuePool),\r\n            createProperty(RUNSTORE.CursedChestPool),\r\n            createProperty(RUNSTORE.FutureProofingAPool),\r\n            createProperty(RUNSTORE.FutureProofingBPool)\r\n        ]);\r\n    }\r\n    get Difficulty() {\r\n        return this.valueOf('BPMDifficulty\\0');\r\n    }\r\n    set Difficulty(diff) {\r\n        this.set('BPMDifficulty\\0', RUNSTORE.DIFFICULTY[diff.toUpperCase()]);\r\n    }\r\n    get SpecialChapterVisit() {\r\n        return this.valueOf('SpecialChapterVisit\\0');\r\n    }\r\n    set SpecialChapterVisit(visited) {\r\n        this.set('SpecialChapterVisit\\0', visited);\r\n    }\r\n    get FloorIndex() {\r\n        return this.valueOf('FloorIndex\\0')[1];\r\n    }\r\n    set FloorIndex(floor) {\r\n        if(floor===\"Crypts\") {\r\n            this.set('FloorIndex\\0', [0, 1]);\r\n            this.SpecialChapterVisit = RUNSTORE.SPECIALCHAPTER.CRYPTS;\r\n        }\r\n        else this.set('FloorIndex\\0', [0, parseInt(floor)]);\r\n    }\r\n    get ShopItemPool() {\r\n        return this.valueOf('ShopItemPool\\0')\r\n    }\r\n    get TreasureItemPool() {\r\n        return this.valueOf('TreasureItemPool\\0')\r\n    }\r\n    get BossItemPool() {\r\n        return this.valueOf('BossItemPool\\0')\r\n    }\r\n    get WeaponPool() {\r\n        return this.valueOf('WeaponPool\\0')\r\n    }\r\n    get WeaponCheapPool() {\r\n        return this.valueOf('WeaponCheapPool\\0')\r\n    }\r\n    get WeaponAffordablePool() {\r\n        return this.valueOf('WeaponAffordablePool\\0')\r\n    }\r\n    get WeaponExpensivePool() {\r\n        return this.valueOf('WeaponExpensivePool\\0')\r\n    }\r\n    get LibrarySecondaryPool() {\r\n        return this.valueOf('LibrarySecondaryPool\\0')\r\n    }\r\n    get LibraryUltimatePool() {\r\n        return this.valueOf('LibraryUltimatePool\\0')\r\n    }\r\n    get ChoiceRoomItemsPoolHead() {\r\n        return this.valueOf('ChoiceRoomItemsPoolHead\\0')\r\n    }\r\n    get ChoiceRoomItemsPoolFoot() {\r\n        return this.valueOf('ChoiceRoomItemsPoolFoot\\0')\r\n    }\r\n    get ChoiceRoomItemsPoolShield() {\r\n        return this.valueOf('ChoiceRoomItemsPoolShield\\0')\r\n    }\r\n    get ChoiceRoomItemsPoolArm() {\r\n        return this.valueOf('ChoiceRoomItemsPoolArm\\0')\r\n    }\r\n    get DevilStatuePool() {\r\n        return this.valueOf('DevilStatuePool\\0')\r\n    }\r\n    get AngelStatuePool() {\r\n        return this.valueOf('AngelStatuePool\\0')\r\n    }\r\n    get CursedChestPool() {\r\n        return this.valueOf('CursedChestPool\\0')\r\n    }\r\n    get FutureProofingAPool() {\r\n        return this.valueOf('FutureProofingAPool\\0')\r\n    }\r\n    get FutureProofingBPool() {\r\n        return this.valueOf('FutureProofingBPool\\0')\r\n    }\r\n    set ShopItemPool(value) {\r\n        return this.set('ShopItemPool\\0', value);\r\n    }\r\n    set TreasureItemPool(value) {\r\n        return this.set('TreasureItemPool\\0', value);\r\n    }\r\n    set BossItemPool(value) {\r\n        return this.set('BossItemPool\\0', value);\r\n    }\r\n    set WeaponPool(value) {\r\n        return this.set('WeaponPool\\0', value);\r\n    }\r\n    set WeaponCheapPool(value) {\r\n        return this.set('WeaponCheapPool\\0', value);\r\n    }\r\n    set WeaponAffordablePool(value) {\r\n        return this.set('WeaponAffordablePool\\0', value);\r\n    }\r\n    set WeaponExpensivePool(value) {\r\n        return this.set('WeaponExpensivePool\\0', value);\r\n    }\r\n    set LibrarySecondaryPool(value) {\r\n        return this.set('LibrarySecondaryPool\\0', value);\r\n    }\r\n    set LibraryUltimatePool(value) {\r\n        return this.set('LibraryUltimatePool\\0', value);\r\n    }\r\n    set ChoiceRoomItemsPoolHead(value) {\r\n        return this.set('ChoiceRoomItemsPoolHead\\0', value);\r\n    }\r\n    set ChoiceRoomItemsPoolFoot(value) {\r\n        return this.set('ChoiceRoomItemsPoolFoot\\0', value);\r\n    }\r\n    set ChoiceRoomItemsPoolShield(value) {\r\n        return this.set('ChoiceRoomItemsPoolShield\\0', value);\r\n    }\r\n    set ChoiceRoomItemsPoolArm(value) {\r\n        return this.set('ChoiceRoomItemsPoolArm\\0', value);\r\n    }\r\n    set DevilStatuePool(value) {\r\n        return this.set('DevilStatuePool\\0', value);\r\n    }\r\n    set AngelStatuePool(value) {\r\n        return this.set('AngelStatuePool\\0', value);\r\n    }\r\n    set CursedChestPool(value) {\r\n        return this.set('CursedChestPool\\0', value);\r\n    }\r\n    set FutureProofingAPool(value) {\r\n        return this.set('FutureProofingAPool\\0', value);\r\n    }\r\n    set FutureProofingBPool(value) {\r\n        return this.set('FutureProofingBPool\\0', value);\r\n    }\r\n    static generate(seed, diff, opts) {\r\n        let run = new BPMRun();\r\n        run.Difficulty = diff;\r\n        run.FloorIndex = opts.FLOORINDEX;\r\n\r\n        Prng.init(seed);\r\n        REQUIREMENTS.POOLS\r\n            .forEach(([name, type]) => run[name] = ItemPool.generate([name, type], opts.ENHANCE));\r\n\r\n        Prng.init(seed);\r\n        REQUIREMENTS.SEEDS\r\n            .flatMap(fseed => Generate.floorseeds(fseed))\r\n            .forEach(fseed => run.add(fseed))\r\n\r\n        Prng.init(seed);\r\n        REQUIREMENTS.ROOMS\r\n            .flatMap(room => Generate.rooms(room))\r\n            .forEach(room => run.add(room));\r\n\r\n        if(run.has('StairsRoomChosen\\0') && run.has('ChoiceRoomChosen\\0')) {\r\n            run.set('ChoiceRoomChosen\\0', [0, 1]);\r\n        }\r\n        return run;\r\n    }\r\n}","import React from 'react';\r\nimport SeedField from '../seed/seedfield';\r\nimport DownloadButton from '../download/download';\r\nimport VersionInfo from '../version/version';\r\nimport styles from './ssg.css';\r\nimport Dropdown from '../dropdowns/dropdown';\r\nimport Checkbox from '../checkboxes/checkbox';\r\nimport application from '../../../package.json'\r\nimport bpmssg from 'bpm-ssg'\r\n\r\nconst CHARACTERS = [\r\n    \"Goll\", \"Freyr\", \"Hildr\", \"Njord\", \"Odr\",\r\n    \"Skuld\", \"Geri\", \"Herfjoter\", \"Run\", \"Sanngridr\"\r\n]\r\nconst DIFFICULTIES = [\r\n    \"Easy\", \"Hard\", \"Hellish\", \"Practice\"\r\n]\r\nconst FLOORS = [\r\n    [\"Asgard I\", '0'], [\"Asgard II\", '1'], [\"Asgard Crypts\", \"Crypts\"],\r\n    [\"Vanaheim I\", '2'], [\"Vanaheim II\", '3'],\r\n    [\"Svartalfheim I\", '4'], [\"Svartalfheim II\", '5'],\r\n    [\"Helheim I\", '6'], [\"Helheim II\", '7']\r\n]\r\nconst TOOTIP = {\r\n    ENHANCE: \"* Well Rooms have more/better items.\\n\" \r\n            + \"* Removes some undesireable items from Angel/Devil Statue and Cursed/Hero Chest pools\",\r\n    FLOOR: \"WARNING: Practice difficulty ends on Gullveig, even in Helheim.\",\r\n    RANDOM: \"Enter a seed, all unicode characters valid.\\n\\nOR\\n\\nGenerate a random 20-character, alpha-numeric seed.\",\r\n    REQUIRED: \"*Required*\\n\\n\",\r\n    OPTIONAL: \"*Optional*\\n\\n\"\r\n}\r\n\r\nclass SSG extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            seed:\"\",\r\n            char:\"\",\r\n            diff:\"\",\r\n            opts:{\r\n                FLOORINDEX:0,\r\n                ENHANCE:false\r\n            }\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        const isComponent = (name) => e.props.name === name;\r\n        const getFloorIndex = (floor) => FLOORS.find(([f, i]) => f === floor)[1];\r\n        let seed = e.state.seed;\r\n        let sel = e.state.selection;\r\n        let opt = e.state.checked;\r\n        this.setState({\r\n            seed:(isComponent('Seed') ? seed : this.state.seed),\r\n            char:(isComponent('Character') ? sel : this.state.char),\r\n            diff:(isComponent('Difficulty') ? sel : this.state.diff),\r\n            opts:{\r\n                FLOORINDEX:(isComponent('Floor') && e.valid() ? getFloorIndex(sel) : this.state.opts.FLOORINDEX),\r\n                ENHANCE:(isComponent('Enhance') ? opt : this.state.opts.ENHANCE)\r\n            }\r\n        }, () => console.log(this.state));\r\n    }\r\n    handleClick(e) {\r\n        let args = Object.keys(this.state);\r\n        let arg_msg = {\r\n            seed:'\\tSeed\\n',\r\n            char:'\\tCharacter\\n',\r\n            diff:'\\tDifficulty\\n'\r\n        }\r\n        if(this.validate(args)) {\r\n            let data = bpmssg(this.state).serialize();\r\n            let filename = 'ContinueStateV2.sav';\r\n            e.activateDownload({data, filename});\r\n        }\r\n        else {\r\n            let unset = args.map(k => this.state[k] === \"\" ? arg_msg[k] : '');\r\n            window.alert(`The following options are required:\\n${unset.join('')}`);\r\n        }\r\n    }\r\n    validate(args) {\r\n        let result = true;\r\n        args.forEach(key => {\r\n            if(key !== 'opts' && this.state[key] === \"\") {\r\n                result = false;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"SSG\" style={styles}>\r\n                \r\n                <div className=\"ssg-opt\">\r\n                    <Dropdown name=\"Character\" options={CHARACTERS}\r\n                        tooltip={TOOTIP.REQUIRED}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <Dropdown name=\"Difficulty\" options={DIFFICULTIES}\r\n                        tooltip={TOOTIP.REQUIRED}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <Dropdown name=\"Floor\" options={FLOORS.map(([f, i]) => f)}\r\n                        tooltip={`${TOOTIP.OPTIONAL}${TOOTIP.FLOOR}`}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <SeedField name=\"Seed\" seed={this.state.seed}\r\n                        tooltip={`${TOOTIP.REQUIRED}${TOOTIP.RANDOM}`}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <Checkbox name=\"Enhance\" label=\"Enhanced Item Pools\" \r\n                        tooltip={`${TOOTIP.OPTIONAL}${TOOTIP.ENHANCE}`}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                \r\n                <div className=\"ssg-gen\">\r\n                    <DownloadButton onClick={this.handleClick} label=\"Generate Save\"/>\r\n                </div>\r\n                <div>\r\n                    <VersionInfo value={application.version}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\nexport default SSG;","import { ContinueStateV2 } from './src/index.js';\r\nexport default function bpmssg(args) {\r\n    return ContinueStateV2.generate(args);\r\n}\r\n\r\nexport * from './src/index.js'\r\nexport { bpmssg }","export default __webpack_public_path__ + \"static/media/bpm_logo_1x1.96a7124c.png\";","import SSG from './components/ssg/ssg'\nimport bpm_logo from './media/bpm_logo_1x1.png'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <img className=\"logo\" src={bpm_logo} alt=\"BPM: Bullets Per Minute logo\"/>\n        <p className=\"Title\">Seeded Save Generator</p>\n      </div>\n      <div>\n        <SSG />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}