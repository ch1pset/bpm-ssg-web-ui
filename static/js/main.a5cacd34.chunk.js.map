{"version":3,"sources":["../../../Programming/js/UESaveTool/models/factories/PropertyFactory.js","../../../Programming/js/UESaveTool/utils/Serializer.js","../../../Programming/js/UESaveTool/models/properties/Property.js","../../../Programming/js/UESaveTool/models/properties/BoolProperty.js","../../../Programming/js/UESaveTool/models/properties/IntProperty.js","../../../Programming/js/UESaveTool/models/properties/FloatProperty.js","../../../Programming/js/UESaveTool/models/properties/StrProperty.js","../../../Programming/js/UESaveTool/models/properties/ObjectProperty.js","../../../Programming/js/UESaveTool/models/properties/SoftObjectProperty.js","../../../Programming/js/UESaveTool/models/properties/StructProperty.js","../../../Programming/js/UESaveTool/models/properties/ArrayProperty.js","../../../Programming/js/UESaveTool/models/properties/EnumProperty.js","../../../Programming/js/UESaveTool/models/properties/Tuple.js","../../../Programming/js/UESaveTool/models/properties/Guid.js","../../../Programming/js/UESaveTool/index.js","../../../Programming/js/UESaveTool/models/PropertyErrors.js","../../../Programming/js/UESaveTool/models/arrays/IntArray.js","../../../Programming/js/UESaveTool/models/arrays/SoftObjectArray.js","../../../Programming/js/UESaveTool/models/arrays/StructArray.js","../../../Programming/js/UESaveTool/models/index.js","../../../Programming/js/UESaveTool/utils/index.js","../../../Programming/js/UESaveTool/models/Gvas.js","../../../Programming/js/UESaveTool/models/GvasHeader.js","utils/xorshift.js","components/seed/seedfield.js","components/download/download.js","components/version/version.js","../../../Programming/js/bpm-ssg/src/utils.js","../../../Programming/js/bpm-ssg/src/Prng.js","../../../Programming/js/bpm-ssg/src/CharacterPropertyStore.js","../../../Programming/js/bpm-ssg/src/RunPropertyStore.js","../../../Programming/js/bpm-ssg/src/PropertyStore.js","../../../Programming/js/bpm-ssg/src/ContinueStateV2.js","../../../Programming/js/bpm-ssg/src/ItemWeightPair.js","components/dropdowns/dropdown.js","components/checkboxes/checkbox.js","components/ssg/ssg.js","../../../Programming/js/bpm-ssg/index.js","media/bpm_logo_1x1.png","App.js","reportWebVitals.js","index.js"],"names":["PropertyFactory","this","Properties","Arrays","ctor","name","obj","type","Type","split","undefined","TypeNotImplementedError","from","Serializer","buf","_data","_offset","count","length","Error","tell","toString","Data","slice","seek","int","readInt32LE","readInt16LE","readUInt8","float","readFloatLE","readInt32","read","copy","num","writeInt32LE","writeInt16LE","byte","writeUInt8","writeFloatLE","str","write","Buffer","concat","size","alloc","Property","Name","serial","json","BoolProperty","Size","writeString","SerializationError","prop","Object","assign","IntProperty","writeInt32","FloatProperty","readFloat","writeFloat","StrProperty","readString","ObjectProperty","SoftObjectProperty","StructProperty","StoredPropertyType","i","console","log","end","create","deserialize","push","HeaderSize","serialize","struct","forEach","ArrayProperty","readInt16","createArray","ArraySize","writeInt16","Count","array","EnumProperty","EnumType","Tuple","tuple","Guid","Id","Value","swap32","swap16","guid","IntArray","SoftObjectArray","StructArray","Gvas","Header","GvasHeader","format","compare","SaveGameType","gvas","Format","SaveGameVersion","PackageVersion","EngineVersion","Major","Minor","Patch","Build","BuildId","CustomFormatVersion","CustomFormatData","Entries","header","xorshift","seed","x","SeedField","props","state","handleChange","bind","handleClick","e","setState","target","value","onChange","genSeed","Date","now","output","at","styles","placeholder","className","style","onClick","React","Component","DownloadButton","url","filename","file","File","data","URL","createObjectURL","dofileDownload","click","revokeObjectURL","label","display","download","href","ref","VersionInfo","version","application","id","deep_copy_template","template","JSON","parse","stringify","range","cb","min","max","numbers","Prng","_prng","init","prng_alea","int32","int16","quick","pick","Math","floor","choose","values","splice","chance","pct_float","shuffle","map","w","pow","sort","aw","destroy","CharacterPropertyStore","PropertyStore","T_CHARSTORE","toLowerCase","addProperty","list","selection","ITEMS","filter","p","CHARSTORE","index","opts","loadout","entries","REQUIREMENTS","LOADOUT","abilities","storeditems","selectItem","all","amt","ret","RANDCHAR","genChar","genLoadout","FLOOR","RunPropertyStore","indx","getPropertyIndex","diff","RUNSTORE","DIFFICULTY","toUpperCase","enhance","item_pool","ITEMPOOL","Standard","iw","ItemWeightPair","fromPair","gen","FloorGenerationSeeds","mod","FloorModifierFloats","play","FloorPlaySeeds","room","weight","assignFloor","f","has","FloorIndex","crypts","CRYPTSVISIT","parseInt","POOLS","pool","genItemPool","ENHANCE","Difficulty","genSeeds","ROOMS","genRooms","FLOORINDEX","findIndex","ContinueStateV2","T_GVAS_HEADER","SAVESLOT","char","save","Slot","generate","Item","Weight","item","find","n","item_weight_pair","Dropdown","options","opt","createOptions","Checkbox","checked","Styles","CHARACTERS","DIFFICULTIES","FLOORS","SSG","isComponent","sel","valid","args","keys","arg_msg","validate","seededGen","bpmssg","activateDownload","unset","k","window","alert","join","result","key","App","src","bpm_logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5cacd34.chunk.js","sourcesContent":["import { TypeNotImplementedError } from '../index.js';\r\n\r\nclass Factory {\r\n    constructor() {\r\n        this.Properties = {}\r\n        this.Arrays = {}\r\n    }\r\n    add(ctor) {\r\n        this.Properties[ctor.name] = ctor;\r\n    }\r\n    create(obj) {\r\n        let type = obj.Type.split('\\0')[0]\r\n\r\n        if (this.Properties[type] === undefined)\r\n            throw new TypeNotImplementedError(type);\r\n\r\n        return this.Properties[type].from(obj);\r\n    }\r\n    createArray(obj) {\r\n        let type = obj.Type.split('\\0')[0]\r\n\r\n        if (this.Arrays[type] === undefined)\r\n            throw new TypeNotImplementedError(type);\r\n\r\n        return this.Arrays[type].from(obj);\r\n    }\r\n}\r\n\r\nexport const PropertyFactory = new Factory();","\r\nexport class Serializer {\r\n    constructor(buf) {\r\n        this._data = buf;\r\n        this._offset = 0;\r\n    }\r\n    get Data() { return this._data }\r\n    get tell() { return this._offset }\r\n    seek(count) {\r\n        if(this._offset >= this._data.length)\r\n            throw new Error(`Reached end of Buffer at offset 0x${this.tell.toString(16)}`);\r\n        return this._offset += count;\r\n    }\r\n    read(count) {\r\n        return this.Data.slice(this.tell, this.seek(count));\r\n    }\r\n    readInt32() {\r\n        let int = this.Data.readInt32LE(this.tell);\r\n        this.seek(4);\r\n        return int;\r\n    }\r\n    readInt16() {\r\n        let int = this.Data.readInt16LE(this.tell);\r\n        this.seek(2)\r\n        return int;\r\n    }\r\n    readUInt8() {\r\n        let int = this.Data.readUInt8(this.tell);\r\n        this.seek(1);\r\n        return int;\r\n    }\r\n    readFloat() {\r\n        let float = this.Data.readFloatLE(this.tell);\r\n        this.seek(4);\r\n        return float;\r\n    }\r\n    readString() {\r\n        let length = this.readInt32();\r\n        return this.read(length).toString('utf8');\r\n    }\r\n    write(buf) {\r\n        this._offset += buf.copy(this.Data, this.tell);\r\n    }\r\n    writeInt32(num) {\r\n        this._offset = this.Data.writeInt32LE(num, this.tell);\r\n    }\r\n    writeInt16(num) {\r\n        this._offset = this.Data.writeInt16LE(num, this.tell);\r\n    }\r\n    writeUInt8(byte) {\r\n        this._offset = this.Data.writeUInt8(byte, this.tell);\r\n    }\r\n    writeFloat(num) {\r\n        this._offset = this.Data.writeFloatLE(num, this.tell);\r\n    }\r\n    writeString(str) {\r\n        this._offset = this.Data.writeInt32LE(str.length, this.tell);\r\n        this._offset += this.Data.write(str, this.tell);\r\n    }\r\n    append(buf) {\r\n        this._data = Buffer.concat([this.Data, buf]);\r\n        this._offset += buf.length;\r\n    }\r\n    static alloc(size) {\r\n        return new Serializer(Buffer.alloc(size));\r\n    }\r\n}","import { Serializer } from '../../index.js'\r\nexport class Property {\r\n    constructor() {\r\n        this.Name = \"\";\r\n        this.Type = \"\";\r\n    }\r\n    /**\r\n     * Per-property byte size getter\r\n     * @returns {Number} `Size` in bytes of all attributes and properties held by this property to be serialized\r\n     */\r\n    get Size() {\r\n        throw new Error(`Size getter not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Per-property deserialization function\r\n     * @param {Serializer} serial Serializer instance used to read a buffer\r\n     * @param {Number} size Size in bytes or Count of elements for Arrays\r\n     * @returns {Property} Returns `this` instance\r\n     */\r\n    deserialize(serial, size) {\r\n        throw new Error(`Deserialization not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Per-property serialization function\r\n     * @returns {Buffer} Returns a `Buffer` of the serialized data\r\n     */\r\n    serialize() {\r\n        throw new Error(`Serialization not implemented for property: ${this.Type}`);\r\n    }\r\n    /**\r\n     * Factory function for a `Property` type. This should instantiate a `new Property` with default values if not given in the `json`\r\n     * @param {Object} json Template from which to create a new instance of a `Property`\r\n     */\r\n    static from(json) {\r\n        throw new Error(`from() not implemented for property: ${this.Type}`);\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/index.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\n\r\nexport class BoolProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = false;\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 10;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.Property = serial.readUInt8() === 1;\r\n        serial.seek(1);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.seek(8);\r\n        serial.writeUInt8(this.Property === true ? 1 : 0);\r\n        serial.seek(1);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this)\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new BoolProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/index.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\n\r\nexport class IntProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = [];\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        this.Property[0] = serial.readInt32();\r\n        serial.seek(1);\r\n        this.Property[1] = serial.readInt32();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(4);\r\n        serial.writeInt32(this.Property[0]);\r\n        serial.seek(1);\r\n        serial.writeInt32(this.Property[1]);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new IntProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\n\r\nexport class FloatProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = [];\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        this.Property[0] = serial.readInt32();\r\n        serial.seek(1);\r\n        this.Property[1] = serial.readFloat();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(4);\r\n        serial.writeInt32(this.Property[0]);\r\n        serial.seek(1);\r\n        serial.writeFloat(this.Property[1]);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new FloatProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class StrProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new StrProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\n\r\nexport class ObjectProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new ObjectProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class SoftObjectProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + 13;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(5);\r\n        this.Property = serial.readString();\r\n        serial.seek(4);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 8);\r\n        serial.seek(5);\r\n        serial.writeString(this.Property);\r\n        serial.seek(4);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new SoftObjectProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class StructProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.StoredPropertyType = \"\";\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8; // 4 byte size + 4 byte padding\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 17; // 17 byte padding\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            size += this.Properties[i].Size;\r\n        }\r\n        return size;\r\n    }\r\n    get HeaderSize() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8;\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 17;\r\n        return size\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, size) {\r\n        console.log(`Deserializing ${this.Name} Size: ${size}`)\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString();\r\n        serial.seek(17);\r\n        let end = serial.tell + size;\r\n        let i = 0;\r\n        while (serial.tell < end) {\r\n            let Name = this.StoredPropertyType;\r\n            let Type = 'Tuple';\r\n            let prop = PropertyFactory.create({ Name, Type })\r\n            prop.deserialize(serial)\r\n            this.Properties.push(prop);\r\n            i++;\r\n        }\r\n        console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Size - this.HeaderSize);\r\n        serial.seek(4);\r\n        serial.writeString(this.StoredPropertyType);\r\n        serial.seek(17);\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            serial.write(this.Properties[i].serialize());\r\n        }\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let struct = new StructProperty();\r\n        struct.Name = obj.Name;\r\n        struct.Type = obj.Type;\r\n        struct.StoredPropertyType = obj.StoredPropertyType;\r\n        struct.Properties = [];\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach((prop) => struct.Properties.push(PropertyFactory.create(prop)));\r\n        return struct;\r\n    }\r\n}\r\n","import { Buffer } from 'buffer'\r\nimport { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { SerializationError } from '../index.js'\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class ArrayProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.StoredPropertyType = \"\";\r\n        this.Property = new Property();\r\n    }\r\n    get Size() {\r\n        let size = 0;\r\n        size += this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8; // 4 byte size + 4 byte padding\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 5; // 1 byte padding + 2 byte int + 2 byte padding\r\n        size += this.Property.Size;\r\n        return size;\r\n    }\r\n    get HeaderSize() {\r\n        let size = this.Name.length + 4;\r\n        size += this.Type.length + 4;\r\n        size += 8;\r\n        size += this.StoredPropertyType.length + 4;\r\n        size += 1;\r\n        return size;\r\n    }\r\n    get ArraySize() {\r\n        if (this.StoredPropertyType === 'IntProperty\\0')\r\n            return 12;\r\n        else\r\n            return this.Size - this.HeaderSize;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString()\r\n        serial.seek(1);\r\n        let count = serial.readInt16();\r\n        serial.seek(2);\r\n        this.Property = PropertyFactory.createArray({\r\n            Name: this.Name,\r\n            Type: this.StoredPropertyType\r\n        });\r\n        this.Property.deserialize(serial, count)\r\n\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.ArraySize);\r\n        serial.seek(4);\r\n        serial.writeString(this.StoredPropertyType);\r\n        serial.seek(1);\r\n        serial.writeInt16(this.Property.Count);\r\n        serial.seek(2);\r\n        serial.write(this.Property.serialize());\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new ArrayProperty();\r\n        array.Name = obj.Name;\r\n        array.Type = obj.Type;\r\n        array.StoredPropertyType = obj.StoredPropertyType;\r\n        if (obj.Property !== undefined)\r\n            array.Property = PropertyFactory.createArray(obj.Property);\r\n        return array;\r\n    }\r\n}","import { Serializer } from '../../utils/Serializer.js';\r\nimport { SerializationError } from '../PropertyErrors.js';\r\nimport { Property } from './index.js';\r\n\r\nexport class EnumProperty extends Property {\r\n    constructor() {\r\n        super();\r\n        this.EnumType = \"\";\r\n        this.Property = \"\";\r\n    }\r\n    get Size() {\r\n        return this.Name.length + 4\r\n            + this.Type.length + 4\r\n            + this.Property.length + 4\r\n            + this.EnumType.length + 4\r\n            + 9;\r\n    }\r\n    deserialize(serial) {\r\n        serial.seek(4);\r\n        this.EnumType = serial.readString();\r\n        serial.seek(1);\r\n        this.Property = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.writeString(this.Name);\r\n        serial.writeString(this.Type);\r\n        serial.writeInt32(this.Property.length + 4);\r\n        serial.seek(4);\r\n        serial.writeString(this.EnumType);\r\n        serial.seek(1);\r\n        serial.writeString(this.Property);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let prop = new EnumProperty();\r\n        Object.assign(prop, obj);\r\n        return prop;\r\n    }\r\n}\r\n","import { Property } from './index.js'\r\nimport { PropertyFactory } from '../factories/index.js';\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class Tuple extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = 'Tuple';\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = 0;\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            size += this.Properties[i].Size;\r\n        }\r\n        size += 9;\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial) {\r\n        let Name;\r\n        while ((Name = serial.readString()) !== 'None\\0') {\r\n            let Type = serial.readString();\r\n            let Size = serial.readInt32();\r\n            let prop = PropertyFactory.create({ Name, Type });\r\n            prop.deserialize(serial, Size);\r\n            this.Properties.push(prop);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        for (let i = 0; i < this.Properties.length; i++) {\r\n            serial.write(this.Properties[i].serialize());\r\n        }\r\n        serial.writeString('None\\0');\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let tuple = new Tuple();\r\n        tuple.Name = obj.Name;\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach(prop => tuple.Properties.push(PropertyFactory.create(prop)));\r\n        return tuple;\r\n    }\r\n}","import { Buffer } from 'buffer'\r\nimport { Property } from './index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class Guid extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = 'Guid';\r\n        this.Id = \"00000000-00-00-00-000000000000\";\r\n        this.Value = 0;\r\n    }\r\n    get Size() {\r\n        return 20;\r\n    }\r\n    deserialize(serial) {\r\n        this.Id = `${serial.read(4).swap32().toString('hex')}`\r\n        this.Id += `-${serial.read(2).swap16().toString('hex')}`\r\n        this.Id += `-${serial.read(2).swap16().toString('hex')}`\r\n        this.Id += `-${serial.read(2).toString('hex')}`\r\n        this.Id += `-${serial.read(6).toString('hex')}`\r\n        this.Value = serial.readInt32();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let guid = this.Id.split('-');\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(Buffer.from(guid[0], 'hex').swap32());\r\n        serial.write(Buffer.from(guid[1], 'hex').swap16());\r\n        serial.write(Buffer.from(guid[2], 'hex').swap16());\r\n        serial.write(Buffer.from(guid[3], 'hex'));\r\n        serial.write(Buffer.from(guid[4], 'hex'));\r\n        serial.writeInt32(this.Value);\r\n        if (serial.tell !== 20)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let guid = new Guid();\r\n        guid.Id = obj.Id;\r\n        guid.Value = obj.Value;\r\n        return guid;\r\n    }\r\n}\r\n","export * from './models/index.js'\r\nexport * from './utils/index.js'","export class SerializationError extends Error {\r\n    constructor(prop) {\r\n        super(`Problem occurred during serialization of Property: ${prop.Name}`);\r\n    }\r\n}\r\n\r\nexport class DeserializationError extends Error {\r\n    constructor(type, offset) {\r\n        super(`Problem occurred during deserialization of Property '${type}' at offset 0x${offset.toString(16)}`)\r\n    }\r\n}\r\n\r\nexport class TypeNotImplementedError extends Error {\r\n    constructor(type) {\r\n        super(`No implementation for Property type: '${type}'`);\r\n    }\r\n}\r\n","import { Property } from '../properties/index.js'\r\nimport { PropertyFactory } from '../factories/index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class IntArray extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = \"IntProperty\"\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = this.Properties.length > 1 ? 8 : 4;\r\n        this.Properties.forEach((int) => {\r\n            size += int.Size\r\n        });\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, count) {\r\n        serial.seek((count > 1) ? 8 : 4);\r\n        for (let i = 0; i < count; i++) {\r\n            let Name = serial.readString();\r\n            let Type = serial.readString();\r\n            let Size = serial.readInt32();\r\n            let prop = PropertyFactory.create({ Name, Type });\r\n            prop.deserialize(serial);\r\n            this.Properties.push(prop);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.seek(this.Count > 1 ? 8 : 4);\r\n        this.Properties.forEach(int => serial.write(int.serialize()))\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new IntArray();\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach(int => array.Properties.push(PropertyFactory.create(int)));\r\n        return array;\r\n    }\r\n}","import { Property } from '../properties/index.js'\r\nimport { SerializationError } from '../index.js';\r\nimport { Serializer } from '../../utils/Serializer.js';\r\n\r\nexport class SoftObjectArray extends Property {\r\n    constructor() {\r\n        super();\r\n        this.Type = \"SoftObjectProperty\";\r\n        this.Properties = [];\r\n    }\r\n    get Size() {\r\n        let size = 8;\r\n        this.Properties.forEach((str) => {\r\n            size += str.length + 4;\r\n        });\r\n        return size;\r\n    }\r\n    get Count() {\r\n        return this.Properties.length;\r\n    }\r\n    deserialize(serial, count) {\r\n        for (let i = 0; i < count; i++) {\r\n            this.Properties.push(serial.readString());\r\n            serial.seek(4);\r\n        }\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        this.Properties.forEach(str => {\r\n            serial.writeString(str);\r\n            serial.seek(4);\r\n        });\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let array = new SoftObjectArray();\r\n        if (obj.Properties !== undefined)\r\n            array.Properties = obj.Properties;\r\n        return array;\r\n    }\r\n}","import { StructProperty } from \"../properties/index.js\";\r\nimport { PropertyFactory } from \"../index.js\";\r\n\r\nexport class StructArray extends StructProperty {\r\n    deserialize(serial, count) {\r\n        console.log(`Deserializing ${this.Name} Count: ${count}`)\r\n        this.Name = serial.readString()\r\n        this.Type = serial.readString()\r\n        let Size = serial.readInt32();\r\n        serial.seek(4);\r\n        this.StoredPropertyType = serial.readString();\r\n        serial.seek(17);\r\n        let i = 0;\r\n        while (i < count) {\r\n            let Name = this.StoredPropertyType;\r\n            let Type = 'Tuple';\r\n            let prop = PropertyFactory.create({ Name, Type })\r\n            prop.deserialize(serial)\r\n            this.Properties.push(prop);\r\n            i++;\r\n        }\r\n        console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\r\n        return this;\r\n    }\r\n    static from(obj) {\r\n        let struct = new StructArray();\r\n        struct.Name = obj.Name;\r\n        struct.Type = obj.Type;\r\n        struct.StoredPropertyType = obj.StoredPropertyType;\r\n        struct.Properties = [];\r\n        if (obj.Properties !== undefined)\r\n            obj.Properties.forEach((prop) => struct.Properties.push(PropertyFactory.create(prop)));\r\n        return struct;\r\n    }\r\n}","import { PropertyFactory } from './factories/index.js'\r\nimport {\r\n    ArrayProperty,\r\n    BoolProperty,\r\n    EnumProperty,\r\n    FloatProperty,\r\n    IntProperty,\r\n    ObjectProperty,\r\n    SoftObjectProperty,\r\n    StrProperty,\r\n    StructProperty,\r\n    Tuple,\r\n    Guid\r\n} from './properties/index.js'\r\n\r\nimport {\r\n    IntArray,\r\n    SoftObjectArray,\r\n    StructArray\r\n} from './arrays/index.js'\r\n\r\nPropertyFactory.Properties['ArrayProperty'] = ArrayProperty;\r\nPropertyFactory.Properties['BoolProperty'] = BoolProperty;\r\nPropertyFactory.Properties['EnumProperty'] = EnumProperty;\r\nPropertyFactory.Properties['FloatProperty'] = FloatProperty;\r\nPropertyFactory.Properties['IntProperty'] = IntProperty;\r\nPropertyFactory.Properties['ObjectProperty'] = ObjectProperty;\r\nPropertyFactory.Properties['SoftObjectProperty'] = SoftObjectProperty;\r\nPropertyFactory.Properties['StrProperty'] = StrProperty;\r\nPropertyFactory.Properties['StructProperty'] = StructProperty;\r\nPropertyFactory.Properties['Tuple'] = Tuple;\r\nPropertyFactory.Properties['Guid'] = Guid;\r\nPropertyFactory.Arrays['IntArray'] = IntArray;\r\nPropertyFactory.Arrays['SoftObjectArray'] = SoftObjectArray;\r\nPropertyFactory.Arrays['StructProperty'] = StructArray;\r\nPropertyFactory.Arrays['IntProperty'] = IntArray;\r\nPropertyFactory.Arrays['SoftObjectProperty'] = SoftObjectArray;\r\n// console.log(PropertyFactory);\r\n\r\nexport { PropertyFactory }\r\nexport { Gvas } from './Gvas.js'\r\nexport { GvasHeader } from './GvasHeader.js'\r\nexport * from './PropertyErrors.js'\r\nexport * from './properties/index.js'\r\nexport * from './arrays/index.js'\r\n","export * from './Serializer.js';","import { PropertyFactory } from './factories/index.js';\r\nimport { SerializationError } from './PropertyErrors.js';\r\nimport { GvasHeader } from './index.js';\r\nimport { Tuple } from './properties/index.js';\r\nimport { Serializer } from '../utils/Serializer.js';\r\n\r\nexport class Gvas {\r\n    constructor() {\r\n        this.Header = new GvasHeader();\r\n        this.Properties = new Tuple();\r\n    }\r\n    get Size() {\r\n        let size = this.Header.Size;\r\n        size += this.Properties.Size;\r\n        size += 4;\r\n        return size;\r\n    }\r\n    deserialize(serial) {\r\n        let format = serial.read(4);\r\n        if (Buffer.compare(Buffer.from('GVAS'), format) !== 0)\r\n            throw Error(`Unexpected header, expected 'GVAS`)\r\n\r\n        this.Header.deserialize(serial);\r\n        this.Properties.Name = this.Header.SaveGameType;\r\n        this.Properties.deserialize(serial);\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(this.Header.serialize());\r\n        serial.write(this.Properties.serialize());\r\n        serial.seek(4);\r\n        if (serial.tell !== this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let gvas = new Gvas();\r\n        gvas.Header = GvasHeader.from(obj.Header);\r\n        gvas.Properties = PropertyFactory.create(obj.Properties);\r\n        return gvas;\r\n    }\r\n}\r\n","import { SerializationError } from './index.js';\r\nimport { PropertyFactory } from './factories/index.js'\r\nimport { Serializer } from '../utils/Serializer.js';\r\n\r\nexport class GvasHeader {\r\n    constructor() {\r\n        this.Format = 'GVAS';\r\n        this.SaveGameVersion = 0;\r\n        this.PackageVersion = 0;\r\n        this.EngineVersion = {\r\n            Major: 0,\r\n            Minor: 0,\r\n            Patch: 0,\r\n            Build: 0,\r\n            BuildId: \"\"\r\n        }\r\n        this.CustomFormatVersion = 0;\r\n        this.CustomFormatData = {\r\n            Count: 0,\r\n            Entries: []\r\n        }\r\n        this.SaveGameType = \"\";\r\n    }\r\n    get Size() {\r\n        let size = this.Format.length;\r\n        size += 18;\r\n        size += this.EngineVersion.BuildId.length + 4;\r\n        size += 8;\r\n        this.CustomFormatData.Entries.forEach(guid => {\r\n            size += guid.Size; // 20\r\n        })\r\n        size += this.SaveGameType.length + 4;\r\n        return size;\r\n    }\r\n    deserialize(serial) {\r\n        this.SaveGameVersion = serial.readInt32();\r\n        this.PackageVersion = serial.readInt32();\r\n        this.EngineVersion.Major = serial.readInt16();\r\n        this.EngineVersion.Minor = serial.readInt16();\r\n        this.EngineVersion.Patch = serial.readInt16();\r\n        this.EngineVersion.Build = serial.readInt32();\r\n        this.EngineVersion.BuildId = serial.readString();\r\n        this.CustomFormatVersion = serial.readInt32();\r\n        this.CustomFormatData.Count = serial.readInt32();\r\n        for (let i = 0; i < this.CustomFormatData.Count; i++) {\r\n            let guid = PropertyFactory.create({ Type: 'Guid' })\r\n            this.CustomFormatData.Entries.push(guid.deserialize(serial));\r\n        }\r\n        this.SaveGameType = serial.readString();\r\n        return this;\r\n    }\r\n    serialize() {\r\n        let serial = Serializer.alloc(this.Size);\r\n        serial.write(Buffer.from(this.Format));\r\n        serial.writeInt32(this.SaveGameVersion);\r\n        serial.writeInt32(this.PackageVersion);\r\n\r\n        serial.writeInt16(this.EngineVersion.Major);\r\n        serial.writeInt16(this.EngineVersion.Minor);\r\n        serial.writeInt16(this.EngineVersion.Patch);\r\n        serial.writeInt32(this.EngineVersion.Build);\r\n        serial.writeString(this.EngineVersion.BuildId);\r\n\r\n        serial.writeInt32(this.CustomFormatVersion);\r\n        serial.writeInt32(this.CustomFormatData.Count);\r\n        this.CustomFormatData.Entries.forEach(guid => serial.write(guid.serialize()));\r\n        serial.writeString(this.SaveGameType);\r\n        if (serial.tell != this.Size)\r\n            throw new SerializationError(this);\r\n        return serial.Data;\r\n    }\r\n    static from(obj) {\r\n        let header = new GvasHeader();\r\n        header.SaveGameVersion = obj.SaveGameVersion;\r\n        header.PackageVersion = obj.PackageVersion;\r\n        header.EngineVersion = obj.EngineVersion;\r\n        header.CustomFormatVersion = obj.CustomFormatVersion;\r\n        header.CustomFormatData.Count = obj.CustomFormatData.Count;\r\n        obj.CustomFormatData.Entries.forEach(guid => {\r\n            header.CustomFormatData.Entries.push(PropertyFactory.create(guid));\r\n        });\r\n        header.SaveGameType = obj.SaveGameType;\r\n        return header;\r\n    }\r\n}","\r\nexport default function xorshift(seed)\r\n{\r\n    let x = seed;\r\n    x ^= x << 13;\r\n    x ^= x >>> 7; //bitshift right without preserving sign because JS is dumb\r\n    x ^= x << 17;\r\n    return x;\r\n}","import React from 'react';\r\nimport styles from './seedfield.css';\r\nimport xorshift from '../../utils/xorshift';\r\n\r\nclass SeedField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {seed:\"\"}\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      seed:e.target.value\r\n    }, () => this.props.onChange(this));\r\n  }\r\n  handleClick(e) {\r\n    this.setState({\r\n      seed:this.genSeed(Date.now())\r\n    }, () => {\r\n      this.setState({\r\n        seed:this.state.seed\r\n      });\r\n      this.props.onChange(this);\r\n    });\r\n  }\r\n  genSeed(seed)\r\n  {\r\n    let output = \"\";\r\n    let chars = \"0123456789abcdefghijklmnopqrstuvwxyz\"\r\n    for(let i = 0; i < 20; i++)\r\n      output += chars.at((seed = xorshift(seed)) % 36);\r\n    return output;\r\n  }\r\n  render() {\r\n    return (\r\n      <div styles={styles}>\r\n          <input onChange={this.handleChange} \r\n                placeholder=\"enter a seed here...\"\r\n                value={this.state.seed}\r\n                className=\"Field\"/>\r\n          <button className=\"button\" \r\n              style={styles} \r\n              onClick={this.handleClick}\r\n              >Random</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SeedField;","import React from 'react';\r\nimport styles from './download.css';\r\n\r\nclass DownloadButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url:null,\r\n      filename:\"\"\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(e) {\r\n    this.props.onClick(this);\r\n  }\r\n  activateDownload(e) {\r\n    let file = new File([e.data], e.filename);\r\n    let url = URL.createObjectURL(file);\r\n    this.setState({\r\n      url, \r\n      filename:e.filename\r\n    }, () => {\r\n      this.dofileDownload.click();\r\n      URL.revokeObjectURL(url);\r\n      this.setState({\r\n        url:null,\r\n        filename:\"\"\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Button\" style={styles}>\r\n          <button className=\"gen\" onClick={this.handleClick}>{this.props.label}</button>\r\n          <a style={{display: \"none\"}}\r\n              download={this.state.filename}\r\n              href={this.state.url}\r\n              ref={e=>this.dofileDownload = e}>\r\n          </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadButton;","import React from 'react';\r\nimport styles from './version.css';\r\nimport application from '../../../package.json'\r\n\r\nclass VersionInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {version:application.version}\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"VersionInfo\" styles={styles}>\r\n        <label id=\"version\">v{this.state.version}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VersionInfo;","export function deep_copy_template(template) {\r\n    return JSON.parse(JSON.stringify(template));\r\n}\r\n\r\nexport function range([min, max], cb) { //inclusive\r\n    let numbers = []\r\n    for(let i = min; i <= max; i++) {\r\n        numbers.push(cb ? cb(i) : i);\r\n    }\r\n    return numbers;\r\n}","import { prng_alea } from 'esm-seedrandom'\r\nimport { range } from './index.js';\r\n\r\nexport const Prng = {\r\n    _prng:null,\r\n    init: function(seed) {\r\n        this._prng = prng_alea(seed, {state: true})\r\n    },\r\n    int32: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.int32();\r\n        return 0;\r\n    },\r\n    int16: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.int32() % (2**16);\r\n        return 0;\r\n    },\r\n    quick: function() {\r\n        if(this._prng !== null)\r\n            return this._prng.quick();\r\n        return 0;\r\n    },\r\n    pick: function(min, max) {\r\n        min = (min !== undefined) ? min : 0;\r\n        max = (max !== undefined) ? max : 1;\r\n        return Math.floor(this._prng.quick() * (max - min + 1)) + min;\r\n    },\r\n    choose: function([min, max], num) {\r\n        let values = [];\r\n        if(num > 0) {\r\n            values = range([min, max]);\r\n            while(values.length > num)\r\n                values.splice(this.pick(0, values.length - 1), 1);\r\n        }\r\n        return values;\r\n    },\r\n    chance: function (pct_float) {\r\n        return this._prng.quick() < pct_float ? 1 : 0;\r\n    },\r\n    // Algorithm based on:\r\n    // Weighted Random Sampling (2005; Efraimidis, Spirakis)\r\n    //\r\n    // Credits: https://github.com/denizdogan/weighted-shuffle by denizdogan\r\n    shuffle: function(array) {\r\n        return array.map(([i, w]) => [i, Math.pow(this.quick(), (1 / w))])\r\n                    .sort(([an, aw], [bn, bw]) => bw - aw);\r\n    },\r\n    destroy: function() {\r\n        this._prng = null;\r\n    }\r\n}\r\n","import {\r\n    StructProperty\r\n} from 'uesavetool';\r\n\r\nimport { \r\n    deep_copy_template,\r\n    T_CHARSTORE,\r\n    CHARSTORE,\r\n    ITEMS,\r\n    REQUIREMENTS,\r\n    Prng,\r\n    PropertyStore\r\n} from './index.js'\r\n\r\nexport class CharacterPropertyStore extends StructProperty {\r\n    constructor(name) {\r\n        super();\r\n        this.Name = \"CharacterPropertyStore\\u0000\";\r\n        this.Type = \"StructProperty\\u0000\";\r\n        this.StoredPropertyType = \"BPMCharacterPropertyStore\\u0000\";\r\n        this.Properties = [\r\n            PropertyStore.from(\r\n                deep_copy_template(T_CHARSTORE[name.toLowerCase()].Properties[0])\r\n            )\r\n        ]\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties[0].addProperty(prop);\r\n    }\r\n    selectItem(list, num) {\r\n        Prng.choose([0, list.length - 1], num)\r\n            .forEach(i => {\r\n                let selection = ITEMS.filter(([n, item]) => item.Type === list[i][1]);\r\n                let p = deep_copy_template(CHARSTORE[list[i][0]]);\r\n                let index = Prng.pick(0, selection.length - 1);\r\n                p.Property = selection[index][1].Value;\r\n                this.addProperty(p);\r\n            })\r\n    }\r\n    genLoadout(opts) {\r\n        let loadout = Object.entries(REQUIREMENTS.LOADOUT);\r\n        let abilities = loadout.slice(0, 2);\r\n        let storeditems = loadout.slice(2, 6);\r\n        this.selectItem(abilities, opts.all ? 2 : Prng.pick(0, 2));\r\n        this.selectItem(storeditems, opts.all ? 4 : opts.num);\r\n    }\r\n    genChar(prop, amt) {\r\n        let p = deep_copy_template(CHARSTORE[prop]);\r\n        let index;\r\n        let selection = []\r\n        switch(prop) {\r\n            case \"StoredWeapon\":\r\n                selection = ITEMS.filter(([n, i]) => i.Type === 'Weapon');\r\n                index = Prng.pick(0, selection.length - 1);\r\n                p.Property = selection[index][1].Value;\r\n                break;\r\n            case \"StoredMobilityAbility\":\r\n                selection = ITEMS.filter(([n, i]) => i.Type === 'Auxilary').slice(0,2);\r\n                index = Prng.pick(0, selection.length - 1);\r\n                p.Property = selection[index][1].Value;\r\n                break;\r\n            case \"StoredHealth\":\r\n            case \"StoredShield\":\r\n                p.Property = [0, (25 * Prng.pick(0, amt))];\r\n                break;\r\n            case \"StoredCoins\":\r\n            case \"StoredKeys\":\r\n                p.Property = [0, Prng.pick(0, amt)];\r\n                break;\r\n        }\r\n        this.addProperty(p);\r\n    }\r\n    static generate(seed, name, opts) {\r\n        let ret = new CharacterPropertyStore(name);\r\n        if(name.toLowerCase() === 'run') {\r\n            Prng.init(seed);\r\n            REQUIREMENTS.RANDCHAR\r\n                .forEach(([prop, amt]) => ret.genChar(prop, amt));\r\n            ret.genLoadout({num: 1});\r\n        }\r\n        return ret;\r\n    }\r\n}","import { \r\n    StructProperty,\r\n    PropertyFactory\r\n} from 'uesavetool';\r\n\r\nimport { \r\n    deep_copy_template,\r\n    RUNSTORE,\r\n    REQUIREMENTS,\r\n    ITEMPOOL,\r\n    Prng,\r\n    PropertyStore,\r\n    ItemWeightPair,\r\n    ITEMS\r\n} from './index.js';\r\nimport { range } from './utils.js';\r\n\r\nconst FLOOR = {\r\n    ASG_I:  0,\r\n    ASG_II: 1,\r\n    VAN_I:  2,\r\n    VAN_II: 3,\r\n    SVAR_I: 4,\r\n    SVAR_II:5,\r\n    HELL_I: 6,\r\n    HELL_II:7,\r\n    UNKOWN:8,\r\n    MAX:9\r\n}\r\n\r\nexport class RunPropertyStore extends StructProperty {\r\n    constructor() {\r\n        super();\r\n        this.Name = 'RunPropertyStore\\0';\r\n        this.Type = 'StructProperty\\0';\r\n        this.StoredPropertyType = 'BPMRunPropertyStore\\0'\r\n        this.Properties = [ \r\n            PropertyStore.from({\r\n                \"Name\": \"BPMRunPropertyStore\\u0000\",\r\n                \"Type\": \"Tuple\",\r\n                \"Properties\": []\r\n            })\r\n        ];\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties[0]\r\n            .addProperty(PropertyFactory.create(prop));\r\n    }\r\n    setProperty(name, value) {\r\n        let indx = this.Properties[0].getPropertyIndex(name);\r\n        if(indx !== -1)\r\n            this.Properties[0].Properties[indx].Property = value;\r\n    }\r\n    set Difficulty(diff) {\r\n        this.addProperty(RUNSTORE.DIFFICULTY[diff.toUpperCase()]);\r\n    }\r\n    genItemPool(seed, name, enhance) {\r\n        Prng.init(seed);\r\n        let item_pool = deep_copy_template(RUNSTORE[name]);\r\n        let list = ITEMPOOL[name].Standard \r\n                ? ITEMPOOL[name][enhance ? 'Enhanced' : 'Standard'] \r\n                : ITEMPOOL[name];\r\n        let pool = Prng.shuffle(deep_copy_template(list));\r\n        pool.forEach(iw => item_pool.Property\r\n            .Properties.push(ItemWeightPair.fromPair(iw)));\r\n        this.addProperty(item_pool);\r\n    }\r\n    genSeeds(seed) {\r\n        Prng.init(seed);\r\n        for(let i = 0; i <= 9; i++) {\r\n            let gen = deep_copy_template(RUNSTORE.FloorGenerationSeeds);\r\n            let mod = deep_copy_template(RUNSTORE.FloorModifierFloats);\r\n            let play = deep_copy_template(RUNSTORE.FloorPlaySeeds);\r\n            gen.Property = [i, Prng.int16()];\r\n            mod.Property = [i, Prng.quick() * 100];\r\n            play.Property = [i, Prng.int32()];\r\n            this.addProperty(gen);\r\n            this.addProperty(mod);\r\n            this.addProperty(play);\r\n        }\r\n    }\r\n    assignFloor(floor, name) {\r\n        let room = deep_copy_template(RUNSTORE[name]);\r\n        room.Property = [floor, 1];\r\n        this.addProperty(room);\r\n    }\r\n    genRooms([room, weight]) {\r\n        switch(room) {\r\n            case \"LibraryBeforeArmoury\":\r\n                range([0, 4], i => {\r\n                    if(Prng.chance(weight)) {\r\n                        this.assignFloor(2*i, room);\r\n                        this.assignFloor(2*i+1, room);\r\n                    }\r\n                })\r\n                break;\r\n            case \"MinibossChoice\":\r\n                range([0, 4], i => Prng.pick(2*i, 2*i+1))\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"ChallengeRoomChosen\":\r\n                range([FLOOR.ASG_I, FLOOR.MAX], f => Prng.chance(weight) ? this.assignFloor(f, room) : null);\r\n                break;\r\n            case \"PortalRoomChosen\":\r\n                Prng.choose([FLOOR.ASG_I, FLOOR.HELL_I], Prng.chance(weight))\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"StairsRoomChosen\":\r\n                Prng.choose([FLOOR.ASG_I, FLOOR.ASG_I], Prng.chance(weight))\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"ChoiceRoomChosen\":\r\n                if(this.Properties[0].has(\"StairsRoomChosen\\0\"))\r\n                    Prng.choose([FLOOR.ASG_I, FLOOR.ASG_I], Prng.chance(weight))\r\n                        .forEach(f => this.assignFloor(f, room));\r\n                else if(Prng.chance(weight))\r\n                    this.assignFloor(Prng.pick(FLOOR.ASG_I, FLOOR.SVAR_II), room);\r\n                break;\r\n            case \"BankRoomChosen\":\r\n            case \"HeroRoomChosen\":\r\n            case \"BlackMarketRoomChosen\":\r\n            case \"RerollRoomChosen\":\r\n            case \"GamblingRoomChosen\":\r\n                let num = 0;\r\n                while(Prng.chance(weight) && num < FLOOR.HELL_I) {\r\n                    num++;\r\n                    weight /= 2;\r\n                }\r\n                Prng.choose([FLOOR.ASG_I, FLOOR.SVAR_II], num)\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n            case \"PrestigeRoomChosen\":\r\n                Prng.choose([FLOOR.VAN_I, FLOOR.VAN_I], Prng.chance(weight))\r\n                    .forEach(f => this.assignFloor(f, room));\r\n                break;\r\n        }\r\n    }\r\n    set FloorIndex(floor) {\r\n        let index = deep_copy_template(RUNSTORE.FloorIndex);\r\n        if(floor===\"Crypts\") {\r\n            index.Property = [0, 1];\r\n            let crypts = deep_copy_template(RUNSTORE.CRYPTSVISIT);\r\n            this.addProperty(crypts);\r\n        }\r\n        else index.Property = [0, parseInt(floor)];\r\n        this.addProperty(index);\r\n    }\r\n    static generate(seed, diff, opts) {\r\n        let ret = new RunPropertyStore();\r\n        REQUIREMENTS.POOLS\r\n            .forEach(pool => ret.genItemPool(seed, pool, opts.ENHANCE));\r\n        ret.Difficulty = diff;\r\n        ret.genSeeds(seed);\r\n        Prng.init(seed);\r\n        REQUIREMENTS.ROOMS.forEach(room => ret.genRooms(room));\r\n        ret.FloorIndex = opts.FLOORINDEX;\r\n        return ret;\r\n    }\r\n}\r\n","import { PropertyFactory, Tuple } from \"uesavetool\";\r\n\r\nexport class PropertyStore extends Tuple {\r\n    constructor() {\r\n        super();\r\n    }\r\n    getPropertyIndex(name) {\r\n        return this.Properties.findIndex(p => p.Name === name)\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties.push(PropertyFactory.create(prop));\r\n    }\r\n    delProperty(name) {\r\n        let indx = this.getPropertyIndex(name);\r\n        if(indx !== -1)\r\n            this.Properties.splice(indx, 1);\r\n    }\r\n    has(name) {\r\n        return this.getPropertyIndex(name) !== -1;\r\n    }\r\n    static from(obj) {\r\n        let ret = new PropertyStore();\r\n        ret.Name = obj.Name;\r\n        ret.Type = obj.Type;\r\n        ret.Properties = [];\r\n        if(obj.Properties)\r\n            obj.Properties.forEach(prop => ret.Properties.push(PropertyFactory.create(prop)))\r\n        return ret;\r\n    }\r\n}","import { \r\n    Gvas, \r\n    GvasHeader, \r\n    PropertyFactory \r\n} from 'uesavetool';\r\n\r\nimport { \r\n    SAVESLOT,\r\n    Prng,\r\n    T_GVAS_HEADER,\r\n    RunPropertyStore, \r\n    CharacterPropertyStore \r\n} from './index.js';\r\n\r\nexport class ContinueStateV2 extends Gvas {\r\n    constructor() {\r\n        super();\r\n        this.Header = GvasHeader.from(T_GVAS_HEADER);\r\n    }\r\n    get Slot() {\r\n        return PropertyFactory.create(SAVESLOT.ContinueStateV2);\r\n    }\r\n    addProperty(prop) {\r\n        this.Properties\r\n            .Properties.push(prop);\r\n    }\r\n    static seededGen({seed, char, diff, opts}) {\r\n        let save = new ContinueStateV2();\r\n        save.addProperty(save.Slot);\r\n        Prng.init(seed);\r\n        save.addProperty(CharacterPropertyStore.generate(seed, char, opts));\r\n        save.addProperty(RunPropertyStore.generate(seed, diff, opts));\r\n        Prng.destroy();\r\n        return save;\r\n    }\r\n}","import {\r\n    PropertyFactory,\r\n    Tuple\r\n} from 'uesavetool'\r\n\r\nimport {\r\n    deep_copy_template,\r\n    ITEMS\r\n} from './index.js'\r\n\r\nexport class ItemWeightPair extends Tuple {\r\n    constructor(type) {\r\n        super()\r\n        this.Name = `BPM${type==='Weapon'? type : 'Ability'}WeightPair`,\r\n        this.Type = \"Tuple\",\r\n        this.Properties = [\r\n            {\r\n                \"Name\": `BPM${type==='Weapon'? type : 'Ability'}\\0`,\r\n                \"Type\": \"SoftObjectProperty\\u0000\",\r\n                \"Property\": \"\"\r\n            },\r\n            {\r\n                \"Name\": \"Weight\\u0000\",\r\n                \"Type\": \"FloatProperty\\u0000\",\r\n                \"Property\": []\r\n            }\r\n        ]\r\n    }\r\n    set Property([item, weight]) {\r\n        this.Item = item;\r\n        this.Weight = weight;\r\n    }\r\n    get Property() {\r\n        return [this.Item, this.Weight];\r\n    }\r\n    set Item(value) {\r\n        this.Properties[0].Property = value;\r\n    }\r\n    get Item() {\r\n        let [name, prop] = deep_copy_template(ITEMS.find(([n, i]) => i.Value === this.Properties[0].Property));\r\n        return name;\r\n    }\r\n    set Weight(value) {\r\n        this.Properties[1].Property = [0, value];\r\n    }\r\n    get Weight() {\r\n        return this.Properties[1].Property[1];\r\n    }\r\n    static fromPair([name, weight]) {\r\n        let [item, prop] = deep_copy_template(ITEMS.find(([n, i]) => n === name));\r\n        if(item === undefined)\r\n            console.log(`Mislabled/Missing Item '${name}'`);\r\n        let item_weight_pair = new ItemWeightPair(prop.Type);\r\n        item_weight_pair.Property = [prop.Value, weight];\r\n        return item_weight_pair;\r\n    }\r\n    static from(obj) {\r\n        let ret = new ItemWeightPair();\r\n        ret.Name = obj.Name;\r\n        ret.Type = obj.Type;\r\n        ret.Properties = [];\r\n        if(obj.Properties !== undefined)\r\n            obj.Properties.forEach(prop => ret.Properties.push(PropertyFactory.create(prop)))\r\n        return ret;\r\n    }\r\n}","import React from 'react';\r\nimport styles from './dropdowns.css';\r\n\r\nclass Dropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selection:\"\"}\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    valid() {\r\n        return this.state.selection !== \"\";\r\n    }\r\n    handleChange(e) {\r\n        console.log(`Selected ${e.target.value}`)\r\n        this.setState({\r\n            selection:e.target.value\r\n        }, () => this.props.onChange(this));\r\n    }\r\n    createOptions() {\r\n        return this.props.options.map((opt, i) => {\r\n            return <option className=\"dropdown-option\" key={i} value={opt}>{opt}</option>\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={styles}>\r\n                <select className=\"Dropdown\" \r\n                    onChange={this.handleChange}>\r\n                    <option value=\"\">--Choose a {this.props.name}--</option>\r\n                    {this.createOptions()}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown;","import React from \"react\";\r\nimport Styles from './checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {checked:false};\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick(e) {\r\n        this.setState({\r\n            checked:!this.state.checked\r\n        }, () => this.props.onChange(this));\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={Styles}>\r\n                <button className={`checkbox${this.state.checked ? '-active' : ''}`} \r\n                        onClick={this.handleClick} \r\n                        checked={this.state.checked}/>\r\n                <label className=\"label\">{this.props.label}</label>\r\n            </div>\r\n          )\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React from 'react';\r\nimport SeedField from '../seed/seedfield';\r\nimport DownloadButton from '../download/download';\r\nimport VersionInfo from '../version/version';\r\nimport styles from './ssg.css';\r\nimport bpmssg from 'bpm-ssg'\r\nimport Dropdown from '../dropdowns/dropdown';\r\nimport Checkbox from '../checkboxes/checkbox';\r\n\r\nconst CHARACTERS = [\r\n    \"Goll\", \"Freyr\", \"Hildr\", \"Njord\", \"Odr\",\r\n    \"Skuld\", \"Geri\", \"Herfjoter\", \"Run\", \"Sanngridr\"\r\n]\r\nconst DIFFICULTIES = [\r\n    \"Easy\", \"Hard\", \"Hellish\", \"Practice\"\r\n]\r\nconst FLOORS = [\r\n    [\"Asgard I\", '0'], [\"Asgard II\", '1'], [\"Asgard Crypts\", \"Crypts\"],\r\n    [\"Vanaheim I\", '2'], [\"Vanaheim II\", '3'],\r\n    [\"Svartalfheim I\", '4'], [\"Svartalfheim II\", '5'],\r\n    [\"Helheim I\", '6'], [\"Helheim II\", '7']\r\n]\r\n\r\nclass SSG extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            seed:\"\",\r\n            char:\"\",\r\n            diff:\"\",\r\n            opts:{\r\n                FLOORINDEX:0,\r\n                ENHANCE:false\r\n            }\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        const isComponent = (name) => e.props.name === name;\r\n        const getFloorIndex = (floor) => FLOORS.find(([f, i]) => f === floor)[1];\r\n        let seed = e.state.seed;\r\n        let sel = e.state.selection;\r\n        let opt = e.state.checked;\r\n        this.setState({\r\n            seed:(isComponent('Seed') ? seed : this.state.seed),\r\n            char:(isComponent('Character') ? sel : this.state.char),\r\n            diff:(isComponent('Difficulty') ? sel : this.state.diff),\r\n            opts:{\r\n                FLOORINDEX:(isComponent('Floor') && e.valid() ? getFloorIndex(sel) : this.state.opts.FLOORINDEX),\r\n                ENHANCE:(isComponent('Enhance') ? opt : this.state.opts.ENHANCE)\r\n            }\r\n        }, () => console.log(this.state));\r\n    }\r\n    handleClick(e) {\r\n        let args = Object.keys(this.state);\r\n        let arg_msg = {\r\n            seed:'\\tSeed\\n',\r\n            char:'\\tCharacter\\n',\r\n            diff:'\\tDifficulty\\n'\r\n        }\r\n        if(this.validate(args)) {\r\n            let data = bpmssg(this.state).serialize();\r\n            let filename = 'ContinueStateV2.sav';\r\n            e.activateDownload({data, filename});\r\n        }\r\n        else {\r\n            let unset = args.map(k => this.state[k] === \"\" ? arg_msg[k] : '');\r\n            window.alert(`The following options are required:\\n${unset.join('')}`);\r\n        }\r\n    }\r\n    validate(args) {\r\n        let result = true;\r\n        args.forEach(key => {\r\n            if(key !== 'opts' && this.state[key] === \"\") {\r\n                result = false;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"SSG\" style={styles}>\r\n                \r\n                <div className=\"ssg-opt\">\r\n                    <Dropdown name=\"Character\" options={CHARACTERS}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <Dropdown name=\"Difficulty\" options={DIFFICULTIES}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <Dropdown name=\"Floor\" options={FLOORS.map(([f, i]) => f)}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <SeedField name=\"Seed\" seed={this.state.seed}\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-opt\">\r\n                    <Checkbox name=\"Enhance\" label=\"Enhanced Item Pools\"\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"ssg-gen\">\r\n                    <DownloadButton onClick={this.handleClick} label=\"Generate Save\"/>\r\n                </div>\r\n                <div>\r\n                    <VersionInfo/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\nexport default SSG;","import { ContinueStateV2 } from './src/index.js';\r\nexport default function bpmssg(args) {\r\n    return ContinueStateV2.seededGen(args);\r\n}\r\n\r\nexport * from './src/index.js'\r\nexport { bpmssg }","export default __webpack_public_path__ + \"static/media/bpm_logo_1x1.96a7124c.png\";","import SSG from './components/ssg/ssg'\nimport bpm_logo from './media/bpm_logo_1x1.png'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <img className=\"logo\" src={bpm_logo} alt=\"BPM: Bullets Per Minute logo\"/>\n        <p className=\"Title\">Seeded Save Generator</p>\n      </div>\n      <div>\n        <SSG />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}